{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0","program":"/Users/samv/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","pest","--edition=2018","/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","--cfg","feature=\"thiserror\"","-C","metadata=dc17df3650634cb3","-C","extra-filename=-dc17df3650634cb3","--out-dir","/Users/samv/uiowahack/geodesic_voronoi_tessallation/target/rls/debug/deps","-L","dependency=/Users/samv/uiowahack/geodesic_voronoi_tessallation/target/rls/debug/deps","--extern","thiserror=/Users/samv/uiowahack/geodesic_voronoi_tessallation/target/rls/debug/deps/libthiserror-04632d20dff3be5c.rmeta","--extern","ucd_trie=/Users/samv/uiowahack/geodesic_voronoi_tessallation/target/rls/debug/deps/libucd_trie-862a5a491ebfcb51.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/samv/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":"/Users/samv/uiowahack/geodesic_voronoi_tessallation/target/rls/debug/deps/libpest-dc17df3650634cb3.rmeta"},"prelude":{"crate_id":{"name":"pest","disambiguator":[12919943750414119242,0]},"crate_root":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src","external_crates":[{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[2571568952482378191,0]}},{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3381153973743375855,0]}},{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[859990804154970231,0]}},{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[13406540867394126232,0]}},{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","num":5,"id":{"name":"std","disambiguator":[17848356123076402324,0]}},{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[8031689522704144356,0]}},{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7051263317280381750,0]}},{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15559094268889944187,0]}},{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[9861791662769261467,0]}},{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14233487050114319148,0]}},{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[4193298229573560736,0]}},{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[15931660052351559034,0]}},{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[762912116291214375,0]}},{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[16903055257668955945,0]}},{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[561513094272624117,0]}},{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[59110909806878804,0]}},{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[2820196564566765046,0]}},{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[839392276863948394,0]}},{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[17041169231870870072,0]}},{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","num":20,"id":{"name":"ucd_trie","disambiguator":[11569000563415439479,0]}},{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","num":21,"id":{"name":"thiserror","disambiguator":[2012045390710761250,0]}},{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","num":22,"id":{"name":"thiserror_impl","disambiguator":[1753386713042204453,0]}}],"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":406,"byte_end":3861,"line_start":9,"line_end":115,"column_start":1,"column_end":58}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":448},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":2643,"byte_end":2649,"line_start":77,"line_end":77,"column_start":24,"column_end":30},"alias_span":null,"name":"Parser","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":513},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":2686,"byte_end":2700,"line_start":79,"line_end":79,"column_start":5,"column_end":19},"alias_span":null,"name":"set_call_limit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":521},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":2702,"byte_end":2707,"line_start":79,"line_end":79,"column_start":21,"column_end":26},"alias_span":null,"name":"state","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1093},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":2709,"byte_end":2718,"line_start":79,"line_end":79,"column_start":28,"column_end":37},"alias_span":null,"name":"Atomicity","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1075},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":2720,"byte_end":2729,"line_start":79,"line_end":79,"column_start":39,"column_end":48},"alias_span":null,"name":"Lookahead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1111},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":2731,"byte_end":2739,"line_start":79,"line_end":79,"column_start":50,"column_end":58},"alias_span":null,"name":"MatchDir","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":510},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":2741,"byte_end":2752,"line_start":79,"line_end":79,"column_start":60,"column_end":71},"alias_span":null,"name":"ParseResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1131},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":2754,"byte_end":2765,"line_start":79,"line_end":79,"column_start":73,"column_end":84},"alias_span":null,"name":"ParserState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1147},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":2795,"byte_end":2803,"line_start":81,"line_end":81,"column_start":26,"column_end":34},"alias_span":null,"name":"Position","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":872},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":2827,"byte_end":2832,"line_start":82,"line_end":82,"column_start":23,"column_end":28},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":864},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":2834,"byte_end":2843,"line_start":82,"line_end":82,"column_start":30,"column_end":39},"alias_span":null,"name":"LinesSpan","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1202},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":2845,"byte_end":2849,"line_start":82,"line_end":82,"column_start":41,"column_end":45},"alias_span":null,"name":"Span","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1231},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":2874,"byte_end":2879,"line_start":83,"line_end":83,"column_start":23,"column_end":28},"alias_span":null,"name":"Token","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":152},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/mod.rs","byte_start":31107,"byte_end":31116,"line_start":18,"line_end":18,"column_start":27,"column_end":36},"alias_span":null,"name":"FlatPairs","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":0,"index":1029},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/mod.rs","byte_start":31138,"byte_end":31142,"line_start":19,"line_end":19,"column_start":21,"column_end":25},"alias_span":null,"name":"Pair","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":0,"index":1040},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/mod.rs","byte_start":31165,"byte_end":31170,"line_start":20,"line_end":20,"column_start":22,"column_end":27},"alias_span":null,"name":"Pairs","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":0,"index":1064},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/mod.rs","byte_start":31248,"byte_end":31254,"line_start":22,"line_end":22,"column_start":23,"column_end":29},"alias_span":null,"name":"Tokens","value":"","parent":{"krate":0,"index":121}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":406,"byte_end":3861,"line_start":9,"line_end":115,"column_start":1,"column_end":58},"name":"","qualname":"::","value":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":121},{"krate":0,"index":434},{"krate":0,"index":438},{"krate":0,"index":451},{"krate":0,"index":573},{"krate":0,"index":645},{"krate":0,"index":759},{"krate":0,"index":810},{"krate":0,"index":880},{"krate":0,"index":910},{"krate":0,"index":914},{"krate":0,"index":922},{"krate":0,"index":923}],"decl_id":null,"docs":" # pest. The Elegant Parser","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":406,"byte_end":416,"line_start":9,"line_end":9,"column_start":1,"column_end":11}},{"value":"/ # pest. The Elegant Parser","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":418,"byte_end":448,"line_start":11,"line_end":11,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":449,"byte_end":452,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ pest is a general purpose parser written in Rust with a focus on accessibility, correctness,","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":453,"byte_end":549,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ and performance. It uses parsing expression grammars (or [PEG]) as input, which are similar in","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":550,"byte_end":648,"line_start":14,"line_end":14,"column_start":1,"column_end":99}},{"value":"/ spirit to regular expressions, but which offer the enhanced expressivity needed to parse","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":649,"byte_end":741,"line_start":15,"line_end":15,"column_start":1,"column_end":93}},{"value":"/ complex languages.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":742,"byte_end":764,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":765,"byte_end":768,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [PEG]: https://en.wikipedia.org/wiki/Parsing_expression_grammar","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":769,"byte_end":836,"line_start":18,"line_end":18,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":837,"byte_end":840,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ## Getting started","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":841,"byte_end":863,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":864,"byte_end":867,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The recommended way to start parsing with pest is to read the official [book].","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":868,"byte_end":950,"line_start":22,"line_end":22,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":951,"byte_end":954,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Other helpful resources:","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":955,"byte_end":983,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":984,"byte_end":987,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * API reference on [docs.rs]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":988,"byte_end":1020,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/ * play with grammars and share them on our [fiddle]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":1021,"byte_end":1076,"line_start":27,"line_end":27,"column_start":1,"column_end":56}},{"value":"/ * leave feedback, ask questions, or greet us on [Gitter]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":1077,"byte_end":1137,"line_start":28,"line_end":28,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":1138,"byte_end":1141,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [book]: https://pest-parser.github.io/book","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":1142,"byte_end":1188,"line_start":30,"line_end":30,"column_start":1,"column_end":47}},{"value":"/ [docs.rs]: https://docs.rs/pest","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":1189,"byte_end":1224,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"/ [fiddle]: https://pest-parser.github.io/#editor","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":1225,"byte_end":1276,"line_start":32,"line_end":32,"column_start":1,"column_end":52}},{"value":"/ [Gitter]: https://gitter.im/dragostis/pest","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":1277,"byte_end":1323,"line_start":33,"line_end":33,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":1324,"byte_end":1327,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":1328,"byte_end":1340,"line_start":35,"line_end":35,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":1341,"byte_end":1344,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ The core of pest is the trait [`Parser`], which provides an interface to the parsing","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":1345,"byte_end":1433,"line_start":37,"line_end":37,"column_start":1,"column_end":89}},{"value":"/ functionality.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":1434,"byte_end":1452,"line_start":38,"line_end":38,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":1453,"byte_end":1456,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ The accompanying crate `pest_derive` can automatically generate a [`Parser`] from a PEG","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":1457,"byte_end":1548,"line_start":40,"line_end":40,"column_start":1,"column_end":92}},{"value":"/ grammar. Using `pest_derive` is highly encouraged, but it is also possible to implement","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":1549,"byte_end":1640,"line_start":41,"line_end":41,"column_start":1,"column_end":92}},{"value":"/ [`Parser`] manually if required.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":1641,"byte_end":1677,"line_start":42,"line_end":42,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":1678,"byte_end":1681,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ## `.pest` files","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":1682,"byte_end":1702,"line_start":44,"line_end":44,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":1703,"byte_end":1706,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Grammar definitions reside in custom `.pest` files located in the crate `src` directory.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":1707,"byte_end":1799,"line_start":46,"line_end":46,"column_start":1,"column_end":93}},{"value":"/ Parsers are automatically generated from these files using `#[derive(Parser)]` and a special","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":1800,"byte_end":1896,"line_start":47,"line_end":47,"column_start":1,"column_end":97}},{"value":"/ `#[grammar = \"...\"]` attribute on a dummy struct.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":1897,"byte_end":1950,"line_start":48,"line_end":48,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":1951,"byte_end":1954,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":1955,"byte_end":1968,"line_start":50,"line_end":50,"column_start":1,"column_end":14}},{"value":"/ #[derive(Parser)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":1969,"byte_end":1990,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/ #[grammar = \"path/to/my_grammar.pest\"] // relative to src","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":1991,"byte_end":2052,"line_start":52,"line_end":52,"column_start":1,"column_end":62}},{"value":"/ struct MyParser;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":2053,"byte_end":2073,"line_start":53,"line_end":53,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":2074,"byte_end":2081,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":2082,"byte_end":2085,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The syntax of `.pest` files is documented in the [`pest_derive` crate].","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":2086,"byte_end":2161,"line_start":56,"line_end":56,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":2162,"byte_end":2165,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ## Inline grammars","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":2166,"byte_end":2188,"line_start":58,"line_end":58,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":2189,"byte_end":2192,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Grammars can also be inlined by using the `#[grammar_inline = \"...\"]` attribute.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":2193,"byte_end":2277,"line_start":60,"line_end":60,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":2278,"byte_end":2281,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ [`Parser`]: trait.Parser.html","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":2282,"byte_end":2315,"line_start":62,"line_end":62,"column_start":1,"column_end":34}},{"value":"/ [`pest_derive` crate]: https://docs.rs/pest_derive/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":2316,"byte_end":2371,"line_start":63,"line_end":63,"column_start":1,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":54},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":946},{"krate":0,"index":954},{"krate":0,"index":925},{"krate":0,"index":928},{"krate":0,"index":931},{"krate":0,"index":933},{"krate":0,"index":936},{"krate":0,"index":940},{"krate":0,"index":942},{"krate":0,"index":977},{"krate":0,"index":984},{"krate":0,"index":956},{"krate":0,"index":959},{"krate":0,"index":962},{"krate":0,"index":964},{"krate":0,"index":967},{"krate":0,"index":971},{"krate":0,"index":973},{"krate":0,"index":986},{"krate":0,"index":993},{"krate":0,"index":995},{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":1000},{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1007},{"krate":0,"index":1015},{"krate":0,"index":1017},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1022},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":91},{"krate":0,"index":110},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":120}],"decl_id":null,"docs":" Types for different kinds of parsing failures.\n","sig":null,"attributes":[{"value":"/ Types for different kinds of parsing failures.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":4270,"byte_end":4320,"line_start":10,"line_end":10,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":946},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":4733,"byte_end":4738,"line_start":29,"line_end":29,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error { variant, location, line_col }","parent":null,"children":[{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953}],"decl_id":null,"docs":" Parse-related error type.\n","sig":null,"attributes":[{"value":"/ Parse-related error type.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":4592,"byte_end":4621,"line_start":26,"line_end":26,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":948},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":4781,"byte_end":4788,"line_start":31,"line_end":31,"column_start":9,"column_end":16},"name":"variant","qualname":"::error::Error::variant","value":"error::ErrorVariant<R>","parent":{"krate":0,"index":946},"children":[],"decl_id":null,"docs":" Variant of the error\n","sig":null,"attributes":[{"value":"/ Variant of the error","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":4748,"byte_end":4772,"line_start":30,"line_end":30,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":949},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":4856,"byte_end":4864,"line_start":33,"line_end":33,"column_start":9,"column_end":17},"name":"location","qualname":"::error::Error::location","value":"error::InputLocation","parent":{"krate":0,"index":946},"children":[],"decl_id":null,"docs":" Location within the input string\n","sig":null,"attributes":[{"value":"/ Location within the input string","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":4811,"byte_end":4847,"line_start":32,"line_end":32,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":950},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":4933,"byte_end":4941,"line_start":35,"line_end":35,"column_start":9,"column_end":17},"name":"line_col","qualname":"::error::Error::line_col","value":"error::LineColLocation","parent":{"krate":0,"index":946},"children":[],"decl_id":null,"docs":" Line/column within the input string\n","sig":null,"attributes":[{"value":"/ Line/column within the input string","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":4885,"byte_end":4924,"line_start":34,"line_end":34,"column_start":5,"column_end":44}}]},{"kind":"StructVariant","id":{"krate":0,"index":979},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":5282,"byte_end":5294,"line_start":46,"line_end":46,"column_start":5,"column_end":17},"name":"ParsingError","qualname":"::error::ErrorVariant::ParsingError","value":"ErrorVariant::ParsingError { positives, negatives }","parent":{"krate":0,"index":977},"children":[],"decl_id":null,"docs":" Generated parsing error with expected and unexpected `Rule`s\n","sig":null,"attributes":[{"value":"/ Generated parsing error with expected and unexpected `Rule`s","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":5213,"byte_end":5277,"line_start":45,"line_end":45,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":980},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":5335,"byte_end":5344,"line_start":48,"line_end":48,"column_start":9,"column_end":18},"name":"positives","qualname":"::error::ErrorVariant::ParsingError::positives","value":"alloc::vec::Vec<R>","parent":{"krate":0,"index":979},"children":[],"decl_id":null,"docs":" Positive attempts\n","sig":null,"attributes":[{"value":"/ Positive attempts","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":5305,"byte_end":5326,"line_start":47,"line_end":47,"column_start":9,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":981},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":5392,"byte_end":5401,"line_start":50,"line_end":50,"column_start":9,"column_end":18},"name":"negatives","qualname":"::error::ErrorVariant::ParsingError::negatives","value":"alloc::vec::Vec<R>","parent":{"krate":0,"index":979},"children":[],"decl_id":null,"docs":" Negative attempts\n","sig":null,"attributes":[{"value":"/ Negative attempts","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":5362,"byte_end":5383,"line_start":49,"line_end":49,"column_start":9,"column_end":30}}]},{"kind":"StructVariant","id":{"krate":0,"index":982},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":5458,"byte_end":5469,"line_start":53,"line_end":53,"column_start":5,"column_end":16},"name":"CustomError","qualname":"::error::ErrorVariant::CustomError","value":"ErrorVariant::CustomError { message }","parent":{"krate":0,"index":977},"children":[],"decl_id":null,"docs":" Custom error with a message\n","sig":null,"attributes":[{"value":"/ Custom error with a message","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":5422,"byte_end":5453,"line_start":52,"line_end":52,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":983},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":5510,"byte_end":5517,"line_start":55,"line_end":55,"column_start":9,"column_end":16},"name":"message","qualname":"::error::ErrorVariant::CustomError::message","value":"alloc::string::String","parent":{"krate":0,"index":982},"children":[],"decl_id":null,"docs":" Short explanation\n","sig":null,"attributes":[{"value":"/ Short explanation","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":5480,"byte_end":5501,"line_start":54,"line_end":54,"column_start":9,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":977},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":5191,"byte_end":5203,"line_start":44,"line_end":44,"column_start":10,"column_end":22},"name":"ErrorVariant","qualname":"::error::ErrorVariant","value":"enum ErrorVariant<R> {\n    ParsingError {\n            positives: Vec<R>,\n            negatives: Vec<R>,\n        },\n    CustomError {\n            message: String,\n        },\n}","parent":null,"children":[{"krate":0,"index":979},{"krate":0,"index":982}],"decl_id":null,"docs":" Different kinds of parsing errors.\n","sig":null,"attributes":[{"value":"/ Different kinds of parsing errors.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":5043,"byte_end":5081,"line_start":41,"line_end":41,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":987},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":5699,"byte_end":5702,"line_start":63,"line_end":63,"column_start":5,"column_end":8},"name":"Pos","qualname":"::error::InputLocation::Pos","value":"InputLocation::Pos(usize)","parent":{"krate":0,"index":986},"children":[],"decl_id":null,"docs":" `Error` was created by `Error::new_from_pos`\n","sig":null,"attributes":[{"value":"/ `Error` was created by `Error::new_from_pos`","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":5646,"byte_end":5694,"line_start":62,"line_end":62,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":989},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":5703,"byte_end":5708,"line_start":63,"line_end":63,"column_start":9,"column_end":14},"name":"0","qualname":"::error::InputLocation::Pos::0","value":"usize","parent":{"krate":0,"index":987},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":990},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":5769,"byte_end":5773,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Span","qualname":"::error::InputLocation::Span","value":"InputLocation::Span((usize, usize))","parent":{"krate":0,"index":986},"children":[],"decl_id":null,"docs":" `Error` was created by `Error::new_from_span`\n","sig":null,"attributes":[{"value":"/ `Error` was created by `Error::new_from_span`","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":5715,"byte_end":5764,"line_start":64,"line_end":64,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":992},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":5774,"byte_end":5788,"line_start":65,"line_end":65,"column_start":10,"column_end":24},"name":"0","qualname":"::error::InputLocation::Span::0","value":"(usize, usize)","parent":{"krate":0,"index":990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":986},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":5626,"byte_end":5639,"line_start":61,"line_end":61,"column_start":10,"column_end":23},"name":"InputLocation","qualname":"::error::InputLocation","value":"enum InputLocation { Pos(usize), Span((usize, usize)), }","parent":null,"children":[{"krate":0,"index":987},{"krate":0,"index":990}],"decl_id":null,"docs":" Where an `Error` has occurred.\n","sig":null,"attributes":[{"value":"/ Where an `Error` has occurred.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":5537,"byte_end":5571,"line_start":59,"line_end":59,"column_start":1,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1008},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":5990,"byte_end":5993,"line_start":72,"line_end":72,"column_start":5,"column_end":8},"name":"Pos","qualname":"::error::LineColLocation::Pos","value":"LineColLocation::Pos((usize, usize))","parent":{"krate":0,"index":1007},"children":[],"decl_id":null,"docs":" Line/column pair if `Error` was created by `Error::new_from_pos`\n","sig":null,"attributes":[{"value":"/ Line/column pair if `Error` was created by `Error::new_from_pos`","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":5917,"byte_end":5985,"line_start":71,"line_end":71,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":1010},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":5994,"byte_end":6008,"line_start":72,"line_end":72,"column_start":9,"column_end":23},"name":"0","qualname":"::error::LineColLocation::Pos::0","value":"(usize, usize)","parent":{"krate":0,"index":1008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1011},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":6090,"byte_end":6094,"line_start":74,"line_end":74,"column_start":5,"column_end":9},"name":"Span","qualname":"::error::LineColLocation::Span","value":"LineColLocation::Span((usize, usize), (usize, usize))","parent":{"krate":0,"index":1007},"children":[],"decl_id":null,"docs":" Line/column pairs if `Error` was created by `Error::new_from_span`\n","sig":null,"attributes":[{"value":"/ Line/column pairs if `Error` was created by `Error::new_from_span`","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":6015,"byte_end":6085,"line_start":73,"line_end":73,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":1013},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":6095,"byte_end":6109,"line_start":74,"line_end":74,"column_start":10,"column_end":24},"name":"0","qualname":"::error::LineColLocation::Span::0","value":"(usize, usize)","parent":{"krate":0,"index":1011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1014},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":6111,"byte_end":6125,"line_start":74,"line_end":74,"column_start":26,"column_end":40},"name":"1","qualname":"::error::LineColLocation::Span::1","value":"(usize, usize)","parent":{"krate":0,"index":1011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1007},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":5895,"byte_end":5910,"line_start":70,"line_end":70,"column_start":10,"column_end":25},"name":"LineColLocation","qualname":"::error::LineColLocation","value":"enum LineColLocation {\n    Pos((usize, usize)),\n    Span((usize, usize), (usize, usize)),\n}","parent":null,"children":[{"krate":0,"index":1008},{"krate":0,"index":1011}],"decl_id":null,"docs":" Line/column where an `Error` has occurred.\n","sig":null,"attributes":[{"value":"/ Line/column where an `Error` has occurred.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":5794,"byte_end":5840,"line_start":68,"line_end":68,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":6947,"byte_end":6959,"line_start":104,"line_end":104,"column_start":12,"column_end":24},"name":"new_from_pos","qualname":"<Error<R>>::new_from_pos","value":"fn new_from_pos<'_>(ErrorVariant<R>, Position) -> Error<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates `Error` from `ErrorVariant` and `Position`.","sig":null,"attributes":[{"value":"/ Creates `Error` from `ErrorVariant` and `Position`.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":6164,"byte_end":6219,"line_start":78,"line_end":78,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":6224,"byte_end":6227,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":6232,"byte_end":6246,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":6251,"byte_end":6254,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":6259,"byte_end":6266,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ # use pest::error::{Error, ErrorVariant};","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":6271,"byte_end":6316,"line_start":83,"line_end":83,"column_start":5,"column_end":50}},{"value":"/ # use pest::Position;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":6321,"byte_end":6346,"line_start":84,"line_end":84,"column_start":5,"column_end":30}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":6351,"byte_end":6387,"line_start":85,"line_end":85,"column_start":5,"column_end":41}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":6392,"byte_end":6417,"line_start":86,"line_end":86,"column_start":5,"column_end":30}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":6422,"byte_end":6495,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ # enum Rule {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":6500,"byte_end":6517,"line_start":88,"line_end":88,"column_start":5,"column_end":22}},{"value":"/ #     open_paren,","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":6522,"byte_end":6543,"line_start":89,"line_end":89,"column_start":5,"column_end":26}},{"value":"/ #     closed_paren","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":6548,"byte_end":6570,"line_start":90,"line_end":90,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":6575,"byte_end":6582,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/ # let input = \"\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":6587,"byte_end":6608,"line_start":92,"line_end":92,"column_start":5,"column_end":26}},{"value":"/ # let pos = Position::from_start(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":6613,"byte_end":6657,"line_start":93,"line_end":93,"column_start":5,"column_end":49}},{"value":"/ let error = Error::new_from_pos(","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":6662,"byte_end":6698,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/     ErrorVariant::ParsingError {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":6703,"byte_end":6739,"line_start":95,"line_end":95,"column_start":5,"column_end":41}},{"value":"/         positives: vec![Rule::open_paren],","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":6744,"byte_end":6790,"line_start":96,"line_end":96,"column_start":5,"column_end":51}},{"value":"/         negatives: vec![Rule::closed_paren]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":6795,"byte_end":6842,"line_start":97,"line_end":97,"column_start":5,"column_end":52}},{"value":"/     },","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":6847,"byte_end":6857,"line_start":98,"line_end":98,"column_start":5,"column_end":15}},{"value":"/     pos","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":6862,"byte_end":6873,"line_start":99,"line_end":99,"column_start":5,"column_end":16}},{"value":"/ );","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":6878,"byte_end":6884,"line_start":100,"line_end":100,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":6889,"byte_end":6892,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ println!(\"{}\", error);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":6897,"byte_end":6923,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":6928,"byte_end":6935,"line_start":103,"line_end":103,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":8395,"byte_end":8408,"line_start":150,"line_end":150,"column_start":12,"column_end":25},"name":"new_from_span","qualname":"<Error<R>>::new_from_span","value":"fn new_from_span<'_>(ErrorVariant<R>, Span) -> Error<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates `Error` from `ErrorVariant` and `Span`.","sig":null,"attributes":[{"value":"/ Creates `Error` from `ErrorVariant` and `Span`.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":7530,"byte_end":7581,"line_start":122,"line_end":122,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":7586,"byte_end":7589,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":7594,"byte_end":7608,"line_start":124,"line_end":124,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":7613,"byte_end":7616,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":7621,"byte_end":7628,"line_start":126,"line_end":126,"column_start":5,"column_end":12}},{"value":"/ # use pest::error::{Error, ErrorVariant};","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":7633,"byte_end":7678,"line_start":127,"line_end":127,"column_start":5,"column_end":50}},{"value":"/ # use pest::{Position, Span};","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":7683,"byte_end":7716,"line_start":128,"line_end":128,"column_start":5,"column_end":38}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":7721,"byte_end":7757,"line_start":129,"line_end":129,"column_start":5,"column_end":41}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":7762,"byte_end":7787,"line_start":130,"line_end":130,"column_start":5,"column_end":30}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":7792,"byte_end":7865,"line_start":131,"line_end":131,"column_start":5,"column_end":78}},{"value":"/ # enum Rule {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":7870,"byte_end":7887,"line_start":132,"line_end":132,"column_start":5,"column_end":22}},{"value":"/ #     open_paren,","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":7892,"byte_end":7913,"line_start":133,"line_end":133,"column_start":5,"column_end":26}},{"value":"/ #     closed_paren","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":7918,"byte_end":7940,"line_start":134,"line_end":134,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":7945,"byte_end":7952,"line_start":135,"line_end":135,"column_start":5,"column_end":12}},{"value":"/ # let input = \"\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":7957,"byte_end":7978,"line_start":136,"line_end":136,"column_start":5,"column_end":26}},{"value":"/ # let start = Position::from_start(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":7983,"byte_end":8029,"line_start":137,"line_end":137,"column_start":5,"column_end":51}},{"value":"/ # let end = start.clone();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":8034,"byte_end":8064,"line_start":138,"line_end":138,"column_start":5,"column_end":35}},{"value":"/ # let span = start.span(&end);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":8069,"byte_end":8103,"line_start":139,"line_end":139,"column_start":5,"column_end":39}},{"value":"/ let error = Error::new_from_span(","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":8108,"byte_end":8145,"line_start":140,"line_end":140,"column_start":5,"column_end":42}},{"value":"/     ErrorVariant::ParsingError {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":8150,"byte_end":8186,"line_start":141,"line_end":141,"column_start":5,"column_end":41}},{"value":"/         positives: vec![Rule::open_paren],","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":8191,"byte_end":8237,"line_start":142,"line_end":142,"column_start":5,"column_end":51}},{"value":"/         negatives: vec![Rule::closed_paren]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":8242,"byte_end":8289,"line_start":143,"line_end":143,"column_start":5,"column_end":52}},{"value":"/     },","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":8294,"byte_end":8304,"line_start":144,"line_end":144,"column_start":5,"column_end":15}},{"value":"/     span","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":8309,"byte_end":8321,"line_start":145,"line_end":145,"column_start":5,"column_end":17}},{"value":"/ );","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":8326,"byte_end":8332,"line_start":146,"line_end":146,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":8337,"byte_end":8340,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ println!(\"{}\", error);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":8345,"byte_end":8371,"line_start":148,"line_end":148,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":8376,"byte_end":8383,"line_start":149,"line_end":149,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":10544,"byte_end":10553,"line_start":212,"line_end":212,"column_start":12,"column_end":21},"name":"with_path","qualname":"<Error<R>>::with_path","value":"fn with_path<'_>(Self, &'_ str) -> Error<R>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Error` variant with `path` which is shown when formatted with `Display`.","sig":null,"attributes":[{"value":"/ Returns `Error` variant with `path` which is shown when formatted with `Display`.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":9761,"byte_end":9846,"line_start":188,"line_end":188,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":9851,"byte_end":9854,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":9859,"byte_end":9873,"line_start":190,"line_end":190,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":9878,"byte_end":9881,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":9886,"byte_end":9893,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/ # use pest::error::{Error, ErrorVariant};","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":9898,"byte_end":9943,"line_start":193,"line_end":193,"column_start":5,"column_end":50}},{"value":"/ # use pest::Position;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":9948,"byte_end":9973,"line_start":194,"line_end":194,"column_start":5,"column_end":30}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":9978,"byte_end":10014,"line_start":195,"line_end":195,"column_start":5,"column_end":41}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":10019,"byte_end":10044,"line_start":196,"line_end":196,"column_start":5,"column_end":30}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":10049,"byte_end":10122,"line_start":197,"line_end":197,"column_start":5,"column_end":78}},{"value":"/ # enum Rule {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":10127,"byte_end":10144,"line_start":198,"line_end":198,"column_start":5,"column_end":22}},{"value":"/ #     open_paren,","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":10149,"byte_end":10170,"line_start":199,"line_end":199,"column_start":5,"column_end":26}},{"value":"/ #     closed_paren","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":10175,"byte_end":10197,"line_start":200,"line_end":200,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":10202,"byte_end":10209,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/ # let input = \"\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":10214,"byte_end":10235,"line_start":202,"line_end":202,"column_start":5,"column_end":26}},{"value":"/ # let pos = Position::from_start(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":10240,"byte_end":10284,"line_start":203,"line_end":203,"column_start":5,"column_end":49}},{"value":"/ Error::new_from_pos(","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":10289,"byte_end":10313,"line_start":204,"line_end":204,"column_start":5,"column_end":29}},{"value":"/     ErrorVariant::ParsingError {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":10318,"byte_end":10354,"line_start":205,"line_end":205,"column_start":5,"column_end":41}},{"value":"/         positives: vec![Rule::open_paren],","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":10359,"byte_end":10405,"line_start":206,"line_end":206,"column_start":5,"column_end":51}},{"value":"/         negatives: vec![Rule::closed_paren]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":10410,"byte_end":10457,"line_start":207,"line_end":207,"column_start":5,"column_end":52}},{"value":"/     },","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":10462,"byte_end":10472,"line_start":208,"line_end":208,"column_start":5,"column_end":15}},{"value":"/     pos","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":10477,"byte_end":10488,"line_start":209,"line_end":209,"column_start":5,"column_end":16}},{"value":"/ ).with_path(\"file.rs\");","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":10493,"byte_end":10520,"line_start":210,"line_end":210,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":10525,"byte_end":10532,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":11503,"byte_end":11507,"line_start":243,"line_end":243,"column_start":12,"column_end":16},"name":"path","qualname":"<Error<R>>::path","value":"fn path<'_>(&'_ Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the path set using [`Error::with_path()`].","sig":null,"attributes":[{"value":"/ Returns the path set using [`Error::with_path()`].","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":10658,"byte_end":10712,"line_start":218,"line_end":218,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":10717,"byte_end":10720,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":10725,"byte_end":10739,"line_start":220,"line_end":220,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":10744,"byte_end":10747,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":10752,"byte_end":10759,"line_start":222,"line_end":222,"column_start":5,"column_end":12}},{"value":"/ # use pest::error::{Error, ErrorVariant};","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":10764,"byte_end":10809,"line_start":223,"line_end":223,"column_start":5,"column_end":50}},{"value":"/ # use pest::Position;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":10814,"byte_end":10839,"line_start":224,"line_end":224,"column_start":5,"column_end":30}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":10844,"byte_end":10880,"line_start":225,"line_end":225,"column_start":5,"column_end":41}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":10885,"byte_end":10910,"line_start":226,"line_end":226,"column_start":5,"column_end":30}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":10915,"byte_end":10988,"line_start":227,"line_end":227,"column_start":5,"column_end":78}},{"value":"/ # enum Rule {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":10993,"byte_end":11010,"line_start":228,"line_end":228,"column_start":5,"column_end":22}},{"value":"/ #     open_paren,","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":11015,"byte_end":11036,"line_start":229,"line_end":229,"column_start":5,"column_end":26}},{"value":"/ #     closed_paren","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":11041,"byte_end":11063,"line_start":230,"line_end":230,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":11068,"byte_end":11075,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/ # let input = \"\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":11080,"byte_end":11101,"line_start":232,"line_end":232,"column_start":5,"column_end":26}},{"value":"/ # let pos = Position::from_start(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":11106,"byte_end":11150,"line_start":233,"line_end":233,"column_start":5,"column_end":49}},{"value":"/ # let error = Error::new_from_pos(","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":11155,"byte_end":11193,"line_start":234,"line_end":234,"column_start":5,"column_end":43}},{"value":"/ #     ErrorVariant::ParsingError {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":11198,"byte_end":11236,"line_start":235,"line_end":235,"column_start":5,"column_end":43}},{"value":"/ #         positives: vec![Rule::open_paren],","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":11241,"byte_end":11289,"line_start":236,"line_end":236,"column_start":5,"column_end":53}},{"value":"/ #         negatives: vec![Rule::closed_paren]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":11294,"byte_end":11343,"line_start":237,"line_end":237,"column_start":5,"column_end":54}},{"value":"/ #     },","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":11348,"byte_end":11360,"line_start":238,"line_end":238,"column_start":5,"column_end":17}},{"value":"/ #     pos);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":11365,"byte_end":11380,"line_start":239,"line_end":239,"column_start":5,"column_end":20}},{"value":"/ let error = error.with_path(\"file.rs\");","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":11385,"byte_end":11428,"line_start":240,"line_end":240,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(\"file.rs\"), error.path());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":11433,"byte_end":11479,"line_start":241,"line_end":241,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":11484,"byte_end":11491,"line_start":242,"line_end":242,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":11627,"byte_end":11631,"line_start":248,"line_end":248,"column_start":12,"column_end":16},"name":"line","qualname":"<Error<R>>::line","value":"fn line<'_>(&'_ Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the line that the error is on.\n","sig":null,"attributes":[{"value":"/ Returns the line that the error is on.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":11573,"byte_end":11615,"line_start":247,"line_end":247,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":12908,"byte_end":12921,"line_start":287,"line_end":287,"column_start":12,"column_end":25},"name":"renamed_rules","qualname":"<Error<R>>::renamed_rules","value":"fn renamed_rules<F>(Self, F) -> Error<R> where F: for<'_> FnMut(&'_ R) ->\nString","parent":null,"children":[],"decl_id":null,"docs":" Renames all `Rule`s if this is a [`ParsingError`]. It does nothing when called on a\n [`CustomError`].","sig":null,"attributes":[{"value":"/ Renames all `Rule`s if this is a [`ParsingError`]. It does nothing when called on a","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":11687,"byte_end":11774,"line_start":252,"line_end":252,"column_start":5,"column_end":92}},{"value":"/ [`CustomError`].","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":11779,"byte_end":11799,"line_start":253,"line_end":253,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":11804,"byte_end":11807,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ Useful in order to rename verbose rules or have detailed per-`Rule` formatting.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":11812,"byte_end":11895,"line_start":255,"line_end":255,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":11900,"byte_end":11903,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ [`ParsingError`]: enum.ErrorVariant.html#variant.ParsingError","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":11908,"byte_end":11973,"line_start":257,"line_end":257,"column_start":5,"column_end":70}},{"value":"/ [`CustomError`]: enum.ErrorVariant.html#variant.CustomError","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":11978,"byte_end":12041,"line_start":258,"line_end":258,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":12046,"byte_end":12049,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":12054,"byte_end":12068,"line_start":260,"line_end":260,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":12073,"byte_end":12076,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":12081,"byte_end":12088,"line_start":262,"line_end":262,"column_start":5,"column_end":12}},{"value":"/ # use pest::error::{Error, ErrorVariant};","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":12093,"byte_end":12138,"line_start":263,"line_end":263,"column_start":5,"column_end":50}},{"value":"/ # use pest::Position;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":12143,"byte_end":12168,"line_start":264,"line_end":264,"column_start":5,"column_end":30}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":12173,"byte_end":12209,"line_start":265,"line_end":265,"column_start":5,"column_end":41}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":12214,"byte_end":12239,"line_start":266,"line_end":266,"column_start":5,"column_end":30}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":12244,"byte_end":12317,"line_start":267,"line_end":267,"column_start":5,"column_end":78}},{"value":"/ # enum Rule {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":12322,"byte_end":12339,"line_start":268,"line_end":268,"column_start":5,"column_end":22}},{"value":"/ #     open_paren,","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":12344,"byte_end":12365,"line_start":269,"line_end":269,"column_start":5,"column_end":26}},{"value":"/ #     closed_paren","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":12370,"byte_end":12392,"line_start":270,"line_end":270,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":12397,"byte_end":12404,"line_start":271,"line_end":271,"column_start":5,"column_end":12}},{"value":"/ # let input = \"\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":12409,"byte_end":12430,"line_start":272,"line_end":272,"column_start":5,"column_end":26}},{"value":"/ # let pos = Position::from_start(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":12435,"byte_end":12479,"line_start":273,"line_end":273,"column_start":5,"column_end":49}},{"value":"/ Error::new_from_pos(","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":12484,"byte_end":12508,"line_start":274,"line_end":274,"column_start":5,"column_end":29}},{"value":"/     ErrorVariant::ParsingError {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":12513,"byte_end":12549,"line_start":275,"line_end":275,"column_start":5,"column_end":41}},{"value":"/         positives: vec![Rule::open_paren],","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":12554,"byte_end":12600,"line_start":276,"line_end":276,"column_start":5,"column_end":51}},{"value":"/         negatives: vec![Rule::closed_paren]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":12605,"byte_end":12652,"line_start":277,"line_end":277,"column_start":5,"column_end":52}},{"value":"/     },","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":12657,"byte_end":12667,"line_start":278,"line_end":278,"column_start":5,"column_end":15}},{"value":"/     pos","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":12672,"byte_end":12683,"line_start":279,"line_end":279,"column_start":5,"column_end":16}},{"value":"/ ).renamed_rules(|rule| {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":12688,"byte_end":12716,"line_start":280,"line_end":280,"column_start":5,"column_end":33}},{"value":"/     match *rule {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":12721,"byte_end":12742,"line_start":281,"line_end":281,"column_start":5,"column_end":26}},{"value":"/         Rule::open_paren => \"(\".to_owned(),","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":12747,"byte_end":12794,"line_start":282,"line_end":282,"column_start":5,"column_end":52}},{"value":"/         Rule::closed_paren => \"closed paren\".to_owned()","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":12799,"byte_end":12858,"line_start":283,"line_end":283,"column_start":5,"column_end":64}},{"value":"/     }","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":12863,"byte_end":12872,"line_start":284,"line_end":284,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":12877,"byte_end":12884,"line_start":285,"line_end":285,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":12889,"byte_end":12896,"line_start":286,"line_end":286,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":20166,"byte_end":20173,"line_start":508,"line_end":508,"column_start":12,"column_end":19},"name":"message","qualname":"<ErrorVariant<R>>::message","value":"fn message<'_>(&'_ Self) -> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":"\n Returns the error message for [`ErrorVariant`]","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":19085,"byte_end":19088,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ Returns the error message for [`ErrorVariant`]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":19093,"byte_end":19143,"line_start":487,"line_end":487,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":19148,"byte_end":19151,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ If [`ErrorVariant`] is [`CustomError`], it returns a","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":19156,"byte_end":19212,"line_start":489,"line_end":489,"column_start":5,"column_end":61}},{"value":"/ [`Cow::Borrowed`] reference to [`message`]. If [`ErrorVariant`] is [`ParsingError`], a","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":19217,"byte_end":19307,"line_start":490,"line_end":490,"column_start":5,"column_end":95}},{"value":"/ [`Cow::Owned`] containing \"expected [ErrorVariant::ParsingError::positives] [ErrorVariant::ParsingError::negatives]\" is returned.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":19312,"byte_end":19445,"line_start":491,"line_end":491,"column_start":5,"column_end":138}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":19450,"byte_end":19453,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ [`ErrorVariant`]: enum.ErrorVariant.html","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":19458,"byte_end":19502,"line_start":493,"line_end":493,"column_start":5,"column_end":49}},{"value":"/ [`CustomError`]: enum.ErrorVariant.html#variant.CustomError","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":19507,"byte_end":19570,"line_start":494,"line_end":494,"column_start":5,"column_end":68}},{"value":"/ [`ParsingError`]: enum.ErrorVariant.html#variant.ParsingError","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":19575,"byte_end":19640,"line_start":495,"line_end":495,"column_start":5,"column_end":70}},{"value":"/ [`Cow::Owned`]: https://doc.rust-lang.org/std/borrow/enum.Cow.html#variant.Owned","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":19645,"byte_end":19729,"line_start":496,"line_end":496,"column_start":5,"column_end":89}},{"value":"/ [`Cow::Borrowed`]: https://doc.rust-lang.org/std/borrow/enum.Cow.html#variant.Borrowed","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":19734,"byte_end":19824,"line_start":497,"line_end":497,"column_start":5,"column_end":95}},{"value":"/ [`message`]: enum.ErrorVariant.html#variant.CustomError.field.message","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":19829,"byte_end":19902,"line_start":498,"line_end":498,"column_start":5,"column_end":78}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":19907,"byte_end":19921,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":19926,"byte_end":19929,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":19934,"byte_end":19941,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/ # use pest::error::ErrorVariant;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":19946,"byte_end":19982,"line_start":502,"line_end":502,"column_start":5,"column_end":41}},{"value":"/ let variant = ErrorVariant::<()>::CustomError {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":19987,"byte_end":20038,"line_start":503,"line_end":503,"column_start":5,"column_end":56}},{"value":"/     message: String::from(\"unexpected error\")","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":20043,"byte_end":20092,"line_start":504,"line_end":504,"column_start":5,"column_end":54}},{"value":"/ };","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":20097,"byte_end":20103,"line_start":505,"line_end":505,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":20108,"byte_end":20111,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ println!(\"{}\", variant.message());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":20116,"byte_end":20154,"line_start":507,"line_end":507,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":20609,"byte_end":20612,"line_start":522,"line_end":522,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Error<R> as core::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10273},"children":[],"decl_id":{"krate":1,"index":10274},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":20769,"byte_end":20772,"line_start":528,"line_end":528,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ErrorVariant<R> as core::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10273},"children":[],"decl_id":{"krate":1,"index":10274},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":121},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iterators","qualname":"::iterators","value":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/mod.rs","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":185},{"krate":0,"index":275},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":419},{"krate":0,"index":422},{"krate":0,"index":425},{"krate":0,"index":428},{"krate":0,"index":431}],"decl_id":null,"docs":" Types and iterators for parser output.\n","sig":null,"attributes":[{"value":"/ Types and iterators for parser output.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/mod.rs","byte_start":30955,"byte_end":30997,"line_start":10,"line_end":10,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":152},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":32024,"byte_end":32033,"line_start":23,"line_end":23,"column_start":12,"column_end":21},"name":"FlatPairs","qualname":"::iterators::flat_pairs::FlatPairs","value":"FlatPairs {  }","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158}],"decl_id":null,"docs":" An iterator over [`Pair`]s. It is created by [`Pairs::flatten`].","sig":null,"attributes":[{"value":"/ An iterator over [`Pair`]s. It is created by [`Pairs::flatten`].","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":31852,"byte_end":31920,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":31921,"byte_end":31924,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`Pair`]: struct.Pair.html","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":31925,"byte_end":31955,"line_start":21,"line_end":21,"column_start":1,"column_end":31}},{"value":"/ [`Pairs::flatten`]: struct.Pairs.html#method.flatten","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":31956,"byte_end":32012,"line_start":22,"line_end":22,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":33290,"byte_end":33296,"line_start":74,"line_end":74,"column_start":12,"column_end":18},"name":"tokens","qualname":"<FlatPairs>::tokens","value":"fn tokens(Self) -> Tokens","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Tokens` for these pairs.","sig":null,"attributes":[{"value":"/ Returns the `Tokens` for these pairs.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":32643,"byte_end":32684,"line_start":51,"line_end":51,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":32689,"byte_end":32692,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":32697,"byte_end":32711,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":32716,"byte_end":32719,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":32724,"byte_end":32731,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ # use std::rc::Rc;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":32736,"byte_end":32758,"line_start":56,"line_end":56,"column_start":5,"column_end":27}},{"value":"/ # use pest;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":32763,"byte_end":32778,"line_start":57,"line_end":57,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":32783,"byte_end":32819,"line_start":58,"line_end":58,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":32824,"byte_end":32897,"line_start":59,"line_end":59,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":32902,"byte_end":32917,"line_start":60,"line_end":60,"column_start":5,"column_end":20}},{"value":"/     a","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":32922,"byte_end":32931,"line_start":61,"line_end":61,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":32936,"byte_end":32941,"line_start":62,"line_end":62,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":32946,"byte_end":32949,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ let input = \"\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":32954,"byte_end":32973,"line_start":64,"line_end":64,"column_start":5,"column_end":24}},{"value":"/ let pairs = pest::state(input, |state| {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":32978,"byte_end":33022,"line_start":65,"line_end":65,"column_start":5,"column_end":49}},{"value":"/     // generating Token pair with Rule::a ...","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":33027,"byte_end":33076,"line_start":66,"line_end":66,"column_start":5,"column_end":54}},{"value":"/ #     state.rule(Rule::a, |s| Ok(s))","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":33081,"byte_end":33121,"line_start":67,"line_end":67,"column_start":5,"column_end":45}},{"value":"/ }).unwrap();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":33126,"byte_end":33142,"line_start":68,"line_end":68,"column_start":5,"column_end":21}},{"value":"/ let tokens: Vec<_> = pairs.flatten().tokens().collect();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":33147,"byte_end":33207,"line_start":69,"line_end":69,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":33212,"byte_end":33215,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(tokens.len(), 2);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":33220,"byte_end":33252,"line_start":71,"line_end":71,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":33257,"byte_end":33264,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":33269,"byte_end":33278,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":34031,"byte_end":34035,"line_start":105,"line_end":105,"column_start":8,"column_end":12},"name":"next","qualname":"<FlatPairs as core::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":1,"index":8574},"children":[],"decl_id":{"krate":1,"index":8576},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":34361,"byte_end":34370,"line_start":119,"line_end":119,"column_start":8,"column_end":17},"name":"next_back","qualname":"<FlatPairs as core::iter::DoubleEndedIterator>::next_back","value":"fn next_back<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":1,"index":8420},"children":[],"decl_id":{"krate":1,"index":8421},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":34694,"byte_end":34697,"line_start":133,"line_end":133,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FlatPairs as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10266},"children":[],"decl_id":{"krate":1,"index":10267},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":34931,"byte_end":34936,"line_start":141,"line_end":141,"column_start":8,"column_end":13},"name":"clone","qualname":"<FlatPairs as core::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> FlatPairs","parent":{"krate":1,"index":2871},"children":[],"decl_id":{"krate":1,"index":2872},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1029},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":37184,"byte_end":37188,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"Pair","qualname":"::iterators::pair::Pair","value":"Pair {  }","parent":null,"children":[{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034}],"decl_id":null,"docs":" A matching pair of [`Token`]s and everything between them.","sig":null,"attributes":[{"value":"/ A matching pair of [`Token`]s and everything between them.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":36744,"byte_end":36806,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":36807,"byte_end":36810,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A matching `Token` pair is formed by a `Token::Start` and a subsequent `Token::End` with the","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":36811,"byte_end":36907,"line_start":31,"line_end":31,"column_start":1,"column_end":97}},{"value":"/ same `Rule`, with the condition that all `Token`s between them can form such pairs as well.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":36908,"byte_end":37003,"line_start":32,"line_end":32,"column_start":1,"column_end":96}},{"value":"/ This is similar to the [brace matching problem](https://en.wikipedia.org/wiki/Brace_matching) in","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":37004,"byte_end":37104,"line_start":33,"line_end":33,"column_start":1,"column_end":101}},{"value":"/ editors.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":37105,"byte_end":37117,"line_start":34,"line_end":34,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":37118,"byte_end":37121,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [`Token`]: ../enum.Token.html","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":37122,"byte_end":37155,"line_start":36,"line_end":36,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":38373,"byte_end":38380,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"as_rule","qualname":"<Pair>::as_rule","value":"fn as_rule<'_>(&'_ Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Rule` of the `Pair`.","sig":null,"attributes":[{"value":"/ Returns the `Rule` of the `Pair`.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":37772,"byte_end":37809,"line_start":64,"line_end":64,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":37814,"byte_end":37817,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":37822,"byte_end":37836,"line_start":66,"line_end":66,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":37841,"byte_end":37844,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":37849,"byte_end":37856,"line_start":68,"line_end":68,"column_start":5,"column_end":12}},{"value":"/ # use std::rc::Rc;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":37861,"byte_end":37883,"line_start":69,"line_end":69,"column_start":5,"column_end":27}},{"value":"/ # use pest;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":37888,"byte_end":37903,"line_start":70,"line_end":70,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":37908,"byte_end":37944,"line_start":71,"line_end":71,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":37949,"byte_end":38022,"line_start":72,"line_end":72,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":38027,"byte_end":38042,"line_start":73,"line_end":73,"column_start":5,"column_end":20}},{"value":"/     a","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":38047,"byte_end":38056,"line_start":74,"line_end":74,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":38061,"byte_end":38066,"line_start":75,"line_end":75,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":38071,"byte_end":38074,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ let input = \"\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":38079,"byte_end":38098,"line_start":77,"line_end":77,"column_start":5,"column_end":24}},{"value":"/ let pair = pest::state(input, |state| {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":38103,"byte_end":38146,"line_start":78,"line_end":78,"column_start":5,"column_end":48}},{"value":"/     // generating Token pair with Rule::a ...","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":38151,"byte_end":38200,"line_start":79,"line_end":79,"column_start":5,"column_end":54}},{"value":"/ #     state.rule(Rule::a, |s| Ok(s))","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":38205,"byte_end":38245,"line_start":80,"line_end":80,"column_start":5,"column_end":45}},{"value":"/ }).unwrap().next().unwrap();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":38250,"byte_end":38282,"line_start":81,"line_end":81,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":38287,"byte_end":38290,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(pair.as_rule(), Rule::a);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":38295,"byte_end":38335,"line_start":83,"line_end":83,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":38340,"byte_end":38347,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":38352,"byte_end":38361,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":39188,"byte_end":39194,"line_start":115,"line_end":115,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Pair>::as_str","value":"fn as_str<'_>(&'_ Self) -> &'i str","parent":null,"children":[],"decl_id":null,"docs":" Captures a slice from the `&str` defined by the token `Pair`.","sig":null,"attributes":[{"value":"/ Captures a slice from the `&str` defined by the token `Pair`.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":38543,"byte_end":38608,"line_start":93,"line_end":93,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":38613,"byte_end":38616,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":38621,"byte_end":38635,"line_start":95,"line_end":95,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":38640,"byte_end":38643,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":38648,"byte_end":38655,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"/ # use std::rc::Rc;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":38660,"byte_end":38682,"line_start":98,"line_end":98,"column_start":5,"column_end":27}},{"value":"/ # use pest;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":38687,"byte_end":38702,"line_start":99,"line_end":99,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":38707,"byte_end":38743,"line_start":100,"line_end":100,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":38748,"byte_end":38821,"line_start":101,"line_end":101,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":38826,"byte_end":38841,"line_start":102,"line_end":102,"column_start":5,"column_end":20}},{"value":"/     ab","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":38846,"byte_end":38856,"line_start":103,"line_end":103,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":38861,"byte_end":38866,"line_start":104,"line_end":104,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":38871,"byte_end":38874,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":38879,"byte_end":38900,"line_start":106,"line_end":106,"column_start":5,"column_end":26}},{"value":"/ let pair = pest::state(input, |state| {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":38905,"byte_end":38948,"line_start":107,"line_end":107,"column_start":5,"column_end":48}},{"value":"/     // generating Token pair with Rule::ab ...","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":38953,"byte_end":39003,"line_start":108,"line_end":108,"column_start":5,"column_end":55}},{"value":"/ #     state.rule(Rule::ab, |s| s.match_string(\"ab\"))","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":39008,"byte_end":39064,"line_start":109,"line_end":109,"column_start":5,"column_end":61}},{"value":"/ }).unwrap().next().unwrap();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":39069,"byte_end":39101,"line_start":110,"line_end":110,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":39106,"byte_end":39109,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(pair.as_str(), \"ab\");","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":39114,"byte_end":39150,"line_start":112,"line_end":112,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":39155,"byte_end":39162,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":39167,"byte_end":39176,"line_start":114,"line_end":114,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":40148,"byte_end":40157,"line_start":146,"line_end":146,"column_start":12,"column_end":21},"name":"into_span","qualname":"<Pair>::into_span","value":"fn into_span(Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Span` defined by the `Pair`, consuming it.","sig":null,"attributes":[{"value":"/ Returns the `Span` defined by the `Pair`, consuming it.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":39423,"byte_end":39482,"line_start":123,"line_end":123,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":39487,"byte_end":39490,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":39495,"byte_end":39509,"line_start":125,"line_end":125,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":39514,"byte_end":39517,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":39522,"byte_end":39529,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/ # use std::rc::Rc;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":39534,"byte_end":39556,"line_start":128,"line_end":128,"column_start":5,"column_end":27}},{"value":"/ # use pest;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":39561,"byte_end":39576,"line_start":129,"line_end":129,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":39581,"byte_end":39617,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":39622,"byte_end":39695,"line_start":131,"line_end":131,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":39700,"byte_end":39715,"line_start":132,"line_end":132,"column_start":5,"column_end":20}},{"value":"/     ab","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":39720,"byte_end":39730,"line_start":133,"line_end":133,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":39735,"byte_end":39740,"line_start":134,"line_end":134,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":39745,"byte_end":39748,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":39753,"byte_end":39774,"line_start":136,"line_end":136,"column_start":5,"column_end":26}},{"value":"/ let pair = pest::state(input, |state| {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":39779,"byte_end":39822,"line_start":137,"line_end":137,"column_start":5,"column_end":48}},{"value":"/     // generating Token pair with Rule::ab ...","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":39827,"byte_end":39877,"line_start":138,"line_end":138,"column_start":5,"column_end":55}},{"value":"/ #     state.rule(Rule::ab, |s| s.match_string(\"ab\"))","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":39882,"byte_end":39938,"line_start":139,"line_end":139,"column_start":5,"column_end":61}},{"value":"/ }).unwrap().next().unwrap();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":39943,"byte_end":39975,"line_start":140,"line_end":140,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":39980,"byte_end":39983,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(pair.into_span().as_str(), \"ab\");","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":39988,"byte_end":40036,"line_start":142,"line_end":142,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":40041,"byte_end":40048,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":40053,"byte_end":40062,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"deprecated(since = \"2.0.0\", note = \"Please use `as_span` instead\")","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":40067,"byte_end":40136,"line_start":145,"line_end":145,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":40873,"byte_end":40880,"line_start":172,"line_end":172,"column_start":12,"column_end":19},"name":"as_span","qualname":"<Pair>::as_span","value":"fn as_span<'_>(&'_ Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Span` defined by the `Pair`, **without** consuming it.","sig":null,"attributes":[{"value":"/ Returns the `Span` defined by the `Pair`, **without** consuming it.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":40212,"byte_end":40283,"line_start":150,"line_end":150,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":40288,"byte_end":40291,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":40296,"byte_end":40310,"line_start":152,"line_end":152,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":40315,"byte_end":40318,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":40323,"byte_end":40330,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"/ # use std::rc::Rc;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":40335,"byte_end":40357,"line_start":155,"line_end":155,"column_start":5,"column_end":27}},{"value":"/ # use pest;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":40362,"byte_end":40377,"line_start":156,"line_end":156,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":40382,"byte_end":40418,"line_start":157,"line_end":157,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":40423,"byte_end":40496,"line_start":158,"line_end":158,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":40501,"byte_end":40516,"line_start":159,"line_end":159,"column_start":5,"column_end":20}},{"value":"/     ab","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":40521,"byte_end":40531,"line_start":160,"line_end":160,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":40536,"byte_end":40541,"line_start":161,"line_end":161,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":40546,"byte_end":40549,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":40554,"byte_end":40575,"line_start":163,"line_end":163,"column_start":5,"column_end":26}},{"value":"/ let pair = pest::state(input, |state| {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":40580,"byte_end":40623,"line_start":164,"line_end":164,"column_start":5,"column_end":48}},{"value":"/     // generating Token pair with Rule::ab ...","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":40628,"byte_end":40678,"line_start":165,"line_end":165,"column_start":5,"column_end":55}},{"value":"/ #     state.rule(Rule::ab, |s| s.match_string(\"ab\"))","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":40683,"byte_end":40739,"line_start":166,"line_end":166,"column_start":5,"column_end":61}},{"value":"/ }).unwrap().next().unwrap();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":40744,"byte_end":40776,"line_start":167,"line_end":167,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":40781,"byte_end":40784,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(pair.as_span().as_str(), \"ab\");","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":40789,"byte_end":40835,"line_start":169,"line_end":169,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":40840,"byte_end":40847,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":40852,"byte_end":40861,"line_start":171,"line_end":171,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":41782,"byte_end":41792,"line_start":202,"line_end":202,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Pair>::into_inner","value":"fn into_inner(Self) -> Pairs","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner `Pairs` between the `Pair`, consuming it.","sig":null,"attributes":[{"value":"/ Returns the inner `Pairs` between the `Pair`, consuming it.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":41147,"byte_end":41210,"line_start":180,"line_end":180,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":41215,"byte_end":41218,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":41223,"byte_end":41237,"line_start":182,"line_end":182,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":41242,"byte_end":41245,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":41250,"byte_end":41257,"line_start":184,"line_end":184,"column_start":5,"column_end":12}},{"value":"/ # use std::rc::Rc;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":41262,"byte_end":41284,"line_start":185,"line_end":185,"column_start":5,"column_end":27}},{"value":"/ # use pest;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":41289,"byte_end":41304,"line_start":186,"line_end":186,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":41309,"byte_end":41345,"line_start":187,"line_end":187,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":41350,"byte_end":41423,"line_start":188,"line_end":188,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":41428,"byte_end":41443,"line_start":189,"line_end":189,"column_start":5,"column_end":20}},{"value":"/     a","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":41448,"byte_end":41457,"line_start":190,"line_end":190,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":41462,"byte_end":41467,"line_start":191,"line_end":191,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":41472,"byte_end":41475,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ let input = \"\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":41480,"byte_end":41499,"line_start":193,"line_end":193,"column_start":5,"column_end":24}},{"value":"/ let pair = pest::state(input, |state| {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":41504,"byte_end":41547,"line_start":194,"line_end":194,"column_start":5,"column_end":48}},{"value":"/     // generating Token pair with Rule::a ...","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":41552,"byte_end":41601,"line_start":195,"line_end":195,"column_start":5,"column_end":54}},{"value":"/ #     state.rule(Rule::a, |s| Ok(s))","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":41606,"byte_end":41646,"line_start":196,"line_end":196,"column_start":5,"column_end":45}},{"value":"/ }).unwrap().next().unwrap();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":41651,"byte_end":41683,"line_start":197,"line_end":197,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":41688,"byte_end":41691,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ assert!(pair.into_inner().next().is_none());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":41696,"byte_end":41744,"line_start":199,"line_end":199,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":41749,"byte_end":41756,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":41761,"byte_end":41770,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":42576,"byte_end":42582,"line_start":231,"line_end":231,"column_start":12,"column_end":18},"name":"tokens","qualname":"<Pair>::tokens","value":"fn tokens(Self) -> Tokens","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Tokens` for the `Pair`.","sig":null,"attributes":[{"value":"/ Returns the `Tokens` for the `Pair`.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":41926,"byte_end":41966,"line_start":208,"line_end":208,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":41971,"byte_end":41974,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":41979,"byte_end":41993,"line_start":210,"line_end":210,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":41998,"byte_end":42001,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":42006,"byte_end":42013,"line_start":212,"line_end":212,"column_start":5,"column_end":12}},{"value":"/ # use std::rc::Rc;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":42018,"byte_end":42040,"line_start":213,"line_end":213,"column_start":5,"column_end":27}},{"value":"/ # use pest;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":42045,"byte_end":42060,"line_start":214,"line_end":214,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":42065,"byte_end":42101,"line_start":215,"line_end":215,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":42106,"byte_end":42179,"line_start":216,"line_end":216,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":42184,"byte_end":42199,"line_start":217,"line_end":217,"column_start":5,"column_end":20}},{"value":"/     a","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":42204,"byte_end":42213,"line_start":218,"line_end":218,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":42218,"byte_end":42223,"line_start":219,"line_end":219,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":42228,"byte_end":42231,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ let input = \"\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":42236,"byte_end":42255,"line_start":221,"line_end":221,"column_start":5,"column_end":24}},{"value":"/ let pair = pest::state(input, |state| {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":42260,"byte_end":42303,"line_start":222,"line_end":222,"column_start":5,"column_end":48}},{"value":"/     // generating Token pair with Rule::a ...","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":42308,"byte_end":42357,"line_start":223,"line_end":223,"column_start":5,"column_end":54}},{"value":"/ #     state.rule(Rule::a, |s| Ok(s))","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":42362,"byte_end":42402,"line_start":224,"line_end":224,"column_start":5,"column_end":45}},{"value":"/ }).unwrap().next().unwrap();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":42407,"byte_end":42439,"line_start":225,"line_end":225,"column_start":5,"column_end":37}},{"value":"/ let tokens: Vec<_> = pair.tokens().collect();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":42444,"byte_end":42493,"line_start":226,"line_end":226,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":42498,"byte_end":42501,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(tokens.len(), 2);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":42506,"byte_end":42538,"line_start":228,"line_end":228,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":42543,"byte_end":42550,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":42555,"byte_end":42564,"line_start":230,"line_end":230,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":43579,"byte_end":43585,"line_start":264,"line_end":264,"column_start":12,"column_end":18},"name":"single","qualname":"<Pairs>::single","value":"fn single(Pair) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Pairs` iterator containing just the single `Pair`.\n","sig":null,"attributes":[{"value":"/ Create a new `Pairs` iterator containing just the single `Pair`.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":43499,"byte_end":43567,"line_start":263,"line_end":263,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":43773,"byte_end":43776,"line_start":271,"line_end":271,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Pair as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10266},"children":[],"decl_id":{"krate":1,"index":10267},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":44111,"byte_end":44114,"line_start":281,"line_end":281,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Pair as core::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10273},"children":[],"decl_id":{"krate":1,"index":10274},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":44835,"byte_end":44837,"line_start":306,"line_end":306,"column_start":8,"column_end":10},"name":"eq","qualname":"<Pair as core::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ Pair) -> bool","parent":{"krate":1,"index":2901},"children":[],"decl_id":{"krate":1,"index":2903},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":45107,"byte_end":45111,"line_start":316,"line_end":316,"column_start":8,"column_end":12},"name":"hash","qualname":"<Pair as core::hash::Hash>::hash","value":"fn hash<H, '_, '_>(&'_ Self, &'_ mut H) where H: Hasher","parent":{"krate":1,"index":10504},"children":[],"decl_id":{"krate":1,"index":10505},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1040},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":47946,"byte_end":47951,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"name":"Pairs","qualname":"::iterators::pairs::Pairs","value":"Pairs {  }","parent":null,"children":[{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1046}],"decl_id":null,"docs":" An iterator over [`Pair`]s. It is created by [`pest::state`] and [`Pair::into_inner`].","sig":null,"attributes":[{"value":"/ An iterator over [`Pair`]s. It is created by [`pest::state`] and [`Pair::into_inner`].","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":47693,"byte_end":47783,"line_start":28,"line_end":28,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":47784,"byte_end":47787,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`Pair`]: struct.Pair.html","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":47788,"byte_end":47818,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/ [`pest::state`]: ../fn.state.html","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":47819,"byte_end":47856,"line_start":31,"line_end":31,"column_start":1,"column_end":38}},{"value":"/ [`Pair::into_inner`]: struct.Pair.html#method.into_inner","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":47857,"byte_end":47917,"line_start":32,"line_end":32,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":49236,"byte_end":49242,"line_start":82,"line_end":82,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Pairs>::as_str","value":"fn as_str<'_>(&'_ Self) -> &'i str","parent":null,"children":[],"decl_id":null,"docs":" Captures a slice from the `&str` defined by the starting position of the first token `Pair`\n and the ending position of the last token `Pair` of the `Pairs`. This also captures\n the input between those two token `Pair`s.","sig":null,"attributes":[{"value":"/ Captures a slice from the `&str` defined by the starting position of the first token `Pair`","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":48308,"byte_end":48403,"line_start":56,"line_end":56,"column_start":5,"column_end":100}},{"value":"/ and the ending position of the last token `Pair` of the `Pairs`. This also captures","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":48408,"byte_end":48495,"line_start":57,"line_end":57,"column_start":5,"column_end":92}},{"value":"/ the input between those two token `Pair`s.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":48500,"byte_end":48546,"line_start":58,"line_end":58,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":48551,"byte_end":48554,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":48559,"byte_end":48573,"line_start":60,"line_end":60,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":48578,"byte_end":48581,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":48586,"byte_end":48593,"line_start":62,"line_end":62,"column_start":5,"column_end":12}},{"value":"/ # use std::rc::Rc;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":48598,"byte_end":48620,"line_start":63,"line_end":63,"column_start":5,"column_end":27}},{"value":"/ # use pest;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":48625,"byte_end":48640,"line_start":64,"line_end":64,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":48645,"byte_end":48681,"line_start":65,"line_end":65,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":48686,"byte_end":48759,"line_start":66,"line_end":66,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":48764,"byte_end":48779,"line_start":67,"line_end":67,"column_start":5,"column_end":20}},{"value":"/     a,","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":48784,"byte_end":48794,"line_start":68,"line_end":68,"column_start":5,"column_end":15}},{"value":"/     b","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":48799,"byte_end":48808,"line_start":69,"line_end":69,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":48813,"byte_end":48818,"line_start":70,"line_end":70,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":48823,"byte_end":48826,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ let input = \"a b\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":48831,"byte_end":48853,"line_start":72,"line_end":72,"column_start":5,"column_end":27}},{"value":"/ let pairs = pest::state(input, |state| {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":48858,"byte_end":48902,"line_start":73,"line_end":73,"column_start":5,"column_end":49}},{"value":"/     // generating Token pairs with Rule::a and Rule::b ...","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":48907,"byte_end":48969,"line_start":74,"line_end":74,"column_start":5,"column_end":67}},{"value":"/ #     state.rule(Rule::a, |s| s.match_string(\"a\")).and_then(|s| s.skip(1))","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":48974,"byte_end":49052,"line_start":75,"line_end":75,"column_start":5,"column_end":83}},{"value":"/ #         .and_then(|s| s.rule(Rule::b, |s| s.match_string(\"b\")))","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":49057,"byte_end":49126,"line_start":76,"line_end":76,"column_start":5,"column_end":74}},{"value":"/ }).unwrap();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":49131,"byte_end":49147,"line_start":77,"line_end":77,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":49152,"byte_end":49155,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(pairs.as_str(), \"a b\");","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":49160,"byte_end":49198,"line_start":79,"line_end":79,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":49203,"byte_end":49210,"line_start":80,"line_end":80,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":49215,"byte_end":49224,"line_start":81,"line_end":81,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":50384,"byte_end":50390,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"name":"concat","qualname":"<Pairs>::concat","value":"fn concat<'_>(&'_ Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Captures inner token `Pair`s and concatenates resulting `&str`s. This does not capture\n the input between token `Pair`s.","sig":null,"attributes":[{"value":"/ Captures inner token `Pair`s and concatenates resulting `&str`s. This does not capture","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":49564,"byte_end":49654,"line_start":93,"line_end":93,"column_start":5,"column_end":95}},{"value":"/ the input between token `Pair`s.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":49659,"byte_end":49695,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":49700,"byte_end":49703,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":49708,"byte_end":49722,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":49727,"byte_end":49730,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":49735,"byte_end":49742,"line_start":98,"line_end":98,"column_start":5,"column_end":12}},{"value":"/ # use std::rc::Rc;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":49747,"byte_end":49769,"line_start":99,"line_end":99,"column_start":5,"column_end":27}},{"value":"/ # use pest;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":49774,"byte_end":49789,"line_start":100,"line_end":100,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":49794,"byte_end":49830,"line_start":101,"line_end":101,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":49835,"byte_end":49908,"line_start":102,"line_end":102,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":49913,"byte_end":49928,"line_start":103,"line_end":103,"column_start":5,"column_end":20}},{"value":"/     a,","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":49933,"byte_end":49943,"line_start":104,"line_end":104,"column_start":5,"column_end":15}},{"value":"/     b","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":49948,"byte_end":49957,"line_start":105,"line_end":105,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":49962,"byte_end":49967,"line_start":106,"line_end":106,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":49972,"byte_end":49975,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ let input = \"a b\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":49980,"byte_end":50002,"line_start":108,"line_end":108,"column_start":5,"column_end":27}},{"value":"/ let pairs = pest::state(input, |state| {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":50007,"byte_end":50051,"line_start":109,"line_end":109,"column_start":5,"column_end":49}},{"value":"/     // generating Token pairs with Rule::a and Rule::b ...","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":50056,"byte_end":50118,"line_start":110,"line_end":110,"column_start":5,"column_end":67}},{"value":"/ #     state.rule(Rule::a, |s| s.match_string(\"a\")).and_then(|s| s.skip(1))","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":50123,"byte_end":50201,"line_start":111,"line_end":111,"column_start":5,"column_end":83}},{"value":"/ #         .and_then(|s| s.rule(Rule::b, |s| s.match_string(\"b\")))","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":50206,"byte_end":50275,"line_start":112,"line_end":112,"column_start":5,"column_end":74}},{"value":"/ }).unwrap();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":50280,"byte_end":50296,"line_start":113,"line_end":113,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":50301,"byte_end":50304,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(pairs.concat(), \"ab\");","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":50309,"byte_end":50346,"line_start":115,"line_end":115,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":50351,"byte_end":50358,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":50363,"byte_end":50372,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":51243,"byte_end":51250,"line_start":149,"line_end":149,"column_start":12,"column_end":19},"name":"flatten","qualname":"<Pairs>::flatten","value":"fn flatten(Self) -> FlatPairs","parent":null,"children":[],"decl_id":null,"docs":" Flattens the `Pairs`.","sig":null,"attributes":[{"value":"/ Flattens the `Pairs`.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":50514,"byte_end":50539,"line_start":123,"line_end":123,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":50544,"byte_end":50547,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":50552,"byte_end":50566,"line_start":125,"line_end":125,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":50571,"byte_end":50574,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":50579,"byte_end":50586,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/ # use std::rc::Rc;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":50591,"byte_end":50613,"line_start":128,"line_end":128,"column_start":5,"column_end":27}},{"value":"/ # use pest;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":50618,"byte_end":50633,"line_start":129,"line_end":129,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":50638,"byte_end":50674,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":50679,"byte_end":50752,"line_start":131,"line_end":131,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":50757,"byte_end":50772,"line_start":132,"line_end":132,"column_start":5,"column_end":20}},{"value":"/     a,","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":50777,"byte_end":50787,"line_start":133,"line_end":133,"column_start":5,"column_end":15}},{"value":"/     b","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":50792,"byte_end":50801,"line_start":134,"line_end":134,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":50806,"byte_end":50811,"line_start":135,"line_end":135,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":50816,"byte_end":50819,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ let input = \"\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":50824,"byte_end":50843,"line_start":137,"line_end":137,"column_start":5,"column_end":24}},{"value":"/ let pairs = pest::state(input, |state| {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":50848,"byte_end":50892,"line_start":138,"line_end":138,"column_start":5,"column_end":49}},{"value":"/     // generating nested Token pair with Rule::b inside Rule::a","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":50897,"byte_end":50964,"line_start":139,"line_end":139,"column_start":5,"column_end":72}},{"value":"/ #     state.rule(Rule::a, |state| {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":50969,"byte_end":51008,"line_start":140,"line_end":140,"column_start":5,"column_end":44}},{"value":"/ #         state.rule(Rule::b, |s| Ok(s))","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":51013,"byte_end":51057,"line_start":141,"line_end":141,"column_start":5,"column_end":49}},{"value":"/ #     })","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":51062,"byte_end":51074,"line_start":142,"line_end":142,"column_start":5,"column_end":17}},{"value":"/ }).unwrap();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":51079,"byte_end":51095,"line_start":143,"line_end":143,"column_start":5,"column_end":21}},{"value":"/ let tokens: Vec<_> = pairs.flatten().tokens().collect();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":51100,"byte_end":51160,"line_start":144,"line_end":144,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":51165,"byte_end":51168,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(tokens.len(), 4);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":51173,"byte_end":51205,"line_start":146,"line_end":146,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":51210,"byte_end":51217,"line_start":147,"line_end":147,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":51222,"byte_end":51231,"line_start":148,"line_end":148,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":52008,"byte_end":52014,"line_start":176,"line_end":176,"column_start":12,"column_end":18},"name":"tokens","qualname":"<Pairs>::tokens","value":"fn tokens(Self) -> Tokens","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Tokens` for the `Pairs`.","sig":null,"attributes":[{"value":"/ Returns the `Tokens` for the `Pairs`.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":51371,"byte_end":51412,"line_start":153,"line_end":153,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":51417,"byte_end":51420,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":51425,"byte_end":51439,"line_start":155,"line_end":155,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":51444,"byte_end":51447,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":51452,"byte_end":51459,"line_start":157,"line_end":157,"column_start":5,"column_end":12}},{"value":"/ # use std::rc::Rc;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":51464,"byte_end":51486,"line_start":158,"line_end":158,"column_start":5,"column_end":27}},{"value":"/ # use pest;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":51491,"byte_end":51506,"line_start":159,"line_end":159,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":51511,"byte_end":51547,"line_start":160,"line_end":160,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":51552,"byte_end":51625,"line_start":161,"line_end":161,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":51630,"byte_end":51645,"line_start":162,"line_end":162,"column_start":5,"column_end":20}},{"value":"/     a","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":51650,"byte_end":51659,"line_start":163,"line_end":163,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":51664,"byte_end":51669,"line_start":164,"line_end":164,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":51674,"byte_end":51677,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ let input = \"\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":51682,"byte_end":51701,"line_start":166,"line_end":166,"column_start":5,"column_end":24}},{"value":"/ let pairs = pest::state(input, |state| {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":51706,"byte_end":51750,"line_start":167,"line_end":167,"column_start":5,"column_end":49}},{"value":"/     // generating Token pair with Rule::a ...","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":51755,"byte_end":51804,"line_start":168,"line_end":168,"column_start":5,"column_end":54}},{"value":"/ #     state.rule(Rule::a, |s| Ok(s))","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":51809,"byte_end":51849,"line_start":169,"line_end":169,"column_start":5,"column_end":45}},{"value":"/ }).unwrap();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":51854,"byte_end":51870,"line_start":170,"line_end":170,"column_start":5,"column_end":21}},{"value":"/ let tokens: Vec<_> = pairs.tokens().collect();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":51875,"byte_end":51925,"line_start":171,"line_end":171,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":51930,"byte_end":51933,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(tokens.len(), 2);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":51938,"byte_end":51970,"line_start":173,"line_end":173,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":51975,"byte_end":51982,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":51987,"byte_end":51996,"line_start":175,"line_end":175,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":52225,"byte_end":52229,"line_start":182,"line_end":182,"column_start":12,"column_end":16},"name":"peek","qualname":"<Pairs>::peek","value":"fn peek<'_>(&'_ Self) -> Option<Pair>","parent":null,"children":[],"decl_id":null,"docs":" Peek at the first inner `Pair` without changing the position of this iterator.\n","sig":null,"attributes":[{"value":"/ Peek at the first inner `Pair` without changing the position of this iterator.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":52117,"byte_end":52199,"line_start":180,"line_end":180,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":52204,"byte_end":52213,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":53507,"byte_end":53511,"line_start":227,"line_end":227,"column_start":8,"column_end":12},"name":"next","qualname":"<Pairs as core::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":1,"index":8574},"children":[],"decl_id":{"krate":1,"index":8576},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":53714,"byte_end":53723,"line_start":235,"line_end":235,"column_start":8,"column_end":17},"name":"next_back","qualname":"<Pairs as core::iter::DoubleEndedIterator>::next_back","value":"fn next_back<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":1,"index":8420},"children":[],"decl_id":{"krate":1,"index":8421},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":54048,"byte_end":54051,"line_start":249,"line_end":249,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Pairs as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10266},"children":[],"decl_id":{"krate":1,"index":10267},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":54224,"byte_end":54227,"line_start":255,"line_end":255,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Pairs as core::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10273},"children":[],"decl_id":{"krate":1,"index":10274},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":54544,"byte_end":54546,"line_start":268,"line_end":268,"column_start":8,"column_end":10},"name":"eq","qualname":"<Pairs as core::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ Pairs) -> bool","parent":{"krate":1,"index":2901},"children":[],"decl_id":{"krate":1,"index":2903},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":54856,"byte_end":54860,"line_start":279,"line_end":279,"column_start":8,"column_end":12},"name":"hash","qualname":"<Pairs as core::hash::Hash>::hash","value":"fn hash<H, '_, '_>(&'_ Self, &'_ mut H) where H: Hasher","parent":{"krate":1,"index":10504},"children":[],"decl_id":{"krate":1,"index":10505},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1064},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/tokens.rs","byte_start":60158,"byte_end":60164,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"name":"Tokens","qualname":"::iterators::tokens::Tokens","value":"Tokens {  }","parent":null,"children":[{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1070}],"decl_id":null,"docs":" An iterator over [`Token`]s. It is created by [`Pair::tokens`] and [`Pairs::tokens`].","sig":null,"attributes":[{"value":"/ An iterator over [`Token`]s. It is created by [`Pair::tokens`] and [`Pairs::tokens`].","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/tokens.rs","byte_start":59894,"byte_end":59983,"line_start":20,"line_end":20,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/tokens.rs","byte_start":59984,"byte_end":59987,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`Token`]: ../enum.Token.html","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/tokens.rs","byte_start":59988,"byte_end":60021,"line_start":22,"line_end":22,"column_start":1,"column_end":34}},{"value":"/ [`Pair::tokens`]: struct.Pair.html#method.tokens","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/tokens.rs","byte_start":60022,"byte_end":60074,"line_start":23,"line_end":23,"column_start":1,"column_end":53}},{"value":"/ [`Pairs::tokens`]: struct.Pairs.html#method.tokens","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/tokens.rs","byte_start":60075,"byte_end":60129,"line_start":24,"line_end":24,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/tokens.rs","byte_start":62194,"byte_end":62198,"line_start":98,"line_end":98,"column_start":8,"column_end":12},"name":"next","qualname":"<Tokens as core::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":1,"index":8574},"children":[],"decl_id":{"krate":1,"index":8576},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/tokens.rs","byte_start":62482,"byte_end":62491,"line_start":112,"line_end":112,"column_start":8,"column_end":17},"name":"next_back","qualname":"<Tokens as core::iter::DoubleEndedIterator>::next_back","value":"fn next_back<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":1,"index":8420},"children":[],"decl_id":{"krate":1,"index":8421},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/tokens.rs","byte_start":62766,"byte_end":62769,"line_start":126,"line_end":126,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Tokens as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10266},"children":[],"decl_id":{"krate":1,"index":10267},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":448},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser.rs","byte_start":78748,"byte_end":78754,"line_start":15,"line_end":15,"column_start":11,"column_end":17},"name":"Parser","qualname":"::parser::Parser","value":"Parser<R>","parent":null,"children":[{"krate":0,"index":450}],"decl_id":null,"docs":" A trait with a single method that parses strings.\n","sig":null,"attributes":[{"value":"/ A trait with a single method that parses strings.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser.rs","byte_start":78684,"byte_end":78737,"line_start":14,"line_end":14,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser.rs","byte_start":78823,"byte_end":78828,"line_start":17,"line_end":17,"column_start":8,"column_end":13},"name":"parse","qualname":"::parser::Parser::parse","value":"fn parse<'_>(R, &'_ str) -> Result<Pairs<, R>, Error<R>>","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":" Parses a `&str` starting from `rule`.\n","sig":null,"attributes":[{"value":"/ Parses a `&str` starting from `rule`.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser.rs","byte_start":78774,"byte_end":78815,"line_start":16,"line_end":16,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1076},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":79871,"byte_end":79879,"line_start":31,"line_end":31,"column_start":5,"column_end":13},"name":"Positive","qualname":"::parser_state::Lookahead::Positive","value":"Lookahead::Positive","parent":{"krate":0,"index":1075},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1078},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":79885,"byte_end":79893,"line_start":32,"line_end":32,"column_start":5,"column_end":13},"name":"Negative","qualname":"::parser_state::Lookahead::Negative","value":"Lookahead::Negative","parent":{"krate":0,"index":1075},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1080},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":79899,"byte_end":79903,"line_start":33,"line_end":33,"column_start":5,"column_end":9},"name":"None","qualname":"::parser_state::Lookahead::None","value":"Lookahead::None","parent":{"krate":0,"index":1075},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1075},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":79855,"byte_end":79864,"line_start":30,"line_end":30,"column_start":10,"column_end":19},"name":"Lookahead","qualname":"::parser_state::Lookahead","value":"enum Lookahead { Positive, Negative, None, }","parent":null,"children":[{"krate":0,"index":1076},{"krate":0,"index":1078},{"krate":0,"index":1080}],"decl_id":null,"docs":" The current lookahead status of a [`ParserState`].","sig":null,"attributes":[{"value":"/ The current lookahead status of a [`ParserState`].","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":79697,"byte_end":79751,"line_start":26,"line_end":26,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":79752,"byte_end":79755,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`ParserState`]: struct.ParserState.html","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":79756,"byte_end":79800,"line_start":28,"line_end":28,"column_start":1,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1094},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":80075,"byte_end":80081,"line_start":41,"line_end":41,"column_start":5,"column_end":11},"name":"Atomic","qualname":"::parser_state::Atomicity::Atomic","value":"Atomicity::Atomic","parent":{"krate":0,"index":1093},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1096},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":80087,"byte_end":80101,"line_start":42,"line_end":42,"column_start":5,"column_end":19},"name":"CompoundAtomic","qualname":"::parser_state::Atomicity::CompoundAtomic","value":"Atomicity::CompoundAtomic","parent":{"krate":0,"index":1093},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1098},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":80107,"byte_end":80116,"line_start":43,"line_end":43,"column_start":5,"column_end":14},"name":"NonAtomic","qualname":"::parser_state::Atomicity::NonAtomic","value":"Atomicity::NonAtomic","parent":{"krate":0,"index":1093},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1093},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":80059,"byte_end":80068,"line_start":40,"line_end":40,"column_start":10,"column_end":19},"name":"Atomicity","qualname":"::parser_state::Atomicity","value":"enum Atomicity { Atomic, CompoundAtomic, NonAtomic, }","parent":null,"children":[{"krate":0,"index":1094},{"krate":0,"index":1096},{"krate":0,"index":1098}],"decl_id":null,"docs":" The current atomicity of a [`ParserState`].","sig":null,"attributes":[{"value":"/ The current atomicity of a [`ParserState`].","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":79908,"byte_end":79955,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":79956,"byte_end":79959,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`ParserState`]: struct.ParserState.html","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":79960,"byte_end":80004,"line_start":38,"line_end":38,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":510},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":80206,"byte_end":80217,"line_start":47,"line_end":47,"column_start":10,"column_end":21},"name":"ParseResult","qualname":"::parser_state::ParseResult","value":"Result<S, S>","parent":null,"children":[],"decl_id":null,"docs":" Type alias to simplify specifying the return value of chained closures.\n","sig":null,"attributes":[{"value":"/ Type alias to simplify specifying the return value of chained closures.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":80121,"byte_end":80196,"line_start":46,"line_end":46,"column_start":1,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1112},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":80389,"byte_end":80400,"line_start":52,"line_end":52,"column_start":5,"column_end":16},"name":"BottomToTop","qualname":"::parser_state::MatchDir::BottomToTop","value":"MatchDir::BottomToTop","parent":{"krate":0,"index":1111},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1114},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":80406,"byte_end":80417,"line_start":53,"line_end":53,"column_start":5,"column_end":16},"name":"TopToBottom","qualname":"::parser_state::MatchDir::TopToBottom","value":"MatchDir::TopToBottom","parent":{"krate":0,"index":1111},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1111},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":80374,"byte_end":80382,"line_start":51,"line_end":51,"column_start":10,"column_end":18},"name":"MatchDir","qualname":"::parser_state::MatchDir","value":"enum MatchDir { BottomToTop, TopToBottom, }","parent":null,"children":[{"krate":0,"index":1112},{"krate":0,"index":1114}],"decl_id":null,"docs":" Match direction for the stack. Used in `PEEK[a..b]`/`stack_match_peek_slice`.\n","sig":null,"attributes":[{"value":"/ Match direction for the stack. Used in `PEEK[a..b]`/`stack_match_peek_slice`.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":80238,"byte_end":80319,"line_start":49,"line_end":49,"column_start":1,"column_end":82}}]},{"kind":"Function","id":{"krate":0,"index":513},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":80909,"byte_end":80923,"line_start":69,"line_end":69,"column_start":8,"column_end":22},"name":"set_call_limit","qualname":"::parser_state::set_call_limit","value":"fn set_call_limit(Option<NonZeroUsize>)","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum call limit for the parser state\n to prevent stack overflows or excessive execution times\n in some grammars.\n If set, the calls are tracked as a running total\n over all non-terminal rules that can nest closures\n (which are passed to transform the parser state).","sig":null,"attributes":[{"value":"/ Sets the maximum call limit for the parser state","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":80477,"byte_end":80529,"line_start":58,"line_end":58,"column_start":1,"column_end":53}},{"value":"/ to prevent stack overflows or excessive execution times","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":80530,"byte_end":80589,"line_start":59,"line_end":59,"column_start":1,"column_end":60}},{"value":"/ in some grammars.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":80590,"byte_end":80611,"line_start":60,"line_end":60,"column_start":1,"column_end":22}},{"value":"/ If set, the calls are tracked as a running total","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":80612,"byte_end":80664,"line_start":61,"line_end":61,"column_start":1,"column_end":53}},{"value":"/ over all non-terminal rules that can nest closures","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":80665,"byte_end":80719,"line_start":62,"line_end":62,"column_start":1,"column_end":55}},{"value":"/ (which are passed to transform the parser state).","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":80720,"byte_end":80773,"line_start":63,"line_end":63,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":80774,"byte_end":80777,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":80778,"byte_end":80793,"line_start":65,"line_end":65,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":80794,"byte_end":80797,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ * `limit` - The maximum number of calls. If None,","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":80798,"byte_end":80851,"line_start":67,"line_end":67,"column_start":1,"column_end":54}},{"value":"/             the number of calls is unlimited.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":80852,"byte_end":80901,"line_start":68,"line_end":68,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":1131},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":81796,"byte_end":81807,"line_start":103,"line_end":103,"column_start":12,"column_end":23},"name":"ParserState","qualname":"::parser_state::ParserState","value":"ParserState {  }","parent":null,"children":[{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":1136},{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1142}],"decl_id":null,"docs":" The complete state of a [`Parser`].","sig":null,"attributes":[{"value":"/ The complete state of a [`Parser`].","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":81690,"byte_end":81729,"line_start":99,"line_end":99,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":81730,"byte_end":81733,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ [`Parser`]: trait.Parser.html","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":81734,"byte_end":81767,"line_start":101,"line_end":101,"column_start":1,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":521},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":82294,"byte_end":82299,"line_start":124,"line_end":124,"column_start":8,"column_end":13},"name":"state","qualname":"::parser_state::state","value":"fn state<'i, R, F>(&'i str, F) -> Result<pairs::Pairs, Error<R>> where\nR: RuleType, F: FnOnce(Box<ParserState>) -> ParseResult<Box<ParserState>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `ParserState` from a `&str`, supplying it to a closure `f`.","sig":null,"attributes":[{"value":"/ Creates a `ParserState` from a `&str`, supplying it to a closure `f`.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":82085,"byte_end":82158,"line_start":115,"line_end":115,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":82159,"byte_end":82162,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":82163,"byte_end":82177,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":82178,"byte_end":82181,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":82182,"byte_end":82189,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/ # use pest;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":82190,"byte_end":82205,"line_start":120,"line_end":120,"column_start":1,"column_end":16}},{"value":"/ let input = \"\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":82206,"byte_end":82225,"line_start":121,"line_end":121,"column_start":1,"column_end":20}},{"value":"/ pest::state::<(), _>(input, |s| Ok(s)).unwrap();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":82226,"byte_end":82278,"line_start":122,"line_end":122,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":82279,"byte_end":82286,"line_start":123,"line_end":123,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":83962,"byte_end":83965,"line_start":171,"line_end":171,"column_start":12,"column_end":15},"name":"new","qualname":"<ParserState>::new","value":"fn new(&'i str) -> Box<Self>","parent":null,"children":[],"decl_id":null,"docs":" Allocates a fresh `ParserState` object to the heap and returns the owned `Box`. This `Box`\n will be passed from closure to closure based on the needs of the specified `Parser`.","sig":null,"attributes":[{"value":"/ Allocates a fresh `ParserState` object to the heap and returns the owned `Box`. This `Box`","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":83579,"byte_end":83673,"line_start":161,"line_end":161,"column_start":5,"column_end":99}},{"value":"/ will be passed from closure to closure based on the needs of the specified `Parser`.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":83678,"byte_end":83766,"line_start":162,"line_end":162,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":83771,"byte_end":83774,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":83779,"byte_end":83793,"line_start":164,"line_end":164,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":83798,"byte_end":83801,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":83806,"byte_end":83813,"line_start":166,"line_end":166,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":83818,"byte_end":83833,"line_start":167,"line_end":167,"column_start":5,"column_end":20}},{"value":"/ let input = \"\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":83838,"byte_end":83857,"line_start":168,"line_end":168,"column_start":5,"column_end":24}},{"value":"/ let state: Box<pest::ParserState<&str>> = pest::ParserState::new(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":83862,"byte_end":83938,"line_start":169,"line_end":169,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":83943,"byte_end":83950,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":84913,"byte_end":84921,"line_start":202,"line_end":202,"column_start":12,"column_end":20},"name":"position","qualname":"<ParserState>::position","value":"fn position<'_>(&'_ Self) -> &Position","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the current `Position` of the `ParserState`.","sig":null,"attributes":[{"value":"/ Returns a reference to the current `Position` of the `ParserState`.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":84388,"byte_end":84459,"line_start":185,"line_end":185,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":84464,"byte_end":84467,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":84472,"byte_end":84486,"line_start":187,"line_end":187,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":84491,"byte_end":84494,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":84499,"byte_end":84506,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":84511,"byte_end":84526,"line_start":190,"line_end":190,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":84531,"byte_end":84567,"line_start":191,"line_end":191,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":84572,"byte_end":84645,"line_start":192,"line_end":192,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":84650,"byte_end":84665,"line_start":193,"line_end":193,"column_start":5,"column_end":20}},{"value":"/     ab","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":84670,"byte_end":84680,"line_start":194,"line_end":194,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":84685,"byte_end":84690,"line_start":195,"line_end":195,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":84695,"byte_end":84698,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":84703,"byte_end":84724,"line_start":197,"line_end":197,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":84729,"byte_end":84809,"line_start":198,"line_end":198,"column_start":5,"column_end":85}},{"value":"/ let position = state.position();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":84814,"byte_end":84850,"line_start":199,"line_end":199,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(position.pos(), 0);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":84855,"byte_end":84889,"line_start":200,"line_end":200,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":84894,"byte_end":84901,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":85538,"byte_end":85547,"line_start":224,"line_end":224,"column_start":12,"column_end":21},"name":"atomicity","qualname":"<ParserState>::atomicity","value":"fn atomicity<'_>(&'_ Self) -> Atomicity","parent":null,"children":[],"decl_id":null,"docs":" Returns the current atomicity of the `ParserState`.","sig":null,"attributes":[{"value":"/ Returns the current atomicity of the `ParserState`.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":84982,"byte_end":85037,"line_start":206,"line_end":206,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":85042,"byte_end":85045,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":85050,"byte_end":85064,"line_start":208,"line_end":208,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":85069,"byte_end":85072,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":85077,"byte_end":85084,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":85089,"byte_end":85104,"line_start":211,"line_end":211,"column_start":5,"column_end":20}},{"value":"/ # use pest::Atomicity;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":85109,"byte_end":85135,"line_start":212,"line_end":212,"column_start":5,"column_end":31}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":85140,"byte_end":85176,"line_start":213,"line_end":213,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":85181,"byte_end":85254,"line_start":214,"line_end":214,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":85259,"byte_end":85274,"line_start":215,"line_end":215,"column_start":5,"column_end":20}},{"value":"/     ab","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":85279,"byte_end":85289,"line_start":216,"line_end":216,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":85294,"byte_end":85299,"line_start":217,"line_end":217,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":85304,"byte_end":85307,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":85312,"byte_end":85333,"line_start":219,"line_end":219,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":85338,"byte_end":85418,"line_start":220,"line_end":220,"column_start":5,"column_end":85}},{"value":"/ let atomicity = state.atomicity();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":85423,"byte_end":85461,"line_start":221,"line_end":221,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(atomicity, Atomicity::NonAtomic);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":85466,"byte_end":85514,"line_start":222,"line_end":222,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":85519,"byte_end":85526,"line_start":223,"line_end":223,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":86557,"byte_end":86561,"line_start":263,"line_end":263,"column_start":12,"column_end":16},"name":"rule","qualname":"<ParserState>::rule","value":"fn rule<F>(Box<Self>, R, F) -> ParseResult<Box<Self>> where\nF: FnOnce(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Wrapper needed to generate tokens. This will associate the `R` type rule to the closure\n meant to match the rule.","sig":null,"attributes":[{"value":"/ Wrapper needed to generate tokens. This will associate the `R` type rule to the closure","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":85957,"byte_end":86048,"line_start":242,"line_end":242,"column_start":5,"column_end":96}},{"value":"/ meant to match the rule.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":86053,"byte_end":86081,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":86086,"byte_end":86089,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":86094,"byte_end":86108,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":86113,"byte_end":86116,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":86121,"byte_end":86128,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":86133,"byte_end":86148,"line_start":248,"line_end":248,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":86153,"byte_end":86189,"line_start":249,"line_end":249,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":86194,"byte_end":86267,"line_start":250,"line_end":250,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":86272,"byte_end":86287,"line_start":251,"line_end":251,"column_start":5,"column_end":20}},{"value":"/     a","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":86292,"byte_end":86301,"line_start":252,"line_end":252,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":86306,"byte_end":86311,"line_start":253,"line_end":253,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":86316,"byte_end":86319,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ let input = \"a\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":86324,"byte_end":86344,"line_start":255,"line_end":255,"column_start":5,"column_end":25}},{"value":"/ let pairs: Vec<_> = pest::state(input, |state| {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":86349,"byte_end":86401,"line_start":256,"line_end":256,"column_start":5,"column_end":57}},{"value":"/     state.rule(Rule::a, |s| Ok(s))","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":86406,"byte_end":86444,"line_start":257,"line_end":257,"column_start":5,"column_end":43}},{"value":"/ }).unwrap().collect();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":86449,"byte_end":86475,"line_start":258,"line_end":258,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":86480,"byte_end":86483,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(pairs.len(), 1);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":86488,"byte_end":86519,"line_start":260,"line_end":260,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":86524,"byte_end":86531,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":86536,"byte_end":86545,"line_start":262,"line_end":262,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":92079,"byte_end":92087,"line_start":432,"line_end":432,"column_start":12,"column_end":20},"name":"sequence","qualname":"<ParserState>::sequence","value":"fn sequence<F>(Box<Self>, F) -> ParseResult<Box<Self>> where\nF: FnOnce(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Starts a sequence of transformations provided by `f` from the `Box<ParserState>`. Returns\n the same `Result` returned by `f` in the case of an `Ok`, or `Err` with the current\n `Box<ParserState>` otherwise.","sig":null,"attributes":[{"value":"/ Starts a sequence of transformations provided by `f` from the `Box<ParserState>`. Returns","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":90951,"byte_end":91044,"line_start":399,"line_end":399,"column_start":5,"column_end":98}},{"value":"/ the same `Result` returned by `f` in the case of an `Ok`, or `Err` with the current","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":91049,"byte_end":91136,"line_start":400,"line_end":400,"column_start":5,"column_end":92}},{"value":"/ `Box<ParserState>` otherwise.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":91141,"byte_end":91174,"line_start":401,"line_end":401,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":91179,"byte_end":91182,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ This method is useful to parse sequences that only match together which usually come in the","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":91187,"byte_end":91282,"line_start":403,"line_end":403,"column_start":5,"column_end":100}},{"value":"/ form of chained `Result`s with","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":91287,"byte_end":91321,"line_start":404,"line_end":404,"column_start":5,"column_end":39}},{"value":"/ [`Result::and_then`](https://doc.rust-lang.org/std/result/enum.Result.html#method.and_then).","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":91326,"byte_end":91422,"line_start":405,"line_end":405,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":91427,"byte_end":91430,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":91435,"byte_end":91438,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":91443,"byte_end":91457,"line_start":408,"line_end":408,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":91462,"byte_end":91465,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":91470,"byte_end":91477,"line_start":410,"line_end":410,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":91482,"byte_end":91497,"line_start":411,"line_end":411,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":91502,"byte_end":91538,"line_start":412,"line_end":412,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":91543,"byte_end":91616,"line_start":413,"line_end":413,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":91621,"byte_end":91636,"line_start":414,"line_end":414,"column_start":5,"column_end":20}},{"value":"/     a","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":91641,"byte_end":91650,"line_start":415,"line_end":415,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":91655,"byte_end":91660,"line_start":416,"line_end":416,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":91665,"byte_end":91668,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ let input = \"a\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":91673,"byte_end":91693,"line_start":418,"line_end":418,"column_start":5,"column_end":25}},{"value":"/ let pairs: Vec<_> = pest::state(input, |state| {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":91698,"byte_end":91750,"line_start":419,"line_end":419,"column_start":5,"column_end":57}},{"value":"/     state.sequence(|s| {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":91755,"byte_end":91783,"line_start":420,"line_end":420,"column_start":5,"column_end":33}},{"value":"/         s.rule(Rule::a, |s| Ok(s)).and_then(|s| {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":91788,"byte_end":91841,"line_start":421,"line_end":421,"column_start":5,"column_end":58}},{"value":"/             s.match_string(\"b\")","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":91846,"byte_end":91881,"line_start":422,"line_end":422,"column_start":5,"column_end":40}},{"value":"/         })","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":91886,"byte_end":91900,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/     }).or_else(|s| {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":91905,"byte_end":91929,"line_start":424,"line_end":424,"column_start":5,"column_end":29}},{"value":"/         Ok(s)","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":91934,"byte_end":91951,"line_start":425,"line_end":425,"column_start":5,"column_end":22}},{"value":"/     })","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":91956,"byte_end":91966,"line_start":426,"line_end":426,"column_start":5,"column_end":15}},{"value":"/ }).unwrap().collect();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":91971,"byte_end":91997,"line_start":427,"line_end":427,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":92002,"byte_end":92005,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(pairs.len(), 0);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":92010,"byte_end":92041,"line_start":429,"line_end":429,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":92046,"byte_end":92053,"line_start":430,"line_end":430,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":92058,"byte_end":92067,"line_start":431,"line_end":431,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":93705,"byte_end":93711,"line_start":482,"line_end":482,"column_start":12,"column_end":18},"name":"repeat","qualname":"<ParserState>::repeat","value":"fn repeat<F>(Box<Self>, F) -> ParseResult<Box<Self>> where F: FnMut(Box<Self>)\n-> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Repeatedly applies the transformation provided by `f` from the `Box<ParserState>`. Returns\n `Ok` with the updated `Box<ParserState>` returned by `f` wrapped up in an `Err`.","sig":null,"attributes":[{"value":"/ Repeatedly applies the transformation provided by `f` from the `Box<ParserState>`. Returns","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":92730,"byte_end":92824,"line_start":453,"line_end":453,"column_start":5,"column_end":99}},{"value":"/ `Ok` with the updated `Box<ParserState>` returned by `f` wrapped up in an `Err`.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":92829,"byte_end":92913,"line_start":454,"line_end":454,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":92918,"byte_end":92921,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":92926,"byte_end":92940,"line_start":456,"line_end":456,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":92945,"byte_end":92948,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":92953,"byte_end":92960,"line_start":458,"line_end":458,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":92965,"byte_end":92980,"line_start":459,"line_end":459,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":92985,"byte_end":93021,"line_start":460,"line_end":460,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":93026,"byte_end":93099,"line_start":461,"line_end":461,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":93104,"byte_end":93119,"line_start":462,"line_end":462,"column_start":5,"column_end":20}},{"value":"/     ab","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":93124,"byte_end":93134,"line_start":463,"line_end":463,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":93139,"byte_end":93144,"line_start":464,"line_end":464,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":93149,"byte_end":93152,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ let input = \"aab\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":93157,"byte_end":93179,"line_start":466,"line_end":466,"column_start":5,"column_end":27}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":93184,"byte_end":93264,"line_start":467,"line_end":467,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.repeat(|s| {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":93269,"byte_end":93308,"line_start":468,"line_end":468,"column_start":5,"column_end":44}},{"value":"/     s.match_string(\"a\")","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":93313,"byte_end":93340,"line_start":469,"line_end":469,"column_start":5,"column_end":32}},{"value":"/ });","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":93345,"byte_end":93352,"line_start":470,"line_end":470,"column_start":5,"column_end":12}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":93357,"byte_end":93385,"line_start":471,"line_end":471,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 2);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":93390,"byte_end":93442,"line_start":472,"line_end":472,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":93447,"byte_end":93450,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ state = pest::ParserState::new(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":93455,"byte_end":93497,"line_start":474,"line_end":474,"column_start":5,"column_end":47}},{"value":"/ result = state.repeat(|s| {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":93502,"byte_end":93533,"line_start":475,"line_end":475,"column_start":5,"column_end":36}},{"value":"/     s.match_string(\"b\")","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":93538,"byte_end":93565,"line_start":476,"line_end":476,"column_start":5,"column_end":32}},{"value":"/ });","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":93570,"byte_end":93577,"line_start":477,"line_end":477,"column_start":5,"column_end":12}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":93582,"byte_end":93610,"line_start":478,"line_end":478,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 0);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":93615,"byte_end":93667,"line_start":479,"line_end":479,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":93672,"byte_end":93679,"line_start":480,"line_end":480,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":93684,"byte_end":93693,"line_start":481,"line_end":481,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":94967,"byte_end":94975,"line_start":524,"line_end":524,"column_start":12,"column_end":20},"name":"optional","qualname":"<ParserState>::optional","value":"fn optional<F>(Box<Self>, F) -> ParseResult<Box<Self>> where\nF: FnOnce(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Optionally applies the transformation provided by `f` from the `Box<ParserState>`. Returns\n `Ok` with the updated `Box<ParserState>` returned by `f` regardless of the `Result`.","sig":null,"attributes":[{"value":"/ Optionally applies the transformation provided by `f` from the `Box<ParserState>`. Returns","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":94097,"byte_end":94191,"line_start":497,"line_end":497,"column_start":5,"column_end":99}},{"value":"/ `Ok` with the updated `Box<ParserState>` returned by `f` regardless of the `Result`.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":94196,"byte_end":94284,"line_start":498,"line_end":498,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":94289,"byte_end":94292,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":94297,"byte_end":94311,"line_start":500,"line_end":500,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":94316,"byte_end":94319,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":94324,"byte_end":94331,"line_start":502,"line_end":502,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":94336,"byte_end":94351,"line_start":503,"line_end":503,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":94356,"byte_end":94392,"line_start":504,"line_end":504,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":94397,"byte_end":94470,"line_start":505,"line_end":505,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":94475,"byte_end":94490,"line_start":506,"line_end":506,"column_start":5,"column_end":20}},{"value":"/     ab","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":94495,"byte_end":94505,"line_start":507,"line_end":507,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":94510,"byte_end":94515,"line_start":508,"line_end":508,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":94520,"byte_end":94523,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":94528,"byte_end":94549,"line_start":510,"line_end":510,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":94554,"byte_end":94634,"line_start":511,"line_end":511,"column_start":5,"column_end":85}},{"value":"/ let result = state.optional(|s| {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":94639,"byte_end":94676,"line_start":512,"line_end":512,"column_start":5,"column_end":42}},{"value":"/     s.match_string(\"ab\")","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":94681,"byte_end":94709,"line_start":513,"line_end":513,"column_start":5,"column_end":33}},{"value":"/ });","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":94714,"byte_end":94721,"line_start":514,"line_end":514,"column_start":5,"column_end":12}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":94726,"byte_end":94754,"line_start":515,"line_end":515,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":94759,"byte_end":94762,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ state = pest::ParserState::new(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":94767,"byte_end":94809,"line_start":517,"line_end":517,"column_start":5,"column_end":47}},{"value":"/ let result = state.optional(|s| {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":94814,"byte_end":94851,"line_start":518,"line_end":518,"column_start":5,"column_end":42}},{"value":"/     s.match_string(\"ac\")","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":94856,"byte_end":94884,"line_start":519,"line_end":519,"column_start":5,"column_end":33}},{"value":"/ });","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":94889,"byte_end":94896,"line_start":520,"line_end":520,"column_start":5,"column_end":12}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":94901,"byte_end":94929,"line_start":521,"line_end":521,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":94934,"byte_end":94941,"line_start":522,"line_end":522,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":94946,"byte_end":94955,"line_start":523,"line_end":523,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":96236,"byte_end":96249,"line_start":559,"line_end":559,"column_start":12,"column_end":25},"name":"match_char_by","qualname":"<ParserState>::match_char_by","value":"fn match_char_by<F>(Box<Self>, F) -> ParseResult<Box<Self>> where\nF: FnOnce(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Attempts to match a single character based on a filter function. Returns `Ok` with the\n updated `Box<ParserState>` if successful, or `Err` with the updated `Box<ParserState>`\n otherwise.","sig":null,"attributes":[{"value":"/ Attempts to match a single character based on a filter function. Returns `Ok` with the","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":95243,"byte_end":95333,"line_start":534,"line_end":534,"column_start":5,"column_end":95}},{"value":"/ updated `Box<ParserState>` if successful, or `Err` with the updated `Box<ParserState>`","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":95338,"byte_end":95428,"line_start":535,"line_end":535,"column_start":5,"column_end":95}},{"value":"/ otherwise.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":95433,"byte_end":95447,"line_start":536,"line_end":536,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":95452,"byte_end":95455,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":95460,"byte_end":95474,"line_start":538,"line_end":538,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":95479,"byte_end":95482,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":95487,"byte_end":95494,"line_start":540,"line_end":540,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":95499,"byte_end":95514,"line_start":541,"line_end":541,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":95519,"byte_end":95555,"line_start":542,"line_end":542,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":95560,"byte_end":95633,"line_start":543,"line_end":543,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":95638,"byte_end":95654,"line_start":544,"line_end":544,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":95659,"byte_end":95662,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":95667,"byte_end":95688,"line_start":546,"line_end":546,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":95693,"byte_end":95773,"line_start":547,"line_end":547,"column_start":5,"column_end":85}},{"value":"/ let result = state.match_char_by(|c| c.is_ascii());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":95778,"byte_end":95833,"line_start":548,"line_end":548,"column_start":5,"column_end":60}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":95838,"byte_end":95866,"line_start":549,"line_end":549,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 1);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":95871,"byte_end":95923,"line_start":550,"line_end":550,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":95928,"byte_end":95931,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ let input = \"❤\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":95936,"byte_end":95958,"line_start":552,"line_end":552,"column_start":5,"column_end":25}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":95963,"byte_end":96043,"line_start":553,"line_end":553,"column_start":5,"column_end":85}},{"value":"/ let result = state.match_char_by(|c| c.is_ascii());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":96048,"byte_end":96103,"line_start":554,"line_end":554,"column_start":5,"column_end":60}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":96108,"byte_end":96137,"line_start":555,"line_end":555,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(result.unwrap_err().position().pos(), 0);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":96142,"byte_end":96198,"line_start":556,"line_end":556,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":96203,"byte_end":96210,"line_start":557,"line_end":557,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":96215,"byte_end":96224,"line_start":558,"line_end":558,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":97345,"byte_end":97357,"line_start":593,"line_end":593,"column_start":12,"column_end":24},"name":"match_string","qualname":"<ParserState>::match_string","value":"fn match_string<'_>(Box<Self>, &'_ str) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to match the given string. Returns `Ok` with the updated `Box<ParserState>` if\n successful, or `Err` with the updated `Box<ParserState>` otherwise.","sig":null,"attributes":[{"value":"/ Attempts to match the given string. Returns `Ok` with the updated `Box<ParserState>` if","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":96480,"byte_end":96571,"line_start":570,"line_end":570,"column_start":5,"column_end":96}},{"value":"/ successful, or `Err` with the updated `Box<ParserState>` otherwise.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":96576,"byte_end":96647,"line_start":571,"line_end":571,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":96652,"byte_end":96655,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":96660,"byte_end":96674,"line_start":573,"line_end":573,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":96679,"byte_end":96682,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":96687,"byte_end":96694,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":96699,"byte_end":96714,"line_start":576,"line_end":576,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":96719,"byte_end":96755,"line_start":577,"line_end":577,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":96760,"byte_end":96833,"line_start":578,"line_end":578,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":96838,"byte_end":96854,"line_start":579,"line_end":579,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":96859,"byte_end":96862,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":96867,"byte_end":96888,"line_start":581,"line_end":581,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":96893,"byte_end":96973,"line_start":582,"line_end":582,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.match_string(\"ab\");","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":96978,"byte_end":97024,"line_start":583,"line_end":583,"column_start":5,"column_end":51}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":97029,"byte_end":97057,"line_start":584,"line_end":584,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 2);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":97062,"byte_end":97114,"line_start":585,"line_end":585,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":97119,"byte_end":97122,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ state = pest::ParserState::new(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":97127,"byte_end":97169,"line_start":587,"line_end":587,"column_start":5,"column_end":47}},{"value":"/ result = state.match_string(\"ac\");","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":97174,"byte_end":97212,"line_start":588,"line_end":588,"column_start":5,"column_end":43}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":97217,"byte_end":97246,"line_start":589,"line_end":589,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(result.unwrap_err().position().pos(), 0);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":97251,"byte_end":97307,"line_start":590,"line_end":590,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":97312,"byte_end":97319,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":97324,"byte_end":97333,"line_start":592,"line_end":592,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":98444,"byte_end":98461,"line_start":624,"line_end":624,"column_start":12,"column_end":29},"name":"match_insensitive","qualname":"<ParserState>::match_insensitive","value":"fn match_insensitive<'_>(Box<Self>, &'_ str) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to case-insensitively match the given string. Returns `Ok` with the updated\n `Box<ParserState>` if successful, or `Err` with the updated `Box<ParserState>` otherwise.","sig":null,"attributes":[{"value":"/ Attempts to case-insensitively match the given string. Returns `Ok` with the updated","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":97550,"byte_end":97638,"line_start":601,"line_end":601,"column_start":5,"column_end":93}},{"value":"/ `Box<ParserState>` if successful, or `Err` with the updated `Box<ParserState>` otherwise.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":97643,"byte_end":97736,"line_start":602,"line_end":602,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":97741,"byte_end":97744,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":97749,"byte_end":97763,"line_start":604,"line_end":604,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":97768,"byte_end":97771,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":97776,"byte_end":97783,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":97788,"byte_end":97803,"line_start":607,"line_end":607,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":97808,"byte_end":97844,"line_start":608,"line_end":608,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":97849,"byte_end":97922,"line_start":609,"line_end":609,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":97927,"byte_end":97943,"line_start":610,"line_end":610,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":97948,"byte_end":97951,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":97956,"byte_end":97977,"line_start":612,"line_end":612,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":97982,"byte_end":98062,"line_start":613,"line_end":613,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.match_insensitive(\"AB\");","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":98067,"byte_end":98118,"line_start":614,"line_end":614,"column_start":5,"column_end":56}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":98123,"byte_end":98151,"line_start":615,"line_end":615,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 2);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":98156,"byte_end":98208,"line_start":616,"line_end":616,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":98213,"byte_end":98216,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ state = pest::ParserState::new(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":98221,"byte_end":98263,"line_start":618,"line_end":618,"column_start":5,"column_end":47}},{"value":"/ result = state.match_insensitive(\"AC\");","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":98268,"byte_end":98311,"line_start":619,"line_end":619,"column_start":5,"column_end":48}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":98316,"byte_end":98345,"line_start":620,"line_end":620,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(result.unwrap_err().position().pos(), 0);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":98350,"byte_end":98406,"line_start":621,"line_end":621,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":98411,"byte_end":98418,"line_start":622,"line_end":622,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":98423,"byte_end":98432,"line_start":623,"line_end":623,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":99553,"byte_end":99564,"line_start":655,"line_end":655,"column_start":12,"column_end":23},"name":"match_range","qualname":"<ParserState>::match_range","value":"fn match_range(Box<Self>, Range<char>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to match a single character from the given range. Returns `Ok` with the updated\n `Box<ParserState>` if successful, or `Err` with the updated `Box<ParserState>` otherwise.","sig":null,"attributes":[{"value":"/ Attempts to match a single character from the given range. Returns `Ok` with the updated","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":98659,"byte_end":98751,"line_start":632,"line_end":632,"column_start":5,"column_end":97}},{"value":"/ `Box<ParserState>` if successful, or `Err` with the updated `Box<ParserState>` otherwise.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":98756,"byte_end":98849,"line_start":633,"line_end":633,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":98854,"byte_end":98857,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":98862,"byte_end":98876,"line_start":635,"line_end":635,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":98881,"byte_end":98884,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":98889,"byte_end":98896,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":98901,"byte_end":98916,"line_start":638,"line_end":638,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":98921,"byte_end":98957,"line_start":639,"line_end":639,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":98962,"byte_end":99035,"line_start":640,"line_end":640,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":99040,"byte_end":99056,"line_start":641,"line_end":641,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":99061,"byte_end":99064,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":99069,"byte_end":99090,"line_start":643,"line_end":643,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":99095,"byte_end":99175,"line_start":644,"line_end":644,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.match_range('a'..'z');","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":99180,"byte_end":99229,"line_start":645,"line_end":645,"column_start":5,"column_end":54}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":99234,"byte_end":99262,"line_start":646,"line_end":646,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 1);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":99267,"byte_end":99319,"line_start":647,"line_end":647,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":99324,"byte_end":99327,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ state = pest::ParserState::new(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":99332,"byte_end":99374,"line_start":649,"line_end":649,"column_start":5,"column_end":47}},{"value":"/ result = state.match_range('A'..'Z');","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":99379,"byte_end":99420,"line_start":650,"line_end":650,"column_start":5,"column_end":46}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":99425,"byte_end":99454,"line_start":651,"line_end":651,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(result.unwrap_err().position().pos(), 0);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":99459,"byte_end":99515,"line_start":652,"line_end":652,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":99520,"byte_end":99527,"line_start":653,"line_end":653,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":99532,"byte_end":99541,"line_start":654,"line_end":654,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":100609,"byte_end":100613,"line_start":686,"line_end":686,"column_start":12,"column_end":16},"name":"skip","qualname":"<ParserState>::skip","value":"fn skip(Box<Self>, usize) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to skip `n` characters forward. Returns `Ok` with the updated `Box<ParserState>`\n if successful, or `Err` with the updated `Box<ParserState>` otherwise.","sig":null,"attributes":[{"value":"/ Attempts to skip `n` characters forward. Returns `Ok` with the updated `Box<ParserState>`","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":99761,"byte_end":99854,"line_start":663,"line_end":663,"column_start":5,"column_end":98}},{"value":"/ if successful, or `Err` with the updated `Box<ParserState>` otherwise.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":99859,"byte_end":99933,"line_start":664,"line_end":664,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":99938,"byte_end":99941,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":99946,"byte_end":99960,"line_start":666,"line_end":666,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":99965,"byte_end":99968,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":99973,"byte_end":99980,"line_start":668,"line_end":668,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":99985,"byte_end":100000,"line_start":669,"line_end":669,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":100005,"byte_end":100041,"line_start":670,"line_end":670,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":100046,"byte_end":100119,"line_start":671,"line_end":671,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":100124,"byte_end":100140,"line_start":672,"line_end":672,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":100145,"byte_end":100148,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":100153,"byte_end":100174,"line_start":674,"line_end":674,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":100179,"byte_end":100259,"line_start":675,"line_end":675,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.skip(1);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":100264,"byte_end":100299,"line_start":676,"line_end":676,"column_start":5,"column_end":40}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":100304,"byte_end":100332,"line_start":677,"line_end":677,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 1);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":100337,"byte_end":100389,"line_start":678,"line_end":678,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":100394,"byte_end":100397,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ state = pest::ParserState::new(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":100402,"byte_end":100444,"line_start":680,"line_end":680,"column_start":5,"column_end":47}},{"value":"/ result = state.skip(3);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":100449,"byte_end":100476,"line_start":681,"line_end":681,"column_start":5,"column_end":32}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":100481,"byte_end":100510,"line_start":682,"line_end":682,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(result.unwrap_err().position().pos(), 0);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":100515,"byte_end":100571,"line_start":683,"line_end":683,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":100576,"byte_end":100583,"line_start":684,"line_end":684,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":100588,"byte_end":100597,"line_start":685,"line_end":685,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":101471,"byte_end":101481,"line_start":712,"line_end":712,"column_start":12,"column_end":22},"name":"skip_until","qualname":"<ParserState>::skip_until","value":"fn skip_until<'_, '_>(Box<Self>, &'_ [&'_ str]) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to skip forward until one of the given strings is found. Returns `Ok` with the\n updated `Box<ParserState>` whether or not one of the strings is found.","sig":null,"attributes":[{"value":"/ Attempts to skip forward until one of the given strings is found. Returns `Ok` with the","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":100789,"byte_end":100880,"line_start":694,"line_end":694,"column_start":5,"column_end":96}},{"value":"/ updated `Box<ParserState>` whether or not one of the strings is found.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":100885,"byte_end":100959,"line_start":695,"line_end":695,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":100964,"byte_end":100967,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":100972,"byte_end":100986,"line_start":697,"line_end":697,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":100991,"byte_end":100994,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":100999,"byte_end":101006,"line_start":699,"line_end":699,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":101011,"byte_end":101026,"line_start":700,"line_end":700,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":101031,"byte_end":101067,"line_start":701,"line_end":701,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":101072,"byte_end":101145,"line_start":702,"line_end":702,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":101150,"byte_end":101166,"line_start":703,"line_end":703,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":101171,"byte_end":101174,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ let input = \"abcd\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":101179,"byte_end":101202,"line_start":705,"line_end":705,"column_start":5,"column_end":28}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":101207,"byte_end":101287,"line_start":706,"line_end":706,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.skip_until(&[\"c\", \"d\"]);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":101292,"byte_end":101343,"line_start":707,"line_end":707,"column_start":5,"column_end":56}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":101348,"byte_end":101376,"line_start":708,"line_end":708,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 2);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":101381,"byte_end":101433,"line_start":709,"line_end":709,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":101438,"byte_end":101445,"line_start":710,"line_end":710,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":101450,"byte_end":101459,"line_start":711,"line_end":711,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":102441,"byte_end":102455,"line_start":739,"line_end":739,"column_start":12,"column_end":26},"name":"start_of_input","qualname":"<ParserState>::start_of_input","value":"fn start_of_input(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to match the start of the input. Returns `Ok` with the current `Box<ParserState>`\n if the parser has not yet advanced, or `Err` with the current `Box<ParserState>` otherwise.","sig":null,"attributes":[{"value":"/ Attempts to match the start of the input. Returns `Ok` with the current `Box<ParserState>`","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":101620,"byte_end":101714,"line_start":717,"line_end":717,"column_start":5,"column_end":99}},{"value":"/ if the parser has not yet advanced, or `Err` with the current `Box<ParserState>` otherwise.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":101719,"byte_end":101814,"line_start":718,"line_end":718,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":101819,"byte_end":101822,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":101827,"byte_end":101841,"line_start":720,"line_end":720,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":101846,"byte_end":101849,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":101854,"byte_end":101861,"line_start":722,"line_end":722,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":101866,"byte_end":101881,"line_start":723,"line_end":723,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":101886,"byte_end":101922,"line_start":724,"line_end":724,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":101927,"byte_end":102000,"line_start":725,"line_end":725,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":102005,"byte_end":102021,"line_start":726,"line_end":726,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":102026,"byte_end":102029,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":102034,"byte_end":102055,"line_start":728,"line_end":728,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":102060,"byte_end":102140,"line_start":729,"line_end":729,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.start_of_input();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":102145,"byte_end":102189,"line_start":730,"line_end":730,"column_start":5,"column_end":49}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":102194,"byte_end":102222,"line_start":731,"line_end":731,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":102227,"byte_end":102230,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ state = pest::ParserState::new(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":102235,"byte_end":102277,"line_start":733,"line_end":733,"column_start":5,"column_end":47}},{"value":"/ state = state.match_string(\"ab\").unwrap();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":102282,"byte_end":102328,"line_start":734,"line_end":734,"column_start":5,"column_end":51}},{"value":"/ result = state.start_of_input();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":102333,"byte_end":102369,"line_start":735,"line_end":735,"column_start":5,"column_end":41}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":102374,"byte_end":102403,"line_start":736,"line_end":736,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":102408,"byte_end":102415,"line_start":737,"line_end":737,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":102420,"byte_end":102429,"line_start":738,"line_end":738,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":103431,"byte_end":103443,"line_start":769,"line_end":769,"column_start":12,"column_end":24},"name":"end_of_input","qualname":"<ParserState>::end_of_input","value":"fn end_of_input(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to match the end of the input. Returns `Ok` with the current `Box<ParserState>` if\n there is no input remaining, or `Err` with the current `Box<ParserState>` otherwise.","sig":null,"attributes":[{"value":"/ Attempts to match the end of the input. Returns `Ok` with the current `Box<ParserState>` if","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":102620,"byte_end":102715,"line_start":747,"line_end":747,"column_start":5,"column_end":100}},{"value":"/ there is no input remaining, or `Err` with the current `Box<ParserState>` otherwise.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":102720,"byte_end":102808,"line_start":748,"line_end":748,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":102813,"byte_end":102816,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":102821,"byte_end":102835,"line_start":750,"line_end":750,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":102840,"byte_end":102843,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":102848,"byte_end":102855,"line_start":752,"line_end":752,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":102860,"byte_end":102875,"line_start":753,"line_end":753,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":102880,"byte_end":102916,"line_start":754,"line_end":754,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":102921,"byte_end":102994,"line_start":755,"line_end":755,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":102999,"byte_end":103015,"line_start":756,"line_end":756,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":103020,"byte_end":103023,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":103028,"byte_end":103049,"line_start":758,"line_end":758,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":103054,"byte_end":103134,"line_start":759,"line_end":759,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.end_of_input();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":103139,"byte_end":103181,"line_start":760,"line_end":760,"column_start":5,"column_end":47}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":103186,"byte_end":103215,"line_start":761,"line_end":761,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":103220,"byte_end":103223,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ state = pest::ParserState::new(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":103228,"byte_end":103270,"line_start":763,"line_end":763,"column_start":5,"column_end":47}},{"value":"/ state = state.match_string(\"ab\").unwrap();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":103275,"byte_end":103321,"line_start":764,"line_end":764,"column_start":5,"column_end":51}},{"value":"/ result = state.end_of_input();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":103326,"byte_end":103360,"line_start":765,"line_end":765,"column_start":5,"column_end":39}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":103365,"byte_end":103393,"line_start":766,"line_end":766,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":103398,"byte_end":103405,"line_start":767,"line_end":767,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":103410,"byte_end":103419,"line_start":768,"line_end":768,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":104478,"byte_end":104487,"line_start":802,"line_end":802,"column_start":12,"column_end":21},"name":"lookahead","qualname":"<ParserState>::lookahead","value":"fn lookahead<F>(Box<Self>, bool, F) -> ParseResult<Box<Self>> where\nF: FnOnce(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Starts a lookahead transformation provided by `f` from the `Box<ParserState>`. It returns\n `Ok` with the current `Box<ParserState>` if `f` also returns an `Ok`, or `Err` with the current\n `Box<ParserState>` otherwise. If `is_positive` is `false`, it swaps the `Ok` and `Err`\n together, negating the `Result`.","sig":null,"attributes":[{"value":"/ Starts a lookahead transformation provided by `f` from the `Box<ParserState>`. It returns","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":103606,"byte_end":103699,"line_start":777,"line_end":777,"column_start":5,"column_end":98}},{"value":"/ `Ok` with the current `Box<ParserState>` if `f` also returns an `Ok`, or `Err` with the current","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":103704,"byte_end":103803,"line_start":778,"line_end":778,"column_start":5,"column_end":104}},{"value":"/ `Box<ParserState>` otherwise. If `is_positive` is `false`, it swaps the `Ok` and `Err`","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":103808,"byte_end":103898,"line_start":779,"line_end":779,"column_start":5,"column_end":95}},{"value":"/ together, negating the `Result`.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":103903,"byte_end":103939,"line_start":780,"line_end":780,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":103944,"byte_end":103947,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":103952,"byte_end":103966,"line_start":782,"line_end":782,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":103971,"byte_end":103974,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":103979,"byte_end":103986,"line_start":784,"line_end":784,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":103991,"byte_end":104006,"line_start":785,"line_end":785,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":104011,"byte_end":104047,"line_start":786,"line_end":786,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":104052,"byte_end":104125,"line_start":787,"line_end":787,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":104130,"byte_end":104145,"line_start":788,"line_end":788,"column_start":5,"column_end":20}},{"value":"/     a","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":104150,"byte_end":104159,"line_start":789,"line_end":789,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":104164,"byte_end":104169,"line_start":790,"line_end":790,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":104174,"byte_end":104177,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ let input = \"a\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":104182,"byte_end":104202,"line_start":792,"line_end":792,"column_start":5,"column_end":25}},{"value":"/ let pairs: Vec<_> = pest::state(input, |state| {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":104207,"byte_end":104259,"line_start":793,"line_end":793,"column_start":5,"column_end":57}},{"value":"/     state.lookahead(true, |state| {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":104264,"byte_end":104303,"line_start":794,"line_end":794,"column_start":5,"column_end":44}},{"value":"/         state.rule(Rule::a, |s| Ok(s))","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":104308,"byte_end":104350,"line_start":795,"line_end":795,"column_start":5,"column_end":47}},{"value":"/     })","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":104355,"byte_end":104365,"line_start":796,"line_end":796,"column_start":5,"column_end":15}},{"value":"/ }).unwrap().collect();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":104370,"byte_end":104396,"line_start":797,"line_end":797,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":104401,"byte_end":104404,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(pairs.len(), 0);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":104409,"byte_end":104440,"line_start":799,"line_end":799,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":104445,"byte_end":104452,"line_start":800,"line_end":800,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":104457,"byte_end":104466,"line_start":801,"line_end":801,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":106577,"byte_end":106583,"line_start":870,"line_end":870,"column_start":12,"column_end":18},"name":"atomic","qualname":"<ParserState>::atomic","value":"fn atomic<F>(Box<Self>, Atomicity, F) -> ParseResult<Box<Self>> where\nF: FnOnce(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Transformation which stops `Token`s from being generated according to `is_atomic`.","sig":null,"attributes":[{"value":"/ Transformation which stops `Token`s from being generated according to `is_atomic`.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":105931,"byte_end":106017,"line_start":848,"line_end":848,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":106022,"byte_end":106025,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":106030,"byte_end":106044,"line_start":850,"line_end":850,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":106049,"byte_end":106052,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":106057,"byte_end":106064,"line_start":852,"line_end":852,"column_start":5,"column_end":12}},{"value":"/ # use pest::{self, Atomicity};","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":106069,"byte_end":106103,"line_start":853,"line_end":853,"column_start":5,"column_end":39}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":106108,"byte_end":106144,"line_start":854,"line_end":854,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":106149,"byte_end":106222,"line_start":855,"line_end":855,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":106227,"byte_end":106242,"line_start":856,"line_end":856,"column_start":5,"column_end":20}},{"value":"/     a","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":106247,"byte_end":106256,"line_start":857,"line_end":857,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":106261,"byte_end":106266,"line_start":858,"line_end":858,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":106271,"byte_end":106274,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ let input = \"a\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":106279,"byte_end":106299,"line_start":860,"line_end":860,"column_start":5,"column_end":25}},{"value":"/ let pairs: Vec<_> = pest::state(input, |state| {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":106304,"byte_end":106356,"line_start":861,"line_end":861,"column_start":5,"column_end":57}},{"value":"/     state.atomic(Atomicity::Atomic, |s| {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":106361,"byte_end":106406,"line_start":862,"line_end":862,"column_start":5,"column_end":50}},{"value":"/         s.rule(Rule::a, |s| Ok(s))","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":106411,"byte_end":106449,"line_start":863,"line_end":863,"column_start":5,"column_end":43}},{"value":"/     })","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":106454,"byte_end":106464,"line_start":864,"line_end":864,"column_start":5,"column_end":15}},{"value":"/ }).unwrap().collect();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":106469,"byte_end":106495,"line_start":865,"line_end":865,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":106500,"byte_end":106503,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(pairs.len(), 0);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":106508,"byte_end":106539,"line_start":867,"line_end":867,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":106544,"byte_end":106551,"line_start":868,"line_end":868,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":106556,"byte_end":106565,"line_start":869,"line_end":869,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":108216,"byte_end":108226,"line_start":919,"line_end":919,"column_start":12,"column_end":22},"name":"stack_push","qualname":"<ParserState>::stack_push","value":"fn stack_push<F>(Box<Self>, F) -> ParseResult<Box<Self>> where\nF: FnOnce(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Evaluates the result of closure `f` and pushes the span of the input consumed from before\n `f` is called to after `f` is called to the stack. Returns `Ok(Box<ParserState>)` if `f` is\n called successfully, or `Err(Box<ParserState>)` otherwise.","sig":null,"attributes":[{"value":"/ Evaluates the result of closure `f` and pushes the span of the input consumed from before","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":107426,"byte_end":107519,"line_start":900,"line_end":900,"column_start":5,"column_end":98}},{"value":"/ `f` is called to after `f` is called to the stack. Returns `Ok(Box<ParserState>)` if `f` is","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":107524,"byte_end":107619,"line_start":901,"line_end":901,"column_start":5,"column_end":100}},{"value":"/ called successfully, or `Err(Box<ParserState>)` otherwise.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":107624,"byte_end":107686,"line_start":902,"line_end":902,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":107691,"byte_end":107694,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":107699,"byte_end":107713,"line_start":904,"line_end":904,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":107718,"byte_end":107721,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":107726,"byte_end":107733,"line_start":906,"line_end":906,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":107738,"byte_end":107753,"line_start":907,"line_end":907,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":107758,"byte_end":107794,"line_start":908,"line_end":908,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":107799,"byte_end":107872,"line_start":909,"line_end":909,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":107877,"byte_end":107893,"line_start":910,"line_end":910,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":107898,"byte_end":107901,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":107906,"byte_end":107927,"line_start":912,"line_end":912,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":107932,"byte_end":108012,"line_start":913,"line_end":913,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.stack_push(|state| state.match_string(\"a\"));","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":108017,"byte_end":108088,"line_start":914,"line_end":914,"column_start":5,"column_end":76}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":108093,"byte_end":108121,"line_start":915,"line_end":915,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 1);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":108126,"byte_end":108178,"line_start":916,"line_end":916,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":108183,"byte_end":108190,"line_start":917,"line_end":917,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":108195,"byte_end":108204,"line_start":918,"line_end":918,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":109483,"byte_end":109493,"line_start":958,"line_end":958,"column_start":12,"column_end":22},"name":"stack_peek","qualname":"<ParserState>::stack_peek","value":"fn stack_peek(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Peeks the top of the stack and attempts to match the string. Returns `Ok(Box<ParserState>)`\n if the string is matched successfully, or `Err(Box<ParserState>)` otherwise.","sig":null,"attributes":[{"value":"/ Peeks the top of the stack and attempts to match the string. Returns `Ok(Box<ParserState>)`","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":108714,"byte_end":108809,"line_start":938,"line_end":938,"column_start":5,"column_end":100}},{"value":"/ if the string is matched successfully, or `Err(Box<ParserState>)` otherwise.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":108814,"byte_end":108894,"line_start":939,"line_end":939,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":108899,"byte_end":108902,"line_start":940,"line_end":940,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":108907,"byte_end":108921,"line_start":941,"line_end":941,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":108926,"byte_end":108929,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":108934,"byte_end":108941,"line_start":943,"line_end":943,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":108946,"byte_end":108961,"line_start":944,"line_end":944,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":108966,"byte_end":109002,"line_start":945,"line_end":945,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":109007,"byte_end":109080,"line_start":946,"line_end":946,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":109085,"byte_end":109101,"line_start":947,"line_end":947,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":109106,"byte_end":109109,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/ let input = \"aa\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":109114,"byte_end":109135,"line_start":949,"line_end":949,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":109140,"byte_end":109220,"line_start":950,"line_end":950,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.stack_push(|state| state.match_string(\"a\")).and_then(","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":109225,"byte_end":109305,"line_start":951,"line_end":951,"column_start":5,"column_end":85}},{"value":"/     |state| state.stack_peek()","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":109310,"byte_end":109344,"line_start":952,"line_end":952,"column_start":5,"column_end":39}},{"value":"/ );","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":109349,"byte_end":109355,"line_start":953,"line_end":953,"column_start":5,"column_end":11}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":109360,"byte_end":109388,"line_start":954,"line_end":954,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 2);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":109393,"byte_end":109445,"line_start":955,"line_end":955,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":109450,"byte_end":109457,"line_start":956,"line_end":956,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":109462,"byte_end":109471,"line_start":957,"line_end":957,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":110493,"byte_end":110502,"line_start":987,"line_end":987,"column_start":12,"column_end":21},"name":"stack_pop","qualname":"<ParserState>::stack_pop","value":"fn stack_pop(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Pops the top of the stack and attempts to match the string. Returns `Ok(Box<ParserState>)`\n if the string is matched successfully, or `Err(Box<ParserState>)` otherwise.","sig":null,"attributes":[{"value":"/ Pops the top of the stack and attempts to match the string. Returns `Ok(Box<ParserState>)`","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":109726,"byte_end":109820,"line_start":967,"line_end":967,"column_start":5,"column_end":99}},{"value":"/ if the string is matched successfully, or `Err(Box<ParserState>)` otherwise.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":109825,"byte_end":109905,"line_start":968,"line_end":968,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":109910,"byte_end":109913,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":109918,"byte_end":109932,"line_start":970,"line_end":970,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":109937,"byte_end":109940,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":109945,"byte_end":109952,"line_start":972,"line_end":972,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":109957,"byte_end":109972,"line_start":973,"line_end":973,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":109977,"byte_end":110013,"line_start":974,"line_end":974,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":110018,"byte_end":110091,"line_start":975,"line_end":975,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":110096,"byte_end":110112,"line_start":976,"line_end":976,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":110117,"byte_end":110120,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ let input = \"aa\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":110125,"byte_end":110146,"line_start":978,"line_end":978,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":110151,"byte_end":110231,"line_start":979,"line_end":979,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.stack_push(|state| state.match_string(\"a\")).and_then(","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":110236,"byte_end":110316,"line_start":980,"line_end":980,"column_start":5,"column_end":85}},{"value":"/     |state| state.stack_pop()","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":110321,"byte_end":110354,"line_start":981,"line_end":981,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":110359,"byte_end":110365,"line_start":982,"line_end":982,"column_start":5,"column_end":11}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":110370,"byte_end":110398,"line_start":983,"line_end":983,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 2);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":110403,"byte_end":110455,"line_start":984,"line_end":984,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":110460,"byte_end":110467,"line_start":985,"line_end":985,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":110472,"byte_end":110481,"line_start":986,"line_end":986,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":111891,"byte_end":111913,"line_start":1021,"line_end":1021,"column_start":12,"column_end":34},"name":"stack_match_peek_slice","qualname":"<ParserState>::stack_match_peek_slice","value":"fn stack_match_peek_slice(Box<Self>, i32, Option<i32>, MatchDir)\n-> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Matches part of the state of the stack.","sig":null,"attributes":[{"value":"/ Matches part of the state of the stack.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":110737,"byte_end":110780,"line_start":996,"line_end":996,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":110785,"byte_end":110788,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":110793,"byte_end":110807,"line_start":998,"line_end":998,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":110812,"byte_end":110815,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":110820,"byte_end":110827,"line_start":1000,"line_end":1000,"column_start":5,"column_end":12}},{"value":"/ # use pest::{self, MatchDir};","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":110832,"byte_end":110865,"line_start":1001,"line_end":1001,"column_start":5,"column_end":38}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":110870,"byte_end":110906,"line_start":1002,"line_end":1002,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":110911,"byte_end":110984,"line_start":1003,"line_end":1003,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":110989,"byte_end":111005,"line_start":1004,"line_end":1004,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":111010,"byte_end":111013,"line_start":1005,"line_end":1005,"column_start":5,"column_end":8}},{"value":"/ let input = \"abcd cd cb\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":111018,"byte_end":111047,"line_start":1006,"line_end":1006,"column_start":5,"column_end":34}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":111052,"byte_end":111132,"line_start":1007,"line_end":1007,"column_start":5,"column_end":85}},{"value":"/ let mut result = state","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":111137,"byte_end":111163,"line_start":1008,"line_end":1008,"column_start":5,"column_end":31}},{"value":"/     .stack_push(|state| state.match_string(\"a\"))","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":111168,"byte_end":111220,"line_start":1009,"line_end":1009,"column_start":5,"column_end":57}},{"value":"/     .and_then(|state| state.stack_push(|state| state.match_string(\"b\")))","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":111225,"byte_end":111301,"line_start":1010,"line_end":1010,"column_start":5,"column_end":81}},{"value":"/     .and_then(|state| state.stack_push(|state| state.match_string(\"c\")))","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":111306,"byte_end":111382,"line_start":1011,"line_end":1011,"column_start":5,"column_end":81}},{"value":"/     .and_then(|state| state.stack_push(|state| state.match_string(\"d\")))","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":111387,"byte_end":111463,"line_start":1012,"line_end":1012,"column_start":5,"column_end":81}},{"value":"/     .and_then(|state| state.match_string(\" \"))","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":111468,"byte_end":111518,"line_start":1013,"line_end":1013,"column_start":5,"column_end":55}},{"value":"/     .and_then(|state| state.stack_match_peek_slice(2, None, MatchDir::BottomToTop))","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":111523,"byte_end":111610,"line_start":1014,"line_end":1014,"column_start":5,"column_end":92}},{"value":"/     .and_then(|state| state.match_string(\" \"))","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":111615,"byte_end":111665,"line_start":1015,"line_end":1015,"column_start":5,"column_end":55}},{"value":"/     .and_then(|state| state.stack_match_peek_slice(1, Some(-1), MatchDir::TopToBottom));","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":111670,"byte_end":111762,"line_start":1016,"line_end":1016,"column_start":5,"column_end":97}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":111767,"byte_end":111795,"line_start":1017,"line_end":1017,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 10);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":111800,"byte_end":111853,"line_start":1018,"line_end":1018,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":111858,"byte_end":111865,"line_start":1019,"line_end":1019,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":111870,"byte_end":111879,"line_start":1020,"line_end":1020,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":113590,"byte_end":113606,"line_start":1073,"line_end":1073,"column_start":12,"column_end":28},"name":"stack_match_peek","qualname":"<ParserState>::stack_match_peek","value":"fn stack_match_peek(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Matches the full state of the stack.","sig":null,"attributes":[{"value":"/ Matches the full state of the stack.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":112864,"byte_end":112904,"line_start":1053,"line_end":1053,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":112909,"byte_end":112912,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":112917,"byte_end":112931,"line_start":1055,"line_end":1055,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":112936,"byte_end":112939,"line_start":1056,"line_end":1056,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":112944,"byte_end":112951,"line_start":1057,"line_end":1057,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":112956,"byte_end":112971,"line_start":1058,"line_end":1058,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":112976,"byte_end":113012,"line_start":1059,"line_end":1059,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":113017,"byte_end":113090,"line_start":1060,"line_end":1060,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":113095,"byte_end":113111,"line_start":1061,"line_end":1061,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":113116,"byte_end":113119,"line_start":1062,"line_end":1062,"column_start":5,"column_end":8}},{"value":"/ let input = \"abba\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":113124,"byte_end":113147,"line_start":1063,"line_end":1063,"column_start":5,"column_end":28}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":113152,"byte_end":113232,"line_start":1064,"line_end":1064,"column_start":5,"column_end":85}},{"value":"/ let mut result = state","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":113237,"byte_end":113263,"line_start":1065,"line_end":1065,"column_start":5,"column_end":31}},{"value":"/     .stack_push(|state| state.match_string(\"a\"))","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":113268,"byte_end":113320,"line_start":1066,"line_end":1066,"column_start":5,"column_end":57}},{"value":"/     .and_then(|state| { state.stack_push(|state| state.match_string(\"b\")) })","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":113325,"byte_end":113405,"line_start":1067,"line_end":1067,"column_start":5,"column_end":85}},{"value":"/     .and_then(|state| state.stack_match_peek());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":113410,"byte_end":113462,"line_start":1068,"line_end":1068,"column_start":5,"column_end":57}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":113467,"byte_end":113495,"line_start":1069,"line_end":1069,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 4);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":113500,"byte_end":113552,"line_start":1070,"line_end":1070,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":113557,"byte_end":113564,"line_start":1071,"line_end":1071,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":113569,"byte_end":113578,"line_start":1072,"line_end":1072,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":114492,"byte_end":114507,"line_start":1096,"line_end":1096,"column_start":12,"column_end":27},"name":"stack_match_pop","qualname":"<ParserState>::stack_match_pop","value":"fn stack_match_pop(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Matches the full state of the stack. This method will clear the stack as it evaluates.","sig":null,"attributes":[{"value":"/ Matches the full state of the stack. This method will clear the stack as it evaluates.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":113731,"byte_end":113821,"line_start":1077,"line_end":1077,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":113826,"byte_end":113829,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":113834,"byte_end":113848,"line_start":1079,"line_end":1079,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":113853,"byte_end":113856,"line_start":1080,"line_end":1080,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":113861,"byte_end":113868,"line_start":1081,"line_end":1081,"column_start":5,"column_end":12}},{"value":"/ /// # use pest;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":113873,"byte_end":113892,"line_start":1082,"line_end":1082,"column_start":5,"column_end":24}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":113897,"byte_end":113933,"line_start":1083,"line_end":1083,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":113938,"byte_end":114011,"line_start":1084,"line_end":1084,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":114016,"byte_end":114032,"line_start":1085,"line_end":1085,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":114037,"byte_end":114040,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ let input = \"aaaa\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":114045,"byte_end":114068,"line_start":1087,"line_end":1087,"column_start":5,"column_end":28}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":114073,"byte_end":114153,"line_start":1088,"line_end":1088,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.stack_push(|state| state.match_string(\"a\")).and_then(|state| {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":114158,"byte_end":114247,"line_start":1089,"line_end":1089,"column_start":5,"column_end":94}},{"value":"/     state.stack_push(|state| state.match_string(\"a\"))","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":114252,"byte_end":114309,"line_start":1090,"line_end":1090,"column_start":5,"column_end":62}},{"value":"/ }).and_then(|state| state.stack_match_peek());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":114314,"byte_end":114364,"line_start":1091,"line_end":1091,"column_start":5,"column_end":55}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":114369,"byte_end":114397,"line_start":1092,"line_end":1092,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 4);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":114402,"byte_end":114454,"line_start":1093,"line_end":1093,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":114459,"byte_end":114466,"line_start":1094,"line_end":1094,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":114471,"byte_end":114480,"line_start":1095,"line_end":1095,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":115678,"byte_end":115688,"line_start":1134,"line_end":1134,"column_start":12,"column_end":22},"name":"stack_drop","qualname":"<ParserState>::stack_drop","value":"fn stack_drop(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Drops the top of the stack. Returns `Ok(Box<ParserState>)` if there was a value to drop, or\n `Err(Box<ParserState>)` otherwise.","sig":null,"attributes":[{"value":"/ Drops the top of the stack. Returns `Ok(Box<ParserState>)` if there was a value to drop, or","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":114951,"byte_end":115046,"line_start":1114,"line_end":1114,"column_start":5,"column_end":100}},{"value":"/ `Err(Box<ParserState>)` otherwise.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":115051,"byte_end":115089,"line_start":1115,"line_end":1115,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":115094,"byte_end":115097,"line_start":1116,"line_end":1116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":115102,"byte_end":115116,"line_start":1117,"line_end":1117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":115121,"byte_end":115124,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":115129,"byte_end":115136,"line_start":1119,"line_end":1119,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":115141,"byte_end":115156,"line_start":1120,"line_end":1120,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":115161,"byte_end":115197,"line_start":1121,"line_end":1121,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":115202,"byte_end":115275,"line_start":1122,"line_end":1122,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":115280,"byte_end":115296,"line_start":1123,"line_end":1123,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":115301,"byte_end":115304,"line_start":1124,"line_end":1124,"column_start":5,"column_end":8}},{"value":"/ let input = \"aa\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":115309,"byte_end":115330,"line_start":1125,"line_end":1125,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":115335,"byte_end":115415,"line_start":1126,"line_end":1126,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.stack_push(|state| state.match_string(\"a\")).and_then(","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":115420,"byte_end":115500,"line_start":1127,"line_end":1127,"column_start":5,"column_end":85}},{"value":"/     |state| state.stack_drop()","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":115505,"byte_end":115539,"line_start":1128,"line_end":1128,"column_start":5,"column_end":39}},{"value":"/ );","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":115544,"byte_end":115550,"line_start":1129,"line_end":1129,"column_start":5,"column_end":11}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":115555,"byte_end":115583,"line_start":1130,"line_end":1130,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 1);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":115588,"byte_end":115640,"line_start":1131,"line_end":1131,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":115645,"byte_end":115652,"line_start":1132,"line_end":1132,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":115657,"byte_end":115666,"line_start":1133,"line_end":1133,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":116791,"byte_end":116805,"line_start":1165,"line_end":1165,"column_start":12,"column_end":26},"name":"restore_on_err","qualname":"<ParserState>::restore_on_err","value":"fn restore_on_err<F>(Box<Self>, F) -> ParseResult<Box<Self>> where\nF: FnOnce(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Restores the original state of the `ParserState` when `f` returns an `Err`. Currently,\n this method only restores the stack.","sig":null,"attributes":[{"value":"/ Restores the original state of the `ParserState` when `f` returns an `Err`. Currently,","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":115856,"byte_end":115946,"line_start":1141,"line_end":1141,"column_start":5,"column_end":95}},{"value":"/ this method only restores the stack.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":115951,"byte_end":115991,"line_start":1142,"line_end":1142,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":115996,"byte_end":115999,"line_start":1143,"line_end":1143,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":116004,"byte_end":116018,"line_start":1144,"line_end":1144,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":116023,"byte_end":116026,"line_start":1145,"line_end":1145,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":116031,"byte_end":116038,"line_start":1146,"line_end":1146,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":116043,"byte_end":116058,"line_start":1147,"line_end":1147,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":116063,"byte_end":116099,"line_start":1148,"line_end":1148,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":116104,"byte_end":116177,"line_start":1149,"line_end":1149,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":116182,"byte_end":116198,"line_start":1150,"line_end":1150,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":116203,"byte_end":116206,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":116211,"byte_end":116232,"line_start":1152,"line_end":1152,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":116237,"byte_end":116317,"line_start":1153,"line_end":1153,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.restore_on_err(|state| state.stack_push(|state|","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":116322,"byte_end":116396,"line_start":1154,"line_end":1154,"column_start":5,"column_end":79}},{"value":"/     state.match_string(\"a\")).and_then(|state| state.match_string(\"a\"))","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":116401,"byte_end":116475,"line_start":1155,"line_end":1155,"column_start":5,"column_end":79}},{"value":"/ );","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":116480,"byte_end":116486,"line_start":1156,"line_end":1156,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":116491,"byte_end":116494,"line_start":1157,"line_end":1157,"column_start":5,"column_end":8}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":116499,"byte_end":116528,"line_start":1158,"line_end":1158,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":116533,"byte_end":116536,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ // Since the the rule doesn't match, the \"a\" pushed to the stack will be removed.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":116541,"byte_end":116626,"line_start":1160,"line_end":1160,"column_start":5,"column_end":90}},{"value":"/ let catch_panic = std::panic::catch_unwind(|| result.unwrap_err().stack_pop());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":116631,"byte_end":116714,"line_start":1161,"line_end":1161,"column_start":5,"column_end":88}},{"value":"/ assert!(catch_panic.is_err());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":116719,"byte_end":116753,"line_start":1162,"line_end":1162,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":116758,"byte_end":116765,"line_start":1163,"line_end":1163,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":116770,"byte_end":116779,"line_start":1164,"line_end":1164,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1147},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":119504,"byte_end":119512,"line_start":21,"line_end":21,"column_start":12,"column_end":20},"name":"Position","qualname":"::position::Position","value":"Position {  }","parent":null,"children":[{"krate":0,"index":1149},{"krate":0,"index":1150}],"decl_id":null,"docs":" A cursor position in a `&str` which provides useful methods to manually parse that string.\n","sig":null,"attributes":[{"value":"/ A cursor position in a `&str` which provides useful methods to manually parse that string.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":119375,"byte_end":119469,"line_start":19,"line_end":19,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":120576,"byte_end":120579,"line_start":52,"line_end":52,"column_start":12,"column_end":15},"name":"new","qualname":"<Position>::new","value":"fn new<'_>(&'_ str, usize) -> Option<Position>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to create a new `Position` at the given position. If the specified position is\n an invalid index, or the specified position is not a valid UTF8 boundary, then None is\n returned.","sig":null,"attributes":[{"value":"/ Attempts to create a new `Position` at the given position. If the specified position is","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":120104,"byte_end":120195,"line_start":40,"line_end":40,"column_start":5,"column_end":96}},{"value":"/ an invalid index, or the specified position is not a valid UTF8 boundary, then None is","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":120200,"byte_end":120290,"line_start":41,"line_end":41,"column_start":5,"column_end":95}},{"value":"/ returned.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":120295,"byte_end":120308,"line_start":42,"line_end":42,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":120313,"byte_end":120316,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":120321,"byte_end":120335,"line_start":44,"line_end":44,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":120340,"byte_end":120347,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ # use pest::Position;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":120352,"byte_end":120377,"line_start":46,"line_end":46,"column_start":5,"column_end":30}},{"value":"/ let cheart = '💖';","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":120382,"byte_end":120406,"line_start":47,"line_end":47,"column_start":5,"column_end":26}},{"value":"/ let heart = \"💖\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":120411,"byte_end":120434,"line_start":48,"line_end":48,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(Position::new(heart, 1), None);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":120439,"byte_end":120485,"line_start":49,"line_end":49,"column_start":5,"column_end":51}},{"value":"/ assert_ne!(Position::new(heart, cheart.len_utf8()), None);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":120490,"byte_end":120552,"line_start":50,"line_end":50,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":120557,"byte_end":120564,"line_start":51,"line_end":51,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":120943,"byte_end":120953,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"from_start","qualname":"<Position>::from_start","value":"fn from_start(&'i str) -> Position","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Position` at the start of a `&str`.","sig":null,"attributes":[{"value":"/ Creates a `Position` at the start of a `&str`.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":120696,"byte_end":120746,"line_start":56,"line_end":56,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":120751,"byte_end":120754,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":120759,"byte_end":120773,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":120778,"byte_end":120781,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":120786,"byte_end":120793,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"/ # use pest::Position;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":120798,"byte_end":120823,"line_start":61,"line_end":61,"column_start":5,"column_end":30}},{"value":"/ let start = Position::from_start(\"\");","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":120828,"byte_end":120869,"line_start":62,"line_end":62,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(start.pos(), 0);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":120874,"byte_end":120905,"line_start":63,"line_end":63,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":120910,"byte_end":120917,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":120922,"byte_end":120931,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":121413,"byte_end":121416,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"pos","qualname":"<Position>::pos","value":"fn pos<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the byte position of this `Position` as a `usize`.","sig":null,"attributes":[{"value":"/ Returns the byte position of this `Position` as a `usize`.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":121113,"byte_end":121175,"line_start":71,"line_end":71,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":121180,"byte_end":121183,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":121188,"byte_end":121202,"line_start":73,"line_end":73,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":121207,"byte_end":121210,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":121215,"byte_end":121222,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ # use pest::Position;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":121227,"byte_end":121252,"line_start":76,"line_end":76,"column_start":5,"column_end":30}},{"value":"/ let input = \"ab\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":121257,"byte_end":121278,"line_start":77,"line_end":77,"column_start":5,"column_end":26}},{"value":"/ let mut start = Position::from_start(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":121283,"byte_end":121331,"line_start":78,"line_end":78,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":121336,"byte_end":121339,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(start.pos(), 0);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":121344,"byte_end":121375,"line_start":80,"line_end":80,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":121380,"byte_end":121387,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":121392,"byte_end":121401,"line_start":82,"line_end":82,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":121915,"byte_end":121919,"line_start":105,"line_end":105,"column_start":12,"column_end":16},"name":"span","qualname":"<Position>::span","value":"fn span<'_, '_>(&'_ Self, &'_ Position) -> span::Span","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Span` from two `Position`s.","sig":null,"attributes":[{"value":"/ Creates a `Span` from two `Position`s.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":121463,"byte_end":121505,"line_start":87,"line_end":87,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":121510,"byte_end":121513,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":121518,"byte_end":121530,"line_start":89,"line_end":89,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":121535,"byte_end":121538,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Panics if the positions come from different inputs.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":121543,"byte_end":121598,"line_start":91,"line_end":91,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":121603,"byte_end":121606,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":121611,"byte_end":121625,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":121630,"byte_end":121633,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":121638,"byte_end":121645,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/ # use pest::Position;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":121650,"byte_end":121675,"line_start":96,"line_end":96,"column_start":5,"column_end":30}},{"value":"/ let input = \"ab\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":121680,"byte_end":121701,"line_start":97,"line_end":97,"column_start":5,"column_end":26}},{"value":"/ let start = Position::from_start(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":121706,"byte_end":121750,"line_start":98,"line_end":98,"column_start":5,"column_end":49}},{"value":"/ let span = start.span(&start.clone());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":121755,"byte_end":121797,"line_start":99,"line_end":99,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":121802,"byte_end":121805,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(span.start(), 0);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":121810,"byte_end":121842,"line_start":101,"line_end":101,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(span.end(), 0);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":121847,"byte_end":121877,"line_start":102,"line_end":102,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":121882,"byte_end":121889,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":121894,"byte_end":121903,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":123012,"byte_end":123020,"line_start":134,"line_end":134,"column_start":12,"column_end":20},"name":"line_col","qualname":"<Position>::line_col","value":"fn line_col<'_>(&'_ Self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Returns the line and column number of this `Position`.","sig":null,"attributes":[{"value":"/ Returns the line and column number of this `Position`.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":122437,"byte_end":122495,"line_start":117,"line_end":117,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":122500,"byte_end":122503,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":122508,"byte_end":122522,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":122527,"byte_end":122530,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":122535,"byte_end":122542,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":122547,"byte_end":122562,"line_start":122,"line_end":122,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":122567,"byte_end":122603,"line_start":123,"line_end":123,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":122608,"byte_end":122681,"line_start":124,"line_end":124,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":122686,"byte_end":122702,"line_start":125,"line_end":125,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":122707,"byte_end":122710,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ let input = \"\\na\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":122715,"byte_end":122737,"line_start":127,"line_end":127,"column_start":5,"column_end":27}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":122742,"byte_end":122822,"line_start":128,"line_end":128,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.match_string(\"\\na\");","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":122827,"byte_end":122874,"line_start":129,"line_end":129,"column_start":5,"column_end":52}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":122879,"byte_end":122907,"line_start":130,"line_end":130,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().line_col(), (2, 2));","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":122912,"byte_end":122974,"line_start":131,"line_end":131,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":122979,"byte_end":122986,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":122991,"byte_end":123000,"line_start":133,"line_end":133,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":123969,"byte_end":123976,"line_start":165,"line_end":165,"column_start":12,"column_end":19},"name":"line_of","qualname":"<Position>::line_of","value":"fn line_of<'_>(&'_ Self) -> &'i str","parent":null,"children":[],"decl_id":null,"docs":" Returns the entire line of the input that contains this `Position`.","sig":null,"attributes":[{"value":"/ Returns the entire line of the input that contains this `Position`.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":123385,"byte_end":123456,"line_start":148,"line_end":148,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":123461,"byte_end":123464,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":123469,"byte_end":123483,"line_start":150,"line_end":150,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":123488,"byte_end":123491,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":123496,"byte_end":123503,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":123508,"byte_end":123523,"line_start":153,"line_end":153,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":123528,"byte_end":123564,"line_start":154,"line_end":154,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":123569,"byte_end":123642,"line_start":155,"line_end":155,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":123647,"byte_end":123663,"line_start":156,"line_end":156,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":123668,"byte_end":123671,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ let input = \"\\na\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":123676,"byte_end":123698,"line_start":158,"line_end":158,"column_start":5,"column_end":27}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":123703,"byte_end":123783,"line_start":159,"line_end":159,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.match_string(\"\\na\");","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":123788,"byte_end":123835,"line_start":160,"line_end":160,"column_start":5,"column_end":52}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":123840,"byte_end":123868,"line_start":161,"line_end":161,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().line_of(), \"a\");","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":123873,"byte_end":123931,"line_start":162,"line_end":162,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":123936,"byte_end":123943,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":123948,"byte_end":123957,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":130406,"byte_end":130409,"line_start":367,"line_end":367,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Position as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10266},"children":[],"decl_id":{"krate":1,"index":10267},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":130580,"byte_end":130582,"line_start":373,"line_end":373,"column_start":8,"column_end":10},"name":"eq","qualname":"<Position as core::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ Position) -> bool","parent":{"krate":1,"index":2901},"children":[],"decl_id":{"krate":1,"index":2903},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":130776,"byte_end":130787,"line_start":381,"line_end":381,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<Position as core::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ Position) -> Option<Ordering>","parent":{"krate":1,"index":2947},"children":[],"decl_id":{"krate":1,"index":2949},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":131022,"byte_end":131025,"line_start":391,"line_end":391,"column_start":8,"column_end":11},"name":"cmp","qualname":"<Position as core::cmp::Ord>::cmp","value":"fn cmp<'_, '_>(&'_ Self, &'_ Position) -> Ordering","parent":{"krate":1,"index":2937},"children":[],"decl_id":{"krate":1,"index":2938},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":131218,"byte_end":131222,"line_start":398,"line_end":398,"column_start":8,"column_end":12},"name":"hash","qualname":"<Position as core::hash::Hash>::hash","value":"fn hash<H, '_, '_>(&'_ Self, &'_ mut H) where H: Hasher","parent":{"krate":1,"index":10504},"children":[],"decl_id":{"krate":1,"index":10505},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":645},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pratt_parser","qualname":"::pratt_parser","value":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","parent":null,"children":[{"krate":0,"index":646},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":652},{"krate":0,"index":655},{"krate":0,"index":658},{"krate":0,"index":661},{"krate":0,"index":664},{"krate":0,"index":1156},{"krate":0,"index":1161},{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":674},{"krate":0,"index":682},{"krate":0,"index":687},{"krate":0,"index":693},{"krate":0,"index":700},{"krate":0,"index":703},{"krate":0,"index":713},{"krate":0,"index":717},{"krate":0,"index":721},{"krate":0,"index":725},{"krate":0,"index":737}],"decl_id":null,"docs":" Constructs useful in prefix, postfix, and infix operator parsing with the\n Pratt parsing method.\n","sig":null,"attributes":[{"value":"/ Constructs useful in prefix, postfix, and infix operator parsing with the","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":138678,"byte_end":138755,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ Pratt parsing method.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":138756,"byte_end":138781,"line_start":11,"line_end":11,"column_start":1,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1157},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":139237,"byte_end":139241,"line_start":29,"line_end":29,"column_start":5,"column_end":9},"name":"Left","qualname":"::pratt_parser::Assoc::Left","value":"Assoc::Left","parent":{"krate":0,"index":1156},"children":[],"decl_id":null,"docs":" Left operator associativity. Evaluate expressions from left-to-right.\n","sig":null,"attributes":[{"value":"/ Left operator associativity. Evaluate expressions from left-to-right.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":139159,"byte_end":139232,"line_start":28,"line_end":28,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1159},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":139326,"byte_end":139331,"line_start":31,"line_end":31,"column_start":5,"column_end":10},"name":"Right","qualname":"::pratt_parser::Assoc::Right","value":"Assoc::Right","parent":{"krate":0,"index":1156},"children":[],"decl_id":null,"docs":" Right operator associativity. Evaluate expressions from right-to-left.\n","sig":null,"attributes":[{"value":"/ Right operator associativity. Evaluate expressions from right-to-left.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":139247,"byte_end":139321,"line_start":30,"line_end":30,"column_start":5,"column_end":79}}]},{"kind":"Enum","id":{"krate":0,"index":1156},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":139147,"byte_end":139152,"line_start":27,"line_end":27,"column_start":10,"column_end":15},"name":"Assoc","qualname":"::pratt_parser::Assoc","value":"enum Assoc { Left, Right, }","parent":null,"children":[{"krate":0,"index":1157},{"krate":0,"index":1159}],"decl_id":null,"docs":" Associativity of an infix binary operator, used by [`Op::infix(Assoc)`].","sig":null,"attributes":[{"value":"/ Associativity of an infix binary operator, used by [`Op::infix(Assoc)`].","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":138971,"byte_end":139047,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":139048,"byte_end":139051,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`Op::infix(Assoc)`]: struct.Op.html","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":139052,"byte_end":139092,"line_start":25,"line_end":25,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":669},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":139437,"byte_end":139439,"line_start":38,"line_end":38,"column_start":12,"column_end":14},"name":"Op","qualname":"::pratt_parser::Op","value":"Op {  }","parent":null,"children":[{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673}],"decl_id":null,"docs":" An operator that corresponds to a rule.\n","sig":null,"attributes":[{"value":"/ An operator that corresponds to a rule.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":139382,"byte_end":139425,"line_start":37,"line_end":37,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":139666,"byte_end":139672,"line_start":52,"line_end":52,"column_start":12,"column_end":18},"name":"prefix","qualname":"<Op<R>>::prefix","value":"fn prefix(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Defines `rule` as a prefix unary operator.\n","sig":null,"attributes":[{"value":"/ Defines `rule` as a prefix unary operator.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":139608,"byte_end":139654,"line_start":51,"line_end":51,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":139863,"byte_end":139870,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"postfix","qualname":"<Op<R>>::postfix","value":"fn postfix(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Defines `rule` as a postfix unary operator.\n","sig":null,"attributes":[{"value":"/ Defines `rule` as a postfix unary operator.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":139804,"byte_end":139851,"line_start":60,"line_end":60,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":140089,"byte_end":140094,"line_start":70,"line_end":70,"column_start":12,"column_end":17},"name":"infix","qualname":"<Op<R>>::infix","value":"fn infix(R, Assoc) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Defines `rule` as an infix binary operator with associativity `assoc`.\n","sig":null,"attributes":[{"value":"/ Defines `rule` as an infix binary operator with associativity `assoc`.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":140003,"byte_end":140077,"line_start":69,"line_end":69,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":140312,"byte_end":140317,"line_start":82,"line_end":82,"column_start":8,"column_end":13},"name":"bitor","qualname":"<Op<R> as core::ops::BitOr>::bitor","value":"fn bitor(Self, Self) -> Self","parent":{"krate":1,"index":3381},"children":[],"decl_id":{"krate":1,"index":3384},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":693},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":145045,"byte_end":145056,"line_start":195,"line_end":195,"column_start":12,"column_end":23},"name":"PrattParser","qualname":"::pratt_parser::PrattParser","value":"PrattParser {  }","parent":null,"children":[{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699}],"decl_id":null,"docs":" Struct containing operators and precedences, which can perform [Pratt parsing][1] on\n primary, prefix, postfix and infix expressions over [`Pairs`]. The tokens in [`Pairs`]\n should alternate in the order:\n `prefix* ~ primary ~ postfix* ~ (infix ~ prefix* ~ primary ~ postfix*)*`","sig":null,"attributes":[{"value":"/ Struct containing operators and precedences, which can perform [Pratt parsing][1] on","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":140662,"byte_end":140750,"line_start":96,"line_end":96,"column_start":1,"column_end":89}},{"value":"/ primary, prefix, postfix and infix expressions over [`Pairs`]. The tokens in [`Pairs`]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":140751,"byte_end":140841,"line_start":97,"line_end":97,"column_start":1,"column_end":91}},{"value":"/ should alternate in the order:","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":140842,"byte_end":140876,"line_start":98,"line_end":98,"column_start":1,"column_end":35}},{"value":"/ `prefix* ~ primary ~ postfix* ~ (infix ~ prefix* ~ primary ~ postfix*)*`","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":140877,"byte_end":140953,"line_start":99,"line_end":99,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":140954,"byte_end":140957,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":140958,"byte_end":140970,"line_start":101,"line_end":101,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":140971,"byte_end":140974,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Panics will occur when:","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":140975,"byte_end":141002,"line_start":103,"line_end":103,"column_start":1,"column_end":28}},{"value":"/ * `pairs` is empty","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":141003,"byte_end":141025,"line_start":104,"line_end":104,"column_start":1,"column_end":23}},{"value":"/ * The tokens in `pairs` does not alternate in the expected order.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":141026,"byte_end":141095,"line_start":105,"line_end":105,"column_start":1,"column_end":70}},{"value":"/ * No `map_*` function is specified for a certain kind of operator encountered in `pairs`.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":141096,"byte_end":141189,"line_start":106,"line_end":106,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":141190,"byte_end":141193,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":141194,"byte_end":141207,"line_start":108,"line_end":108,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":141208,"byte_end":141211,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ The following pest grammar defines a calculator which can be used for Pratt parsing.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":141212,"byte_end":141300,"line_start":110,"line_end":110,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":141301,"byte_end":141304,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ ```pest","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":141305,"byte_end":141316,"line_start":112,"line_end":112,"column_start":1,"column_end":12}},{"value":"/ WHITESPACE   =  _{ \" \" | \"\\t\" | NEWLINE }","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":141317,"byte_end":141362,"line_start":113,"line_end":113,"column_start":1,"column_end":46}},{"value":"/  ","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":141363,"byte_end":141368,"line_start":114,"line_end":114,"column_start":1,"column_end":6}},{"value":"/ program      =   { SOI ~ expr ~ EOI }","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":141369,"byte_end":141410,"line_start":115,"line_end":115,"column_start":1,"column_end":42}},{"value":"/   expr       =   { prefix* ~ primary ~ postfix* ~ (infix ~ prefix* ~ primary ~ postfix* )* }","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":141411,"byte_end":141507,"line_start":116,"line_end":116,"column_start":1,"column_end":97}},{"value":"/     infix    =  _{ add | sub | mul | div | pow }","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":141508,"byte_end":141560,"line_start":117,"line_end":117,"column_start":1,"column_end":53}},{"value":"/       add    =   { \"+\" } // Addition","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":141561,"byte_end":141601,"line_start":118,"line_end":118,"column_start":1,"column_end":41}},{"value":"/       sub    =   { \"-\" } // Subtraction","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":141602,"byte_end":141645,"line_start":119,"line_end":119,"column_start":1,"column_end":44}},{"value":"/       mul    =   { \"*\" } // Multiplication","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":141646,"byte_end":141692,"line_start":120,"line_end":120,"column_start":1,"column_end":47}},{"value":"/       div    =   { \"/\" } // Division","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":141693,"byte_end":141733,"line_start":121,"line_end":121,"column_start":1,"column_end":41}},{"value":"/       pow    =   { \"^\" } // Exponentiation","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":141734,"byte_end":141780,"line_start":122,"line_end":122,"column_start":1,"column_end":47}},{"value":"/     prefix   =  _{ neg }","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":141781,"byte_end":141809,"line_start":123,"line_end":123,"column_start":1,"column_end":29}},{"value":"/       neg    =   { \"-\" } // Negation","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":141810,"byte_end":141850,"line_start":124,"line_end":124,"column_start":1,"column_end":41}},{"value":"/     postfix  =  _{ fac }","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":141851,"byte_end":141879,"line_start":125,"line_end":125,"column_start":1,"column_end":29}},{"value":"/       fac    =   { \"!\" } // Factorial","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":141880,"byte_end":141921,"line_start":126,"line_end":126,"column_start":1,"column_end":42}},{"value":"/     primary  =  _{ int | \"(\" ~ expr ~ \")\" }","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":141922,"byte_end":141969,"line_start":127,"line_end":127,"column_start":1,"column_end":48}},{"value":"/       int    =  @{ (ASCII_NONZERO_DIGIT ~ ASCII_DIGIT+ | ASCII_DIGIT) }","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":141970,"byte_end":142045,"line_start":128,"line_end":128,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":142046,"byte_end":142053,"line_start":129,"line_end":129,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":142054,"byte_end":142057,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ Below is a [`PrattParser`] that is able to parse an `expr` in the above grammar. The order","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":142058,"byte_end":142152,"line_start":131,"line_end":131,"column_start":1,"column_end":95}},{"value":"/ of precedence corresponds to the order in which [`op`] is called. Thus, `mul` will","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":142153,"byte_end":142239,"line_start":132,"line_end":132,"column_start":1,"column_end":87}},{"value":"/ have higher precedence than `add`. Operators can also be chained with `|` to give them equal","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":142240,"byte_end":142336,"line_start":133,"line_end":133,"column_start":1,"column_end":97}},{"value":"/ precedence.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":142337,"byte_end":142352,"line_start":134,"line_end":134,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":142353,"byte_end":142356,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":142357,"byte_end":142364,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/ # use pest::pratt_parser::{Assoc, Op, PrattParser};","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":142365,"byte_end":142420,"line_start":137,"line_end":137,"column_start":1,"column_end":56}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":142421,"byte_end":142494,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ # enum Rule { program, expr, int, add, mul, sub, div, pow, fac, neg }","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":142495,"byte_end":142568,"line_start":139,"line_end":139,"column_start":1,"column_end":74}},{"value":"/ let pratt =","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":142569,"byte_end":142584,"line_start":140,"line_end":140,"column_start":1,"column_end":16}},{"value":"/     PrattParser::new()","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":142585,"byte_end":142611,"line_start":141,"line_end":141,"column_start":1,"column_end":27}},{"value":"/         .op(Op::infix(Rule::add, Assoc::Left) | Op::infix(Rule::sub, Assoc::Left))","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":142612,"byte_end":142698,"line_start":142,"line_end":142,"column_start":1,"column_end":87}},{"value":"/         .op(Op::infix(Rule::mul, Assoc::Left) | Op::infix(Rule::div, Assoc::Left))","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":142699,"byte_end":142785,"line_start":143,"line_end":143,"column_start":1,"column_end":87}},{"value":"/         .op(Op::infix(Rule::pow, Assoc::Right))","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":142786,"byte_end":142837,"line_start":144,"line_end":144,"column_start":1,"column_end":52}},{"value":"/         .op(Op::postfix(Rule::fac))","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":142838,"byte_end":142877,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/         .op(Op::prefix(Rule::neg));","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":142878,"byte_end":142917,"line_start":146,"line_end":146,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":142918,"byte_end":142925,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":142926,"byte_end":142929,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ To parse an expression, call the [`map_primary`], [`map_prefix`], [`map_postfix`],","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":142930,"byte_end":143016,"line_start":149,"line_end":149,"column_start":1,"column_end":87}},{"value":"/ [`map_infix`] and [`parse`] methods as follows:","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":143017,"byte_end":143068,"line_start":150,"line_end":150,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":143069,"byte_end":143072,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":143073,"byte_end":143080,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"/ # use pest::{iterators::Pairs, pratt_parser::PrattParser};","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":143081,"byte_end":143143,"line_start":153,"line_end":153,"column_start":1,"column_end":63}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":143144,"byte_end":143217,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ # enum Rule { program, expr, int, add, mul, sub, div, pow, fac, neg }","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":143218,"byte_end":143291,"line_start":155,"line_end":155,"column_start":1,"column_end":74}},{"value":"/ fn parse_expr(pairs: Pairs<Rule>, pratt: &PrattParser<Rule>) -> i32 {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":143292,"byte_end":143365,"line_start":156,"line_end":156,"column_start":1,"column_end":74}},{"value":"/     pratt","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":143366,"byte_end":143379,"line_start":157,"line_end":157,"column_start":1,"column_end":14}},{"value":"/         .map_primary(|primary| match primary.as_rule() {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":143380,"byte_end":143440,"line_start":158,"line_end":158,"column_start":1,"column_end":61}},{"value":"/             Rule::int  => primary.as_str().parse().unwrap(),","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":143441,"byte_end":143505,"line_start":159,"line_end":159,"column_start":1,"column_end":65}},{"value":"/             Rule::expr => parse_expr(primary.into_inner(), pratt), // from \"(\" ~ expr ~ \")\"","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":143506,"byte_end":143601,"line_start":160,"line_end":160,"column_start":1,"column_end":96}},{"value":"/             _          => unreachable!(),","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":143602,"byte_end":143647,"line_start":161,"line_end":161,"column_start":1,"column_end":46}},{"value":"/         })","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":143648,"byte_end":143662,"line_start":162,"line_end":162,"column_start":1,"column_end":15}},{"value":"/         .map_prefix(|op, rhs| match op.as_rule() {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":143663,"byte_end":143717,"line_start":163,"line_end":163,"column_start":1,"column_end":55}},{"value":"/             Rule::neg  => -rhs,","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":143718,"byte_end":143753,"line_start":164,"line_end":164,"column_start":1,"column_end":36}},{"value":"/             _          => unreachable!(),","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":143754,"byte_end":143799,"line_start":165,"line_end":165,"column_start":1,"column_end":46}},{"value":"/         })","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":143800,"byte_end":143814,"line_start":166,"line_end":166,"column_start":1,"column_end":15}},{"value":"/         .map_postfix(|lhs, op| match op.as_rule() {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":143815,"byte_end":143870,"line_start":167,"line_end":167,"column_start":1,"column_end":56}},{"value":"/             Rule::fac  => (1..lhs+1).product(),","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":143871,"byte_end":143922,"line_start":168,"line_end":168,"column_start":1,"column_end":52}},{"value":"/             _          => unreachable!(),","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":143923,"byte_end":143968,"line_start":169,"line_end":169,"column_start":1,"column_end":46}},{"value":"/         })","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":143969,"byte_end":143983,"line_start":170,"line_end":170,"column_start":1,"column_end":15}},{"value":"/         .map_infix(|lhs, op, rhs| match op.as_rule() {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":143984,"byte_end":144042,"line_start":171,"line_end":171,"column_start":1,"column_end":59}},{"value":"/             Rule::add  => lhs + rhs,","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":144043,"byte_end":144083,"line_start":172,"line_end":172,"column_start":1,"column_end":41}},{"value":"/             Rule::sub  => lhs - rhs,","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":144084,"byte_end":144124,"line_start":173,"line_end":173,"column_start":1,"column_end":41}},{"value":"/             Rule::mul  => lhs * rhs,","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":144125,"byte_end":144165,"line_start":174,"line_end":174,"column_start":1,"column_end":41}},{"value":"/             Rule::div  => lhs / rhs,","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":144166,"byte_end":144206,"line_start":175,"line_end":175,"column_start":1,"column_end":41}},{"value":"/             Rule::pow  => (1..rhs+1).map(|_| lhs).product(),","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":144207,"byte_end":144271,"line_start":176,"line_end":176,"column_start":1,"column_end":65}},{"value":"/             _          => unreachable!(),","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":144272,"byte_end":144317,"line_start":177,"line_end":177,"column_start":1,"column_end":46}},{"value":"/         })","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":144318,"byte_end":144332,"line_start":178,"line_end":178,"column_start":1,"column_end":15}},{"value":"/         .parse(pairs)","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":144333,"byte_end":144358,"line_start":179,"line_end":179,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":144359,"byte_end":144364,"line_start":180,"line_end":180,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":144365,"byte_end":144372,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":144373,"byte_end":144376,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ Note that [`map_prefix`], [`map_postfix`] and [`map_infix`] only need to be specified if the","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":144377,"byte_end":144473,"line_start":183,"line_end":183,"column_start":1,"column_end":97}},{"value":"/ grammar contains the corresponding operators.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":144474,"byte_end":144523,"line_start":184,"line_end":184,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":144524,"byte_end":144527,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ [1]: https://en.wikipedia.org/wiki/Pratt_parser","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":144528,"byte_end":144579,"line_start":186,"line_end":186,"column_start":1,"column_end":52}},{"value":"/ [`Pairs`]: ../iterators/struct.Pairs.html","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":144580,"byte_end":144625,"line_start":187,"line_end":187,"column_start":1,"column_end":46}},{"value":"/ [`PrattParser`]: struct.PrattParser.html","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":144626,"byte_end":144670,"line_start":188,"line_end":188,"column_start":1,"column_end":45}},{"value":"/ [`map_primary`]: struct.PrattParser.html#method.map_primary","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":144671,"byte_end":144734,"line_start":189,"line_end":189,"column_start":1,"column_end":64}},{"value":"/ [`map_prefix`]: struct.PrattParserMap.html#method.map_prefix","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":144735,"byte_end":144799,"line_start":190,"line_end":190,"column_start":1,"column_end":65}},{"value":"/ [`map_postfix`]: struct.PrattParserMap.html#method.map_postfix","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":144800,"byte_end":144866,"line_start":191,"line_end":191,"column_start":1,"column_end":67}},{"value":"/ [`map_infix`]: struct.PrattParserMap.html#method.map_infix","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":144867,"byte_end":144929,"line_start":192,"line_end":192,"column_start":1,"column_end":63}},{"value":"/ [`parse`]: struct.PrattParserMap.html#method.parse","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":144930,"byte_end":144984,"line_start":193,"line_end":193,"column_start":1,"column_end":55}},{"value":"/ [`op`]: struct.PrattParserMap.html#method.op","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":144985,"byte_end":145033,"line_start":194,"line_end":194,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":145248,"byte_end":145255,"line_start":204,"line_end":204,"column_start":8,"column_end":15},"name":"default","qualname":"<PrattParser<R> as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3227},"children":[],"decl_id":{"krate":1,"index":3228},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":145384,"byte_end":145387,"line_start":211,"line_end":211,"column_start":12,"column_end":15},"name":"new","qualname":"<PrattParser<R>>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Instantiate a new `PrattParser`.\n","sig":null,"attributes":[{"value":"/ Instantiate a new `PrattParser`.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":145336,"byte_end":145372,"line_start":210,"line_end":210,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":145634,"byte_end":145636,"line_start":222,"line_end":222,"column_start":12,"column_end":14},"name":"op","qualname":"<PrattParser<R>>::op","value":"fn op(Self, Op<R>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add `op` to `PrattParser`.\n","sig":null,"attributes":[{"value":"/ Add `op` to `PrattParser`.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":145592,"byte_end":145622,"line_start":221,"line_end":221,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":146206,"byte_end":146217,"line_start":238,"line_end":238,"column_start":12,"column_end":23},"name":"map_primary","qualname":"<PrattParser<R>>::map_primary","value":"fn map_primary<'pratt, 'i, X, T>(&'pratt Self, X) -> PrattParserMap where\nX: FnMut(Pair) -> T, R: 'pratt","parent":null,"children":[],"decl_id":null,"docs":" Maps primary expressions with a closure `primary`.\n","sig":null,"attributes":[{"value":"/ Maps primary expressions with a closure `primary`.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":146140,"byte_end":146194,"line_start":237,"line_end":237,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":725},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":147034,"byte_end":147048,"line_start":266,"line_end":266,"column_start":12,"column_end":26},"name":"PrattParserMap","qualname":"::pratt_parser::PrattParserMap","value":"PrattParserMap {  }","parent":null,"children":[{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736}],"decl_id":null,"docs":" Product of calling [`map_primary`] on [`PrattParser`], defines how expressions should\n be mapped.","sig":null,"attributes":[{"value":"/ Product of calling [`map_primary`] on [`PrattParser`], defines how expressions should","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":146805,"byte_end":146894,"line_start":261,"line_end":261,"column_start":1,"column_end":90}},{"value":"/ be mapped.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":146895,"byte_end":146909,"line_start":262,"line_end":262,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":146910,"byte_end":146913,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ [`map_primary`]: struct.PrattParser.html#method.map_primary","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":146914,"byte_end":146977,"line_start":264,"line_end":264,"column_start":1,"column_end":64}},{"value":"/ [`PrattParser`]: struct.PrattParser.html","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":146978,"byte_end":147022,"line_start":265,"line_end":265,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":743},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":147531,"byte_end":147541,"line_start":285,"line_end":285,"column_start":12,"column_end":22},"name":"map_prefix","qualname":"<PrattParserMap>::map_prefix","value":"fn map_prefix<X>(Self, X) -> Self where X: FnMut(Pair, T) -> T + 'i","parent":null,"children":[],"decl_id":null,"docs":" Maps prefix operators with closure `prefix`.\n","sig":null,"attributes":[{"value":"/ Maps prefix operators with closure `prefix`.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":147471,"byte_end":147519,"line_start":284,"line_end":284,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":147766,"byte_end":147777,"line_start":294,"line_end":294,"column_start":12,"column_end":23},"name":"map_postfix","qualname":"<PrattParserMap>::map_postfix","value":"fn map_postfix<X>(Self, X) -> Self where X: FnMut(T, Pair) -> T + 'i","parent":null,"children":[],"decl_id":null,"docs":" Maps postfix operators with closure `postfix`.\n","sig":null,"attributes":[{"value":"/ Maps postfix operators with closure `postfix`.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":147704,"byte_end":147754,"line_start":293,"line_end":293,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":148003,"byte_end":148012,"line_start":303,"line_end":303,"column_start":12,"column_end":21},"name":"map_infix","qualname":"<PrattParserMap>::map_infix","value":"fn map_infix<X>(Self, X) -> Self where X: FnMut(T, Pair, T) -> T + 'i","parent":null,"children":[],"decl_id":null,"docs":" Maps infix operators with a closure `infix`.\n","sig":null,"attributes":[{"value":"/ Maps infix operators with a closure `infix`.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":147943,"byte_end":147991,"line_start":302,"line_end":302,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":148182,"byte_end":148187,"line_start":311,"line_end":311,"column_start":12,"column_end":17},"name":"parse","qualname":"<PrattParserMap>::parse","value":"fn parse<P, '_>(&'_ mut Self, P) -> T where P: Iterator<Item = Pair>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":759},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prec_climber","qualname":"::prec_climber","value":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","parent":null,"children":[{"krate":0,"index":760},{"krate":0,"index":763},{"krate":0,"index":766},{"krate":0,"index":769},{"krate":0,"index":772},{"krate":0,"index":775},{"krate":0,"index":778},{"krate":0,"index":1172},{"krate":0,"index":1177},{"krate":0,"index":1179},{"krate":0,"index":1180},{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1188},{"krate":0,"index":1193},{"krate":0,"index":781},{"krate":0,"index":784},{"krate":0,"index":1196},{"krate":0,"index":1199},{"krate":0,"index":790}],"decl_id":null,"docs":" Constructs useful in infix operator parsing with the precedence climbing method.\n","sig":null,"attributes":[{"value":"deprecated(since = \"2.4.0\", note =\n\"Use `pest::pratt_parser` instead (it is an equivalent which also supports unary prefix/suffix operators).\nWhile prec_climber is going to be kept in 2.x minor and patch releases, it may be removed in a future major release.\")","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":3038,"byte_end":3311,"line_start":94,"line_end":98,"column_start":1,"column_end":3}},{"value":"/ Constructs useful in infix operator parsing with the precedence climbing method.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":151466,"byte_end":151550,"line_start":10,"line_end":10,"column_start":1,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1173},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":153807,"byte_end":153811,"line_start":109,"line_end":109,"column_start":5,"column_end":9},"name":"Left","qualname":"::prec_climber::Assoc::Left","value":"Assoc::Left","parent":{"krate":0,"index":1172},"children":[],"decl_id":null,"docs":" Left `Operator` associativity\n","sig":null,"attributes":[{"value":"/ Left `Operator` associativity","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":153769,"byte_end":153802,"line_start":108,"line_end":108,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1175},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":153856,"byte_end":153861,"line_start":111,"line_end":111,"column_start":5,"column_end":10},"name":"Right","qualname":"::prec_climber::Assoc::Right","value":"Assoc::Right","parent":{"krate":0,"index":1172},"children":[],"decl_id":null,"docs":" Right `Operator` associativity\n","sig":null,"attributes":[{"value":"/ Right `Operator` associativity","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":153817,"byte_end":153851,"line_start":110,"line_end":110,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":1172},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":153757,"byte_end":153762,"line_start":107,"line_end":107,"column_start":10,"column_end":15},"name":"Assoc","qualname":"::prec_climber::Assoc","value":"enum Assoc { Left, Right, }","parent":null,"children":[{"krate":0,"index":1173},{"krate":0,"index":1175}],"decl_id":null,"docs":" Associativity of an [`Operator`].","sig":null,"attributes":[{"value":"/ Associativity of an [`Operator`].","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":153622,"byte_end":153659,"line_start":103,"line_end":103,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":153660,"byte_end":153663,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ [`Operator`]: struct.Operator.html","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":153664,"byte_end":153702,"line_start":105,"line_end":105,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1188},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":153987,"byte_end":153995,"line_start":118,"line_end":118,"column_start":12,"column_end":20},"name":"Operator","qualname":"::prec_climber::Operator","value":"Operator {  }","parent":null,"children":[{"krate":0,"index":1190},{"krate":0,"index":1191},{"krate":0,"index":1192}],"decl_id":null,"docs":" Infix operator used in [`PrecClimber`].","sig":null,"attributes":[{"value":"/ Infix operator used in [`PrecClimber`].","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":153866,"byte_end":153909,"line_start":114,"line_end":114,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":153910,"byte_end":153913,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ [`PrecClimber`]: struct.PrecClimber.html","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":153914,"byte_end":153958,"line_start":116,"line_end":116,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":783},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":154610,"byte_end":154613,"line_start":140,"line_end":140,"column_start":12,"column_end":15},"name":"new","qualname":"<Operator<R>>::new","value":"fn new(R, Assoc) -> Operator<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Operator` from a `Rule` and `Assoc`.","sig":null,"attributes":[{"value":"/ Creates a new `Operator` from a `Rule` and `Assoc`.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":154117,"byte_end":154172,"line_start":125,"line_end":125,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":154177,"byte_end":154180,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":154185,"byte_end":154199,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":154204,"byte_end":154207,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":154212,"byte_end":154219,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ # use pest::prec_climber::{Assoc, Operator};","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":154224,"byte_end":154272,"line_start":130,"line_end":130,"column_start":5,"column_end":53}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":154277,"byte_end":154313,"line_start":131,"line_end":131,"column_start":5,"column_end":41}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":154318,"byte_end":154343,"line_start":132,"line_end":132,"column_start":5,"column_end":30}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":154348,"byte_end":154421,"line_start":133,"line_end":133,"column_start":5,"column_end":78}},{"value":"/ # enum Rule {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":154426,"byte_end":154443,"line_start":134,"line_end":134,"column_start":5,"column_end":22}},{"value":"/ #     plus,","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":154448,"byte_end":154463,"line_start":135,"line_end":135,"column_start":5,"column_end":20}},{"value":"/ #     minus","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":154468,"byte_end":154483,"line_start":136,"line_end":136,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":154488,"byte_end":154495,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ Operator::new(Rule::plus, Assoc::Left) | Operator::new(Rule::minus, Assoc::Right);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":154500,"byte_end":154586,"line_start":138,"line_end":138,"column_start":5,"column_end":91}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":154591,"byte_end":154598,"line_start":139,"line_end":139,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":154827,"byte_end":154832,"line_start":152,"line_end":152,"column_start":8,"column_end":13},"name":"bitor","qualname":"<Operator<R> as core::ops::BitOr>::bitor","value":"fn bitor(Self, Self) -> Self","parent":{"krate":1,"index":3381},"children":[],"decl_id":{"krate":1,"index":3384},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1196},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":155631,"byte_end":155642,"line_start":173,"line_end":173,"column_start":12,"column_end":23},"name":"PrecClimber","qualname":"::prec_climber::PrecClimber","value":"PrecClimber {  }","parent":null,"children":[{"krate":0,"index":1198}],"decl_id":null,"docs":" List of operators and precedences, which can perform [precedence climbing][1] on infix\n expressions contained in a [`Pairs`]. The token pairs contained in the `Pairs` should start\n with a *primary* pair and then alternate between an *operator* and a *primary*.","sig":null,"attributes":[{"value":"/ List of operators and precedences, which can perform [precedence climbing][1] on infix","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":155189,"byte_end":155279,"line_start":166,"line_end":166,"column_start":1,"column_end":91}},{"value":"/ expressions contained in a [`Pairs`]. The token pairs contained in the `Pairs` should start","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":155280,"byte_end":155375,"line_start":167,"line_end":167,"column_start":1,"column_end":96}},{"value":"/ with a *primary* pair and then alternate between an *operator* and a *primary*.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":155376,"byte_end":155459,"line_start":168,"line_end":168,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":155460,"byte_end":155463,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ [1]: https://en.wikipedia.org/wiki/Operator-precedence_parser#Precedence_climbing_method","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":155464,"byte_end":155556,"line_start":170,"line_end":170,"column_start":1,"column_end":93}},{"value":"/ [`Pairs`]: ../iterators/struct.Pairs.html","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":155557,"byte_end":155602,"line_start":171,"line_end":171,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":158127,"byte_end":158130,"line_start":245,"line_end":245,"column_start":12,"column_end":15},"name":"new","qualname":"<PrecClimber<R>>::new","value":"fn new(Vec<Operator<R>>) -> PrecClimber<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PrecClimber` from the `Operator`s contained in `ops`. Every entry in the\n `Vec` has precedence *index + 1*. In order to have operators with same precedence, they need\n to be chained with `|` between them.","sig":null,"attributes":[{"value":"/ Creates a new `PrecClimber` from the `Operator`s contained in `ops`. Every entry in the","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":157180,"byte_end":157271,"line_start":221,"line_end":221,"column_start":5,"column_end":96}},{"value":"/ `Vec` has precedence *index + 1*. In order to have operators with same precedence, they need","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":157276,"byte_end":157372,"line_start":222,"line_end":222,"column_start":5,"column_end":101}},{"value":"/ to be chained with `|` between them.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":157377,"byte_end":157417,"line_start":223,"line_end":223,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":157422,"byte_end":157425,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":157430,"byte_end":157444,"line_start":225,"line_end":225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":157449,"byte_end":157452,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":157457,"byte_end":157464,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ # use pest::prec_climber::{Assoc, Operator, PrecClimber};","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":157469,"byte_end":157530,"line_start":228,"line_end":228,"column_start":5,"column_end":66}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":157535,"byte_end":157571,"line_start":229,"line_end":229,"column_start":5,"column_end":41}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":157576,"byte_end":157601,"line_start":230,"line_end":230,"column_start":5,"column_end":30}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":157606,"byte_end":157679,"line_start":231,"line_end":231,"column_start":5,"column_end":78}},{"value":"/ # enum Rule {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":157684,"byte_end":157701,"line_start":232,"line_end":232,"column_start":5,"column_end":22}},{"value":"/ #     plus,","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":157706,"byte_end":157721,"line_start":233,"line_end":233,"column_start":5,"column_end":20}},{"value":"/ #     minus,","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":157726,"byte_end":157742,"line_start":234,"line_end":234,"column_start":5,"column_end":21}},{"value":"/ #     times,","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":157747,"byte_end":157763,"line_start":235,"line_end":235,"column_start":5,"column_end":21}},{"value":"/ #     divide,","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":157768,"byte_end":157785,"line_start":236,"line_end":236,"column_start":5,"column_end":22}},{"value":"/ #     power","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":157790,"byte_end":157805,"line_start":237,"line_end":237,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":157810,"byte_end":157817,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ PrecClimber::new(vec![","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":157822,"byte_end":157848,"line_start":239,"line_end":239,"column_start":5,"column_end":31}},{"value":"/     Operator::new(Rule::plus, Assoc::Left) | Operator::new(Rule::minus, Assoc::Left),","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":157853,"byte_end":157942,"line_start":240,"line_end":240,"column_start":5,"column_end":94}},{"value":"/     Operator::new(Rule::times, Assoc::Left) | Operator::new(Rule::divide, Assoc::Left),","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":157947,"byte_end":158038,"line_start":241,"line_end":241,"column_start":5,"column_end":96}},{"value":"/     Operator::new(Rule::power, Assoc::Right)","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":158043,"byte_end":158091,"line_start":242,"line_end":242,"column_start":5,"column_end":53}},{"value":"/ ]);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":158096,"byte_end":158103,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":158108,"byte_end":158115,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":159755,"byte_end":159760,"line_start":299,"line_end":299,"column_start":12,"column_end":17},"name":"climb","qualname":"<PrecClimber<R>>::climb","value":"fn climb<'i, P, F, G, T, '_>(&'_ Self, P, F, G) -> T where P: Iterator<Item =\nPair>, F: FnMut(Pair) -> T, G: FnMut(T, Pair, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Performs the precedence climbing algorithm on the `pairs` in a similar manner to map-reduce.\n *Primary* pairs are mapped with `primary` and then reduced to one single result with\n `infix`.","sig":null,"attributes":[{"value":"/ Performs the precedence climbing algorithm on the `pairs` in a similar manner to map-reduce.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":158788,"byte_end":158884,"line_start":271,"line_end":271,"column_start":5,"column_end":101}},{"value":"/ *Primary* pairs are mapped with `primary` and then reduced to one single result with","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":158889,"byte_end":158977,"line_start":272,"line_end":272,"column_start":5,"column_end":93}},{"value":"/ `infix`.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":158982,"byte_end":158994,"line_start":273,"line_end":273,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":158999,"byte_end":159002,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":159007,"byte_end":159019,"line_start":275,"line_end":275,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":159024,"byte_end":159027,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ Panics will occur when `pairs` is empty or when the alternating *primary*, *operator*,","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":159032,"byte_end":159122,"line_start":277,"line_end":277,"column_start":5,"column_end":95}},{"value":"/ *primary* order is not respected.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":159127,"byte_end":159164,"line_start":278,"line_end":278,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":159169,"byte_end":159172,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":159177,"byte_end":159191,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":159196,"byte_end":159199,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":159204,"byte_end":159217,"line_start":282,"line_end":282,"column_start":5,"column_end":18}},{"value":"/ let primary = |pair| {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":159222,"byte_end":159248,"line_start":283,"line_end":283,"column_start":5,"column_end":31}},{"value":"/     consume(pair, climber)","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":159253,"byte_end":159283,"line_start":284,"line_end":284,"column_start":5,"column_end":35}},{"value":"/ };","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":159288,"byte_end":159294,"line_start":285,"line_end":285,"column_start":5,"column_end":11}},{"value":"/ let infix = |lhs: i32, op: Pair<Rule>, rhs: i32| {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":159299,"byte_end":159353,"line_start":286,"line_end":286,"column_start":5,"column_end":59}},{"value":"/     match op.rule() {","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":159358,"byte_end":159383,"line_start":287,"line_end":287,"column_start":5,"column_end":30}},{"value":"/         Rule::plus => lhs + rhs,","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":159388,"byte_end":159424,"line_start":288,"line_end":288,"column_start":5,"column_end":41}},{"value":"/         Rule::minus => lhs - rhs,","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":159429,"byte_end":159466,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/         Rule::times => lhs * rhs,","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":159471,"byte_end":159508,"line_start":290,"line_end":290,"column_start":5,"column_end":42}},{"value":"/         Rule::divide => lhs / rhs,","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":159513,"byte_end":159551,"line_start":291,"line_end":291,"column_start":5,"column_end":43}},{"value":"/         Rule::power => lhs.pow(rhs as u32),","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":159556,"byte_end":159603,"line_start":292,"line_end":292,"column_start":5,"column_end":52}},{"value":"/         _ => unreachable!()","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":159608,"byte_end":159639,"line_start":293,"line_end":293,"column_start":5,"column_end":36}},{"value":"/     }","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":159644,"byte_end":159653,"line_start":294,"line_end":294,"column_start":5,"column_end":14}},{"value":"/ };","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":159658,"byte_end":159664,"line_start":295,"line_end":295,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":159669,"byte_end":159672,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ let result = climber.climb(pairs, primary, infix);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":159677,"byte_end":159731,"line_start":297,"line_end":297,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":159736,"byte_end":159743,"line_start":298,"line_end":298,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1202},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":162561,"byte_end":162565,"line_start":23,"line_end":23,"column_start":12,"column_end":16},"name":"Span","qualname":"::span::Span","value":"Span {  }","parent":null,"children":[{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":1206}],"decl_id":null,"docs":" A span over a `&str`. It is created from either [two `Position`s] or from a [`Pair`].","sig":null,"attributes":[{"value":"/ A span over a `&str`. It is created from either [two `Position`s] or from a [`Pair`].","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":162321,"byte_end":162410,"line_start":18,"line_end":18,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":162411,"byte_end":162414,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [two `Position`s]: struct.Position.html#method.span","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":162415,"byte_end":162470,"line_start":20,"line_end":20,"column_start":1,"column_end":56}},{"value":"/ [`Pair`]: ../iterators/struct.Pair.html#method.span","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":162471,"byte_end":162526,"line_start":21,"line_end":21,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":163593,"byte_end":163596,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"new","qualname":"<Span>::new","value":"fn new<'_>(&'_ str, usize, usize) -> Option<Span>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to create a new span. Will return `None` if `input[start..end]` is an invalid index\n into `input`.","sig":null,"attributes":[{"value":"/ Attempts to create a new span. Will return `None` if `input[start..end]` is an invalid index","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":163235,"byte_end":163331,"line_start":46,"line_end":46,"column_start":5,"column_end":101}},{"value":"/ into `input`.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":163336,"byte_end":163353,"line_start":47,"line_end":47,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":163358,"byte_end":163361,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":163366,"byte_end":163380,"line_start":49,"line_end":49,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":163385,"byte_end":163388,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":163393,"byte_end":163400,"line_start":51,"line_end":51,"column_start":5,"column_end":12}},{"value":"/ # use pest::Span;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":163405,"byte_end":163426,"line_start":52,"line_end":52,"column_start":5,"column_end":26}},{"value":"/ let input = \"Hello!\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":163431,"byte_end":163456,"line_start":53,"line_end":53,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(None, Span::new(input, 100, 0));","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":163461,"byte_end":163508,"line_start":54,"line_end":54,"column_start":5,"column_end":52}},{"value":"/ assert!(Span::new(input, 0, input.len()).is_some());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":163513,"byte_end":163569,"line_start":55,"line_end":55,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":163574,"byte_end":163581,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":164166,"byte_end":164169,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"get","qualname":"<Span>::get","value":"fn get<'_, impl RangeBounds<usize>>(&'_ Self, impl RangeBounds<usize>)\n-> Option<Span> where impl RangeBounds<usize>: RangeBounds<usize>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to create a new span based on a sub-range.","sig":null,"attributes":[{"value":"/ Attempts to create a new span based on a sub-range.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":163799,"byte_end":163854,"line_start":65,"line_end":65,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":163859,"byte_end":163862,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":163867,"byte_end":163874,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/ use pest::Span;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":163879,"byte_end":163898,"line_start":68,"line_end":68,"column_start":5,"column_end":24}},{"value":"/ let input = \"Hello World!\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":163903,"byte_end":163934,"line_start":69,"line_end":69,"column_start":5,"column_end":36}},{"value":"/ let world = Span::new(input, 6, input.len()).unwrap();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":163939,"byte_end":163997,"line_start":70,"line_end":70,"column_start":5,"column_end":63}},{"value":"/ let orl = world.get(1..=3);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":164002,"byte_end":164033,"line_start":71,"line_end":71,"column_start":5,"column_end":36}},{"value":"/ assert!(orl.is_some());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":164038,"byte_end":164065,"line_start":72,"line_end":72,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(orl.unwrap().as_str(), \"orl\");","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":164070,"byte_end":164115,"line_start":73,"line_end":73,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":164120,"byte_end":164127,"line_start":74,"line_end":74,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":164132,"byte_end":164135,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":164140,"byte_end":164154,"line_start":76,"line_end":76,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":165177,"byte_end":165182,"line_start":110,"line_end":110,"column_start":12,"column_end":17},"name":"start","qualname":"<Span>::start","value":"fn start<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Span`'s start byte position as a `usize`.","sig":null,"attributes":[{"value":"/ Returns the `Span`'s start byte position as a `usize`.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":164814,"byte_end":164872,"line_start":96,"line_end":96,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":164877,"byte_end":164880,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":164885,"byte_end":164899,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":164904,"byte_end":164907,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":164912,"byte_end":164919,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ # use pest::Position;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":164924,"byte_end":164949,"line_start":101,"line_end":101,"column_start":5,"column_end":30}},{"value":"/ let input = \"ab\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":164954,"byte_end":164975,"line_start":102,"line_end":102,"column_start":5,"column_end":26}},{"value":"/ let start = Position::from_start(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":164980,"byte_end":165024,"line_start":103,"line_end":103,"column_start":5,"column_end":49}},{"value":"/ let end = start.clone();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":165029,"byte_end":165057,"line_start":104,"line_end":104,"column_start":5,"column_end":33}},{"value":"/ let span = start.span(&end);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":165062,"byte_end":165094,"line_start":105,"line_end":105,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":165099,"byte_end":165102,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(span.start(), 0);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":165107,"byte_end":165139,"line_start":107,"line_end":107,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":165144,"byte_end":165151,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":165156,"byte_end":165165,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":165590,"byte_end":165593,"line_start":128,"line_end":128,"column_start":12,"column_end":15},"name":"end","qualname":"<Span>::end","value":"fn end<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Span`'s end byte position as a `usize`.","sig":null,"attributes":[{"value":"/ Returns the `Span`'s end byte position as a `usize`.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":165231,"byte_end":165287,"line_start":114,"line_end":114,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":165292,"byte_end":165295,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":165300,"byte_end":165314,"line_start":116,"line_end":116,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":165319,"byte_end":165322,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":165327,"byte_end":165334,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/ # use pest::Position;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":165339,"byte_end":165364,"line_start":119,"line_end":119,"column_start":5,"column_end":30}},{"value":"/ let input = \"ab\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":165369,"byte_end":165390,"line_start":120,"line_end":120,"column_start":5,"column_end":26}},{"value":"/ let start = Position::from_start(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":165395,"byte_end":165439,"line_start":121,"line_end":121,"column_start":5,"column_end":49}},{"value":"/ let end = start.clone();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":165444,"byte_end":165472,"line_start":122,"line_end":122,"column_start":5,"column_end":33}},{"value":"/ let span = start.span(&end);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":165477,"byte_end":165509,"line_start":123,"line_end":123,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":165514,"byte_end":165517,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(span.end(), 0);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":165522,"byte_end":165552,"line_start":125,"line_end":125,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":165557,"byte_end":165564,"line_start":126,"line_end":126,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":165569,"byte_end":165578,"line_start":127,"line_end":127,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":166003,"byte_end":166012,"line_start":146,"line_end":146,"column_start":12,"column_end":21},"name":"start_pos","qualname":"<Span>::start_pos","value":"fn start_pos<'_>(&'_ Self) -> position::Position","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Span`'s start `Position`.","sig":null,"attributes":[{"value":"/ Returns the `Span`'s start `Position`.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":165640,"byte_end":165682,"line_start":132,"line_end":132,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":165687,"byte_end":165690,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":165695,"byte_end":165709,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":165714,"byte_end":165717,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":165722,"byte_end":165729,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # use pest::Position;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":165734,"byte_end":165759,"line_start":137,"line_end":137,"column_start":5,"column_end":30}},{"value":"/ let input = \"ab\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":165764,"byte_end":165785,"line_start":138,"line_end":138,"column_start":5,"column_end":26}},{"value":"/ let start = Position::from_start(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":165790,"byte_end":165834,"line_start":139,"line_end":139,"column_start":5,"column_end":49}},{"value":"/ let end = start.clone();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":165839,"byte_end":165867,"line_start":140,"line_end":140,"column_start":5,"column_end":33}},{"value":"/ let span = start.clone().span(&end);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":165872,"byte_end":165912,"line_start":141,"line_end":141,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":165917,"byte_end":165920,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(span.start_pos(), start);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":165925,"byte_end":165965,"line_start":143,"line_end":143,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":165970,"byte_end":165977,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":165982,"byte_end":165991,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":166544,"byte_end":166551,"line_start":165,"line_end":165,"column_start":12,"column_end":19},"name":"end_pos","qualname":"<Span>::end_pos","value":"fn end_pos<'_>(&'_ Self) -> position::Position","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Span`'s end `Position`.","sig":null,"attributes":[{"value":"/ Returns the `Span`'s end `Position`.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":166195,"byte_end":166235,"line_start":151,"line_end":151,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":166240,"byte_end":166243,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":166248,"byte_end":166262,"line_start":153,"line_end":153,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":166267,"byte_end":166270,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":166275,"byte_end":166282,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"/ # use pest::Position;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":166287,"byte_end":166312,"line_start":156,"line_end":156,"column_start":5,"column_end":30}},{"value":"/ let input = \"ab\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":166317,"byte_end":166338,"line_start":157,"line_end":157,"column_start":5,"column_end":26}},{"value":"/ let start = Position::from_start(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":166343,"byte_end":166387,"line_start":158,"line_end":158,"column_start":5,"column_end":49}},{"value":"/ let end = start.clone();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":166392,"byte_end":166420,"line_start":159,"line_end":159,"column_start":5,"column_end":33}},{"value":"/ let span = start.span(&end);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":166425,"byte_end":166457,"line_start":160,"line_end":160,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":166462,"byte_end":166465,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(span.end_pos(), end);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":166470,"byte_end":166506,"line_start":162,"line_end":162,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":166511,"byte_end":166518,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":166523,"byte_end":166532,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":167103,"byte_end":167108,"line_start":184,"line_end":184,"column_start":12,"column_end":17},"name":"split","qualname":"<Span>::split","value":"fn split(Self) -> (position::Position, position::Position)","parent":null,"children":[],"decl_id":null,"docs":" Splits the `Span` into a pair of `Position`s.","sig":null,"attributes":[{"value":"/ Splits the `Span` into a pair of `Position`s.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":166730,"byte_end":166779,"line_start":170,"line_end":170,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":166784,"byte_end":166787,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":166792,"byte_end":166806,"line_start":172,"line_end":172,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":166811,"byte_end":166814,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":166819,"byte_end":166826,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"/ # use pest::Position;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":166831,"byte_end":166856,"line_start":175,"line_end":175,"column_start":5,"column_end":30}},{"value":"/ let input = \"ab\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":166861,"byte_end":166882,"line_start":176,"line_end":176,"column_start":5,"column_end":26}},{"value":"/ let start = Position::from_start(input);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":166887,"byte_end":166931,"line_start":177,"line_end":177,"column_start":5,"column_end":49}},{"value":"/ let end = start.clone();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":166936,"byte_end":166964,"line_start":178,"line_end":178,"column_start":5,"column_end":33}},{"value":"/ let span = start.clone().span(&end);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":166969,"byte_end":167009,"line_start":179,"line_end":179,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":167014,"byte_end":167017,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(span.split(), (start, end));","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":167022,"byte_end":167065,"line_start":181,"line_end":181,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":167070,"byte_end":167077,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":167082,"byte_end":167091,"line_start":183,"line_end":183,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":168091,"byte_end":168097,"line_start":210,"line_end":210,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Span>::as_str","value":"fn as_str<'_>(&'_ Self) -> &'i str","parent":null,"children":[],"decl_id":null,"docs":" Captures a slice from the `&str` defined by the `Span`.","sig":null,"attributes":[{"value":"/ Captures a slice from the `&str` defined by the `Span`.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":167448,"byte_end":167507,"line_start":192,"line_end":192,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":167512,"byte_end":167515,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":167520,"byte_end":167534,"line_start":194,"line_end":194,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":167539,"byte_end":167542,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":167547,"byte_end":167554,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":167559,"byte_end":167574,"line_start":197,"line_end":197,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":167579,"byte_end":167615,"line_start":198,"line_end":198,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":167620,"byte_end":167693,"line_start":199,"line_end":199,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":167698,"byte_end":167714,"line_start":200,"line_end":200,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":167719,"byte_end":167722,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ let input = \"abc\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":167727,"byte_end":167749,"line_start":202,"line_end":202,"column_start":5,"column_end":27}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input).skip(1).unwrap();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":167754,"byte_end":167851,"line_start":203,"line_end":203,"column_start":5,"column_end":102}},{"value":"/ let start_pos = state.position().clone();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":167856,"byte_end":167901,"line_start":204,"line_end":204,"column_start":5,"column_end":50}},{"value":"/ state = state.match_string(\"b\").unwrap();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":167906,"byte_end":167951,"line_start":205,"line_end":205,"column_start":5,"column_end":50}},{"value":"/ let span = start_pos.span(&state.position().clone());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":167956,"byte_end":168013,"line_start":206,"line_end":206,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(span.as_str(), \"b\");","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":168018,"byte_end":168053,"line_start":207,"line_end":207,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":168058,"byte_end":168065,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":168070,"byte_end":168079,"line_start":209,"line_end":209,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":168958,"byte_end":168963,"line_start":233,"line_end":233,"column_start":12,"column_end":17},"name":"lines","qualname":"<Span>::lines","value":"fn lines<'_>(&'_ Self) -> Lines","parent":null,"children":[],"decl_id":null,"docs":" Iterates over all lines (partially) covered by this span. Yielding a `&str` for each line.","sig":null,"attributes":[{"value":"/ Iterates over all lines (partially) covered by this span. Yielding a `&str` for each line.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":168241,"byte_end":168335,"line_start":215,"line_end":215,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":168340,"byte_end":168343,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":168348,"byte_end":168362,"line_start":217,"line_end":217,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":168367,"byte_end":168370,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":168375,"byte_end":168382,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":168387,"byte_end":168402,"line_start":220,"line_end":220,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":168407,"byte_end":168443,"line_start":221,"line_end":221,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":168448,"byte_end":168521,"line_start":222,"line_end":222,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":168526,"byte_end":168542,"line_start":223,"line_end":223,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":168547,"byte_end":168550,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ let input = \"a\\nb\\nc\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":168555,"byte_end":168581,"line_start":225,"line_end":225,"column_start":5,"column_end":31}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input).skip(2).unwrap();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":168586,"byte_end":168683,"line_start":226,"line_end":226,"column_start":5,"column_end":102}},{"value":"/ let start_pos = state.position().clone();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":168688,"byte_end":168733,"line_start":227,"line_end":227,"column_start":5,"column_end":50}},{"value":"/ state = state.match_string(\"b\\nc\").unwrap();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":168738,"byte_end":168786,"line_start":228,"line_end":228,"column_start":5,"column_end":53}},{"value":"/ let span = start_pos.span(&state.position().clone());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":168791,"byte_end":168848,"line_start":229,"line_end":229,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(span.lines().collect::<Vec<_>>(), vec![\"b\\n\", \"c\"]);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":168853,"byte_end":168920,"line_start":230,"line_end":230,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":168925,"byte_end":168932,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":168937,"byte_end":168946,"line_start":232,"line_end":232,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":169845,"byte_end":169855,"line_start":257,"line_end":257,"column_start":12,"column_end":22},"name":"lines_span","qualname":"<Span>::lines_span","value":"fn lines_span<'_>(&'_ Self) -> LinesSpan","parent":null,"children":[],"decl_id":null,"docs":" Iterates over all lines (partially) covered by this span. Yielding a `Span` for each line.","sig":null,"attributes":[{"value":"/ Iterates over all lines (partially) covered by this span. Yielding a `Span` for each line.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":169057,"byte_end":169151,"line_start":239,"line_end":239,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":169156,"byte_end":169159,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":169164,"byte_end":169178,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":169183,"byte_end":169186,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":169191,"byte_end":169198,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":169203,"byte_end":169218,"line_start":244,"line_end":244,"column_start":5,"column_end":20}},{"value":"/ # use pest::Span;","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":169223,"byte_end":169244,"line_start":245,"line_end":245,"column_start":5,"column_end":26}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":169249,"byte_end":169285,"line_start":246,"line_end":246,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":169290,"byte_end":169363,"line_start":247,"line_end":247,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":169368,"byte_end":169384,"line_start":248,"line_end":248,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":169389,"byte_end":169392,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let input = \"a\\nb\\nc\";","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":169397,"byte_end":169423,"line_start":250,"line_end":250,"column_start":5,"column_end":31}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input).skip(2).unwrap();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":169428,"byte_end":169525,"line_start":251,"line_end":251,"column_start":5,"column_end":102}},{"value":"/ let start_pos = state.position().clone();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":169530,"byte_end":169575,"line_start":252,"line_end":252,"column_start":5,"column_end":50}},{"value":"/ state = state.match_string(\"b\\nc\").unwrap();","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":169580,"byte_end":169628,"line_start":253,"line_end":253,"column_start":5,"column_end":53}},{"value":"/ let span = start_pos.span(&state.position().clone());","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":169633,"byte_end":169690,"line_start":254,"line_end":254,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(span.lines_span().collect::<Vec<_>>(), vec![Span::new(input, 2, 4).unwrap(), Span::new(input, 4, 5).unwrap()]);","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":169695,"byte_end":169821,"line_start":255,"line_end":255,"column_start":5,"column_end":131}},{"value":"/ ```","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":169826,"byte_end":169833,"line_start":256,"line_end":256,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":170012,"byte_end":170015,"line_start":266,"line_end":266,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Span as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10266},"children":[],"decl_id":{"krate":1,"index":10267},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":857},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":170287,"byte_end":170289,"line_start":276,"line_end":276,"column_start":8,"column_end":10},"name":"eq","qualname":"<Span as core::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ Span) -> bool","parent":{"krate":1,"index":2901},"children":[],"decl_id":{"krate":1,"index":2903},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":170494,"byte_end":170498,"line_start":284,"line_end":284,"column_start":8,"column_end":12},"name":"hash","qualname":"<Span as core::hash::Hash>::hash","value":"fn hash<H, '_, '_>(&'_ Self, &'_ mut H) where H: Hasher","parent":{"krate":1,"index":10504},"children":[],"decl_id":{"krate":1,"index":10505},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":864},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":170901,"byte_end":170910,"line_start":296,"line_end":296,"column_start":12,"column_end":21},"name":"LinesSpan","qualname":"::span::LinesSpan","value":"LinesSpan {  }","parent":null,"children":[{"krate":0,"index":866},{"krate":0,"index":867}],"decl_id":null,"docs":" Line iterator for Spans, created by [`Span::lines_span()`].","sig":null,"attributes":[{"value":"/ Line iterator for Spans, created by [`Span::lines_span()`].","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":170653,"byte_end":170716,"line_start":291,"line_end":291,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":170717,"byte_end":170720,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ Iterates all lines that are at least _partially_ covered by the span. Yielding a `Span` for each.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":170721,"byte_end":170822,"line_start":293,"line_end":293,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":170823,"byte_end":170826,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ [`Span::lines_span()`]: struct.Span.html#method.lines_span","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":170827,"byte_end":170889,"line_start":295,"line_end":295,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":871},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":171031,"byte_end":171035,"line_start":303,"line_end":303,"column_start":8,"column_end":12},"name":"next","qualname":"<LinesSpan as core::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":1,"index":8574},"children":[],"decl_id":{"krate":1,"index":8576},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":872},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":171665,"byte_end":171670,"line_start":324,"line_end":324,"column_start":12,"column_end":17},"name":"Lines","qualname":"::span::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":874}],"decl_id":null,"docs":" Line iterator for Spans, created by [`Span::lines()`].","sig":null,"attributes":[{"value":"/ Line iterator for Spans, created by [`Span::lines()`].","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":171432,"byte_end":171490,"line_start":319,"line_end":319,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":171491,"byte_end":171494,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ Iterates all lines that are at least _partially_ covered by the span. Yielding a `&str` for each.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":171495,"byte_end":171596,"line_start":321,"line_end":321,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":171597,"byte_end":171600,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ [`Span::lines()`]: struct.Span.html#method.lines","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":171601,"byte_end":171653,"line_start":323,"line_end":323,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":171772,"byte_end":171776,"line_start":330,"line_end":330,"column_start":8,"column_end":12},"name":"next","qualname":"<Lines as core::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":1,"index":8574},"children":[],"decl_id":{"krate":1,"index":8576},"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1234},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/token.rs","byte_start":181531,"byte_end":181536,"line_start":16,"line_end":16,"column_start":5,"column_end":10},"name":"Start","qualname":"::token::Token::Start","value":"Token::Start { rule, pos }","parent":{"krate":0,"index":1231},"children":[],"decl_id":null,"docs":" The starting `Position` of a matched `Rule`\n","sig":null,"attributes":[{"value":"/ The starting `Position` of a matched `Rule`","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/token.rs","byte_start":181479,"byte_end":181526,"line_start":15,"line_end":15,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1235},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/token.rs","byte_start":181539,"byte_end":181543,"line_start":16,"line_end":16,"column_start":13,"column_end":17},"name":"rule","qualname":"::token::Token::Start::rule","value":"R","parent":{"krate":0,"index":1234},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1236},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/token.rs","byte_start":181548,"byte_end":181551,"line_start":16,"line_end":16,"column_start":22,"column_end":25},"name":"pos","qualname":"::token::Token::Start::pos","value":"position::Position<'i>","parent":{"krate":0,"index":1234},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1237},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/token.rs","byte_start":181623,"byte_end":181626,"line_start":18,"line_end":18,"column_start":5,"column_end":8},"name":"End","qualname":"::token::Token::End","value":"Token::End { rule, pos }","parent":{"krate":0,"index":1231},"children":[],"decl_id":null,"docs":" The ending `Position` of a matched `Rule`\n","sig":null,"attributes":[{"value":"/ The ending `Position` of a matched `Rule`","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/token.rs","byte_start":181573,"byte_end":181618,"line_start":17,"line_end":17,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":1238},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/token.rs","byte_start":181629,"byte_end":181633,"line_start":18,"line_end":18,"column_start":11,"column_end":15},"name":"rule","qualname":"::token::Token::End::rule","value":"R","parent":{"krate":0,"index":1237},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1239},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/token.rs","byte_start":181638,"byte_end":181641,"line_start":18,"line_end":18,"column_start":20,"column_end":23},"name":"pos","qualname":"::token::Token::End::pos","value":"position::Position<'i>","parent":{"krate":0,"index":1237},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1231},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/token.rs","byte_start":181460,"byte_end":181465,"line_start":14,"line_end":14,"column_start":10,"column_end":15},"name":"Token","qualname":"::token::Token","value":"enum Token<'i, R> {\n    Start {\n            rule: R,\n            pos: Position,\n        },\n    End {\n            rule: R,\n            pos: Position,\n        },\n}","parent":null,"children":[{"krate":0,"index":1234},{"krate":0,"index":1237}],"decl_id":null,"docs":" A token generated by a `Parser`.\n","sig":null,"attributes":[{"value":"/ A token generated by a `Parser`.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/token.rs","byte_start":181369,"byte_end":181405,"line_start":12,"line_end":12,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":914},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unicode","qualname":"::unicode","value":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","parent":null,"children":[{"krate":0,"index":915},{"krate":0,"index":918},{"krate":0,"index":1268},{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1338},{"krate":0,"index":1339},{"krate":0,"index":1340},{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1343},{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":1346},{"krate":0,"index":1347},{"krate":0,"index":1348},{"krate":0,"index":1349},{"krate":0,"index":1350},{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":1353},{"krate":0,"index":1354},{"krate":0,"index":1355},{"krate":0,"index":1356},{"krate":0,"index":1357},{"krate":0,"index":1358},{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1375},{"krate":0,"index":1376},{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1382},{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1429},{"krate":0,"index":1430},{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1433},{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1436},{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":1440},{"krate":0,"index":1441},{"krate":0,"index":1442},{"krate":0,"index":1443},{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1446},{"krate":0,"index":1447},{"krate":0,"index":1448},{"krate":0,"index":1449},{"krate":0,"index":1450},{"krate":0,"index":1451},{"krate":0,"index":1452},{"krate":0,"index":1453},{"krate":0,"index":1454},{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1459},{"krate":0,"index":919}],"decl_id":null,"docs":" Character inclusion in binary or General_Category value Unicode sets.","sig":null,"attributes":[{"value":"/ Character inclusion in binary or General_Category value Unicode sets.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":181662,"byte_end":181735,"line_start":1,"line_end":1,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":181736,"byte_end":181739,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ We rely on dead code elimination to remove the tables that aren't needed.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":181740,"byte_end":181817,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"allow(bad_style)","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":181819,"byte_end":181839,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":181840,"byte_end":181862,"line_start":6,"line_end":6,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":1330},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":182345,"byte_end":182355,"line_start":29,"line_end":29,"column_start":9,"column_end":19},"name":"ALPHABETIC","qualname":"::unicode::ALPHABETIC","value":"fn ALPHABETIC(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1331},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":182357,"byte_end":182369,"line_start":29,"line_end":29,"column_start":21,"column_end":33},"name":"BIDI_CONTROL","qualname":"::unicode::BIDI_CONTROL","value":"fn BIDI_CONTROL(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1332},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":182371,"byte_end":182385,"line_start":29,"line_end":29,"column_start":35,"column_end":49},"name":"CASE_IGNORABLE","qualname":"::unicode::CASE_IGNORABLE","value":"fn CASE_IGNORABLE(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1333},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":182387,"byte_end":182392,"line_start":29,"line_end":29,"column_start":51,"column_end":56},"name":"CASED","qualname":"::unicode::CASED","value":"fn CASED(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1334},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":182394,"byte_end":182417,"line_start":29,"line_end":29,"column_start":58,"column_end":81},"name":"CHANGES_WHEN_CASEFOLDED","qualname":"::unicode::CHANGES_WHEN_CASEFOLDED","value":"fn CHANGES_WHEN_CASEFOLDED(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1335},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":182427,"byte_end":182450,"line_start":30,"line_end":30,"column_start":9,"column_end":32},"name":"CHANGES_WHEN_CASEMAPPED","qualname":"::unicode::CHANGES_WHEN_CASEMAPPED","value":"fn CHANGES_WHEN_CASEMAPPED(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1336},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":182452,"byte_end":182475,"line_start":30,"line_end":30,"column_start":34,"column_end":57},"name":"CHANGES_WHEN_LOWERCASED","qualname":"::unicode::CHANGES_WHEN_LOWERCASED","value":"fn CHANGES_WHEN_LOWERCASED(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1337},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":182477,"byte_end":182500,"line_start":30,"line_end":30,"column_start":59,"column_end":82},"name":"CHANGES_WHEN_TITLECASED","qualname":"::unicode::CHANGES_WHEN_TITLECASED","value":"fn CHANGES_WHEN_TITLECASED(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1338},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":182510,"byte_end":182533,"line_start":31,"line_end":31,"column_start":9,"column_end":32},"name":"CHANGES_WHEN_UPPERCASED","qualname":"::unicode::CHANGES_WHEN_UPPERCASED","value":"fn CHANGES_WHEN_UPPERCASED(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1339},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":182535,"byte_end":182539,"line_start":31,"line_end":31,"column_start":34,"column_end":38},"name":"DASH","qualname":"::unicode::DASH","value":"fn DASH(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1340},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":182541,"byte_end":182569,"line_start":31,"line_end":31,"column_start":40,"column_end":68},"name":"DEFAULT_IGNORABLE_CODE_POINT","qualname":"::unicode::DEFAULT_IGNORABLE_CODE_POINT","value":"fn DEFAULT_IGNORABLE_CODE_POINT(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1341},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":182571,"byte_end":182581,"line_start":31,"line_end":31,"column_start":70,"column_end":80},"name":"DEPRECATED","qualname":"::unicode::DEPRECATED","value":"fn DEPRECATED(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1342},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":182583,"byte_end":182592,"line_start":31,"line_end":31,"column_start":82,"column_end":91},"name":"DIACRITIC","qualname":"::unicode::DIACRITIC","value":"fn DIACRITIC(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1343},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":182602,"byte_end":182610,"line_start":32,"line_end":32,"column_start":9,"column_end":17},"name":"EXTENDER","qualname":"::unicode::EXTENDER","value":"fn EXTENDER(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1344},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":182612,"byte_end":182625,"line_start":32,"line_end":32,"column_start":19,"column_end":32},"name":"GRAPHEME_BASE","qualname":"::unicode::GRAPHEME_BASE","value":"fn GRAPHEME_BASE(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1345},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":182627,"byte_end":182642,"line_start":32,"line_end":32,"column_start":34,"column_end":49},"name":"GRAPHEME_EXTEND","qualname":"::unicode::GRAPHEME_EXTEND","value":"fn GRAPHEME_EXTEND(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1346},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":182644,"byte_end":182657,"line_start":32,"line_end":32,"column_start":51,"column_end":64},"name":"GRAPHEME_LINK","qualname":"::unicode::GRAPHEME_LINK","value":"fn GRAPHEME_LINK(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1347},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":182659,"byte_end":182668,"line_start":32,"line_end":32,"column_start":66,"column_end":75},"name":"HEX_DIGIT","qualname":"::unicode::HEX_DIGIT","value":"fn HEX_DIGIT(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1348},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":182670,"byte_end":182676,"line_start":32,"line_end":32,"column_start":77,"column_end":83},"name":"HYPHEN","qualname":"::unicode::HYPHEN","value":"fn HYPHEN(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1349},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":182686,"byte_end":182705,"line_start":33,"line_end":33,"column_start":9,"column_end":28},"name":"IDS_BINARY_OPERATOR","qualname":"::unicode::IDS_BINARY_OPERATOR","value":"fn IDS_BINARY_OPERATOR(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1350},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":182707,"byte_end":182727,"line_start":33,"line_end":33,"column_start":30,"column_end":50},"name":"IDS_TRINARY_OPERATOR","qualname":"::unicode::IDS_TRINARY_OPERATOR","value":"fn IDS_TRINARY_OPERATOR(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1351},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":182729,"byte_end":182740,"line_start":33,"line_end":33,"column_start":52,"column_end":63},"name":"ID_CONTINUE","qualname":"::unicode::ID_CONTINUE","value":"fn ID_CONTINUE(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1352},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":182742,"byte_end":182750,"line_start":33,"line_end":33,"column_start":65,"column_end":73},"name":"ID_START","qualname":"::unicode::ID_START","value":"fn ID_START(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1353},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":182752,"byte_end":182763,"line_start":33,"line_end":33,"column_start":75,"column_end":86},"name":"IDEOGRAPHIC","qualname":"::unicode::IDEOGRAPHIC","value":"fn IDEOGRAPHIC(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1354},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":182765,"byte_end":182777,"line_start":33,"line_end":33,"column_start":88,"column_end":100},"name":"JOIN_CONTROL","qualname":"::unicode::JOIN_CONTROL","value":"fn JOIN_CONTROL(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1355},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":182787,"byte_end":182810,"line_start":34,"line_end":34,"column_start":9,"column_end":32},"name":"LOGICAL_ORDER_EXCEPTION","qualname":"::unicode::LOGICAL_ORDER_EXCEPTION","value":"fn LOGICAL_ORDER_EXCEPTION(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1356},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":182812,"byte_end":182821,"line_start":34,"line_end":34,"column_start":34,"column_end":43},"name":"LOWERCASE","qualname":"::unicode::LOWERCASE","value":"fn LOWERCASE(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1357},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":182823,"byte_end":182827,"line_start":34,"line_end":34,"column_start":45,"column_end":49},"name":"MATH","qualname":"::unicode::MATH","value":"fn MATH(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1358},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":182829,"byte_end":182852,"line_start":34,"line_end":34,"column_start":51,"column_end":74},"name":"NONCHARACTER_CODE_POINT","qualname":"::unicode::NONCHARACTER_CODE_POINT","value":"fn NONCHARACTER_CODE_POINT(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1359},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":182854,"byte_end":182870,"line_start":34,"line_end":34,"column_start":76,"column_end":92},"name":"OTHER_ALPHABETIC","qualname":"::unicode::OTHER_ALPHABETIC","value":"fn OTHER_ALPHABETIC(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1360},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":182880,"byte_end":182914,"line_start":35,"line_end":35,"column_start":9,"column_end":43},"name":"OTHER_DEFAULT_IGNORABLE_CODE_POINT","qualname":"::unicode::OTHER_DEFAULT_IGNORABLE_CODE_POINT","value":"fn OTHER_DEFAULT_IGNORABLE_CODE_POINT(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1361},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":182916,"byte_end":182937,"line_start":35,"line_end":35,"column_start":45,"column_end":66},"name":"OTHER_GRAPHEME_EXTEND","qualname":"::unicode::OTHER_GRAPHEME_EXTEND","value":"fn OTHER_GRAPHEME_EXTEND(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1362},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":182939,"byte_end":182956,"line_start":35,"line_end":35,"column_start":68,"column_end":85},"name":"OTHER_ID_CONTINUE","qualname":"::unicode::OTHER_ID_CONTINUE","value":"fn OTHER_ID_CONTINUE(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1363},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":182966,"byte_end":182980,"line_start":36,"line_end":36,"column_start":9,"column_end":23},"name":"OTHER_ID_START","qualname":"::unicode::OTHER_ID_START","value":"fn OTHER_ID_START(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1364},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":182982,"byte_end":182997,"line_start":36,"line_end":36,"column_start":25,"column_end":40},"name":"OTHER_LOWERCASE","qualname":"::unicode::OTHER_LOWERCASE","value":"fn OTHER_LOWERCASE(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1365},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":182999,"byte_end":183009,"line_start":36,"line_end":36,"column_start":42,"column_end":52},"name":"OTHER_MATH","qualname":"::unicode::OTHER_MATH","value":"fn OTHER_MATH(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1366},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183011,"byte_end":183026,"line_start":36,"line_end":36,"column_start":54,"column_end":69},"name":"OTHER_UPPERCASE","qualname":"::unicode::OTHER_UPPERCASE","value":"fn OTHER_UPPERCASE(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1367},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183028,"byte_end":183042,"line_start":36,"line_end":36,"column_start":71,"column_end":85},"name":"PATTERN_SYNTAX","qualname":"::unicode::PATTERN_SYNTAX","value":"fn PATTERN_SYNTAX(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1368},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183052,"byte_end":183071,"line_start":37,"line_end":37,"column_start":9,"column_end":28},"name":"PATTERN_WHITE_SPACE","qualname":"::unicode::PATTERN_WHITE_SPACE","value":"fn PATTERN_WHITE_SPACE(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1369},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183073,"byte_end":183101,"line_start":37,"line_end":37,"column_start":30,"column_end":58},"name":"PREPENDED_CONCATENATION_MARK","qualname":"::unicode::PREPENDED_CONCATENATION_MARK","value":"fn PREPENDED_CONCATENATION_MARK(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1370},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183103,"byte_end":183117,"line_start":37,"line_end":37,"column_start":60,"column_end":74},"name":"QUOTATION_MARK","qualname":"::unicode::QUOTATION_MARK","value":"fn QUOTATION_MARK(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1371},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183119,"byte_end":183126,"line_start":37,"line_end":37,"column_start":76,"column_end":83},"name":"RADICAL","qualname":"::unicode::RADICAL","value":"fn RADICAL(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1372},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183136,"byte_end":183154,"line_start":38,"line_end":38,"column_start":9,"column_end":27},"name":"REGIONAL_INDICATOR","qualname":"::unicode::REGIONAL_INDICATOR","value":"fn REGIONAL_INDICATOR(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1373},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183156,"byte_end":183173,"line_start":38,"line_end":38,"column_start":29,"column_end":46},"name":"SENTENCE_TERMINAL","qualname":"::unicode::SENTENCE_TERMINAL","value":"fn SENTENCE_TERMINAL(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1374},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183175,"byte_end":183186,"line_start":38,"line_end":38,"column_start":48,"column_end":59},"name":"SOFT_DOTTED","qualname":"::unicode::SOFT_DOTTED","value":"fn SOFT_DOTTED(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1375},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183188,"byte_end":183208,"line_start":38,"line_end":38,"column_start":61,"column_end":81},"name":"TERMINAL_PUNCTUATION","qualname":"::unicode::TERMINAL_PUNCTUATION","value":"fn TERMINAL_PUNCTUATION(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1376},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183210,"byte_end":183227,"line_start":38,"line_end":38,"column_start":83,"column_end":100},"name":"UNIFIED_IDEOGRAPH","qualname":"::unicode::UNIFIED_IDEOGRAPH","value":"fn UNIFIED_IDEOGRAPH(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1377},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183237,"byte_end":183246,"line_start":39,"line_end":39,"column_start":9,"column_end":18},"name":"UPPERCASE","qualname":"::unicode::UPPERCASE","value":"fn UPPERCASE(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1378},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183248,"byte_end":183266,"line_start":39,"line_end":39,"column_start":20,"column_end":38},"name":"VARIATION_SELECTOR","qualname":"::unicode::VARIATION_SELECTOR","value":"fn VARIATION_SELECTOR(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1379},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183268,"byte_end":183279,"line_start":39,"line_end":39,"column_start":40,"column_end":51},"name":"WHITE_SPACE","qualname":"::unicode::WHITE_SPACE","value":"fn WHITE_SPACE(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1380},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183281,"byte_end":183293,"line_start":39,"line_end":39,"column_start":53,"column_end":65},"name":"XID_CONTINUE","qualname":"::unicode::XID_CONTINUE","value":"fn XID_CONTINUE(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1381},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183295,"byte_end":183304,"line_start":39,"line_end":39,"column_start":67,"column_end":76},"name":"XID_START","qualname":"::unicode::XID_START","value":"fn XID_START(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1422},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183346,"byte_end":183358,"line_start":44,"line_end":44,"column_start":9,"column_end":21},"name":"CASED_LETTER","qualname":"::unicode::CASED_LETTER","value":"fn CASED_LETTER(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1423},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183360,"byte_end":183377,"line_start":44,"line_end":44,"column_start":23,"column_end":40},"name":"CLOSE_PUNCTUATION","qualname":"::unicode::CLOSE_PUNCTUATION","value":"fn CLOSE_PUNCTUATION(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1424},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183379,"byte_end":183400,"line_start":44,"line_end":44,"column_start":42,"column_end":63},"name":"CONNECTOR_PUNCTUATION","qualname":"::unicode::CONNECTOR_PUNCTUATION","value":"fn CONNECTOR_PUNCTUATION(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1425},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183402,"byte_end":183409,"line_start":44,"line_end":44,"column_start":65,"column_end":72},"name":"CONTROL","qualname":"::unicode::CONTROL","value":"fn CONTROL(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1426},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183411,"byte_end":183426,"line_start":44,"line_end":44,"column_start":74,"column_end":89},"name":"CURRENCY_SYMBOL","qualname":"::unicode::CURRENCY_SYMBOL","value":"fn CURRENCY_SYMBOL(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1427},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183436,"byte_end":183452,"line_start":45,"line_end":45,"column_start":9,"column_end":25},"name":"DASH_PUNCTUATION","qualname":"::unicode::DASH_PUNCTUATION","value":"fn DASH_PUNCTUATION(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1428},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183454,"byte_end":183468,"line_start":45,"line_end":45,"column_start":27,"column_end":41},"name":"DECIMAL_NUMBER","qualname":"::unicode::DECIMAL_NUMBER","value":"fn DECIMAL_NUMBER(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1429},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183470,"byte_end":183484,"line_start":45,"line_end":45,"column_start":43,"column_end":57},"name":"ENCLOSING_MARK","qualname":"::unicode::ENCLOSING_MARK","value":"fn ENCLOSING_MARK(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1430},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183486,"byte_end":183503,"line_start":45,"line_end":45,"column_start":59,"column_end":76},"name":"FINAL_PUNCTUATION","qualname":"::unicode::FINAL_PUNCTUATION","value":"fn FINAL_PUNCTUATION(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1431},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183505,"byte_end":183511,"line_start":45,"line_end":45,"column_start":78,"column_end":84},"name":"FORMAT","qualname":"::unicode::FORMAT","value":"fn FORMAT(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1432},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183521,"byte_end":183540,"line_start":46,"line_end":46,"column_start":9,"column_end":28},"name":"INITIAL_PUNCTUATION","qualname":"::unicode::INITIAL_PUNCTUATION","value":"fn INITIAL_PUNCTUATION(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1433},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183542,"byte_end":183548,"line_start":46,"line_end":46,"column_start":30,"column_end":36},"name":"LETTER","qualname":"::unicode::LETTER","value":"fn LETTER(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1434},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183550,"byte_end":183563,"line_start":46,"line_end":46,"column_start":38,"column_end":51},"name":"LETTER_NUMBER","qualname":"::unicode::LETTER_NUMBER","value":"fn LETTER_NUMBER(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1435},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183565,"byte_end":183579,"line_start":46,"line_end":46,"column_start":53,"column_end":67},"name":"LINE_SEPARATOR","qualname":"::unicode::LINE_SEPARATOR","value":"fn LINE_SEPARATOR(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1436},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183581,"byte_end":183597,"line_start":46,"line_end":46,"column_start":69,"column_end":85},"name":"LOWERCASE_LETTER","qualname":"::unicode::LOWERCASE_LETTER","value":"fn LOWERCASE_LETTER(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1437},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183599,"byte_end":183603,"line_start":46,"line_end":46,"column_start":87,"column_end":91},"name":"MARK","qualname":"::unicode::MARK","value":"fn MARK(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1438},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183613,"byte_end":183624,"line_start":47,"line_end":47,"column_start":9,"column_end":20},"name":"MATH_SYMBOL","qualname":"::unicode::MATH_SYMBOL","value":"fn MATH_SYMBOL(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1439},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183626,"byte_end":183641,"line_start":47,"line_end":47,"column_start":22,"column_end":37},"name":"MODIFIER_LETTER","qualname":"::unicode::MODIFIER_LETTER","value":"fn MODIFIER_LETTER(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1440},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183643,"byte_end":183658,"line_start":47,"line_end":47,"column_start":39,"column_end":54},"name":"MODIFIER_SYMBOL","qualname":"::unicode::MODIFIER_SYMBOL","value":"fn MODIFIER_SYMBOL(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1441},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183660,"byte_end":183675,"line_start":47,"line_end":47,"column_start":56,"column_end":71},"name":"NONSPACING_MARK","qualname":"::unicode::NONSPACING_MARK","value":"fn NONSPACING_MARK(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1442},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183677,"byte_end":183683,"line_start":47,"line_end":47,"column_start":73,"column_end":79},"name":"NUMBER","qualname":"::unicode::NUMBER","value":"fn NUMBER(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1443},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183685,"byte_end":183701,"line_start":47,"line_end":47,"column_start":81,"column_end":97},"name":"OPEN_PUNCTUATION","qualname":"::unicode::OPEN_PUNCTUATION","value":"fn OPEN_PUNCTUATION(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1444},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183711,"byte_end":183716,"line_start":48,"line_end":48,"column_start":9,"column_end":14},"name":"OTHER","qualname":"::unicode::OTHER","value":"fn OTHER(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1445},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183718,"byte_end":183730,"line_start":48,"line_end":48,"column_start":16,"column_end":28},"name":"OTHER_LETTER","qualname":"::unicode::OTHER_LETTER","value":"fn OTHER_LETTER(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1446},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183732,"byte_end":183744,"line_start":48,"line_end":48,"column_start":30,"column_end":42},"name":"OTHER_NUMBER","qualname":"::unicode::OTHER_NUMBER","value":"fn OTHER_NUMBER(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1447},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183746,"byte_end":183763,"line_start":48,"line_end":48,"column_start":44,"column_end":61},"name":"OTHER_PUNCTUATION","qualname":"::unicode::OTHER_PUNCTUATION","value":"fn OTHER_PUNCTUATION(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1448},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183765,"byte_end":183777,"line_start":48,"line_end":48,"column_start":63,"column_end":75},"name":"OTHER_SYMBOL","qualname":"::unicode::OTHER_SYMBOL","value":"fn OTHER_SYMBOL(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1449},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183779,"byte_end":183798,"line_start":48,"line_end":48,"column_start":77,"column_end":96},"name":"PARAGRAPH_SEPARATOR","qualname":"::unicode::PARAGRAPH_SEPARATOR","value":"fn PARAGRAPH_SEPARATOR(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1450},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183808,"byte_end":183819,"line_start":49,"line_end":49,"column_start":9,"column_end":20},"name":"PRIVATE_USE","qualname":"::unicode::PRIVATE_USE","value":"fn PRIVATE_USE(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1451},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183821,"byte_end":183832,"line_start":49,"line_end":49,"column_start":22,"column_end":33},"name":"PUNCTUATION","qualname":"::unicode::PUNCTUATION","value":"fn PUNCTUATION(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1452},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183834,"byte_end":183843,"line_start":49,"line_end":49,"column_start":35,"column_end":44},"name":"SEPARATOR","qualname":"::unicode::SEPARATOR","value":"fn SEPARATOR(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1453},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183845,"byte_end":183860,"line_start":49,"line_end":49,"column_start":46,"column_end":61},"name":"SPACE_SEPARATOR","qualname":"::unicode::SPACE_SEPARATOR","value":"fn SPACE_SEPARATOR(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1454},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183862,"byte_end":183874,"line_start":49,"line_end":49,"column_start":63,"column_end":75},"name":"SPACING_MARK","qualname":"::unicode::SPACING_MARK","value":"fn SPACING_MARK(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1455},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183876,"byte_end":183885,"line_start":49,"line_end":49,"column_start":77,"column_end":86},"name":"SURROGATE","qualname":"::unicode::SURROGATE","value":"fn SURROGATE(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1456},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183887,"byte_end":183893,"line_start":49,"line_end":49,"column_start":88,"column_end":94},"name":"SYMBOL","qualname":"::unicode::SYMBOL","value":"fn SYMBOL(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1457},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183903,"byte_end":183919,"line_start":50,"line_end":50,"column_start":9,"column_end":25},"name":"TITLECASE_LETTER","qualname":"::unicode::TITLECASE_LETTER","value":"fn TITLECASE_LETTER(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1458},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183921,"byte_end":183931,"line_start":50,"line_end":50,"column_start":27,"column_end":37},"name":"UNASSIGNED","qualname":"::unicode::UNASSIGNED","value":"fn UNASSIGNED(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1459},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183933,"byte_end":183949,"line_start":50,"line_end":50,"column_start":39,"column_end":55},"name":"UPPERCASE_LETTER","qualname":"::unicode::UPPERCASE_LETTER","value":"fn UPPERCASE_LETTER(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":919},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/unicode/mod.rs","byte_start":183968,"byte_end":183975,"line_start":54,"line_end":54,"column_start":8,"column_end":15},"name":"by_name","qualname":"::unicode::by_name","value":"fn by_name<'_>(&'_ str) -> Option<Box<dyn Fn(char) -> bool>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":922},"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":3759,"byte_end":3767,"line_start":113,"line_end":113,"column_start":11,"column_end":19},"name":"RuleType","qualname":"::RuleType","value":"RuleType: Copy + Debug + Eq + Hash + Ord","parent":null,"children":[],"decl_id":null,"docs":" A trait which parser rules must implement.","sig":null,"attributes":[{"value":"/ A trait which parser rules must implement.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":3399,"byte_end":3445,"line_start":106,"line_end":106,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":3446,"byte_end":3449,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ This trait is set up so that any struct that implements all of its required traits will","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":3450,"byte_end":3541,"line_start":108,"line_end":108,"column_start":1,"column_end":92}},{"value":"/ automatically implement this trait as well.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":3542,"byte_end":3589,"line_start":109,"line_end":109,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":3590,"byte_end":3593,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ This is essentially a [trait alias](https://github.com/rust-lang/rfcs/pull/1733). When trait","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":3594,"byte_end":3690,"line_start":111,"line_end":111,"column_start":1,"column_end":97}},{"value":"/ aliases are implemented, this may be replaced by one.","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":3691,"byte_end":3748,"line_start":112,"line_end":112,"column_start":1,"column_end":58}}]}],"impls":[{"id":2,"kind":"Inherent","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":6149,"byte_end":6154,"line_start":77,"line_end":77,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":19063,"byte_end":19075,"line_start":485,"line_end":485,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":20591,"byte_end":20596,"line_start":521,"line_end":521,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":20744,"byte_end":20756,"line_start":527,"line_end":527,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":32620,"byte_end":32629,"line_start":50,"line_end":50,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":33975,"byte_end":33984,"line_start":102,"line_end":102,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":34335,"byte_end":34344,"line_start":118,"line_end":118,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":34668,"byte_end":34677,"line_start":132,"line_end":132,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":34905,"byte_end":34914,"line_start":140,"line_end":140,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":37754,"byte_end":37758,"line_start":63,"line_end":63,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":43480,"byte_end":43485,"line_start":262,"line_end":262,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":43752,"byte_end":43756,"line_start":270,"line_end":270,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":44090,"byte_end":44094,"line_start":280,"line_end":280,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":44814,"byte_end":44818,"line_start":305,"line_end":305,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":45043,"byte_end":45047,"line_start":313,"line_end":313,"column_start":24,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":45086,"byte_end":45090,"line_start":315,"line_end":315,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":48289,"byte_end":48294,"line_start":55,"line_end":55,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":53455,"byte_end":53460,"line_start":224,"line_end":224,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":53692,"byte_end":53697,"line_start":234,"line_end":234,"column_start":47,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":54026,"byte_end":54031,"line_start":248,"line_end":248,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":54202,"byte_end":54207,"line_start":254,"line_end":254,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":361}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":54522,"byte_end":54527,"line_start":267,"line_end":267,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":54790,"byte_end":54795,"line_start":276,"line_end":276,"column_start":24,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":54834,"byte_end":54839,"line_start":278,"line_end":278,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/tokens.rs","byte_start":61105,"byte_end":61111,"line_start":64,"line_end":64,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/tokens.rs","byte_start":62140,"byte_end":62146,"line_start":95,"line_end":95,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":409},{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/tokens.rs","byte_start":62459,"byte_end":62465,"line_start":111,"line_end":111,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/tokens.rs","byte_start":62743,"byte_end":62749,"line_start":125,"line_end":125,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":81147,"byte_end":81163,"line_start":78,"line_end":78,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":81381,"byte_end":81397,"line_start":86,"line_end":86,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":518},{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":83554,"byte_end":83565,"line_start":160,"line_end":160,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":539},{"krate":0,"index":541},{"krate":0,"index":543},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":554},{"krate":0,"index":556},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":119690,"byte_end":119698,"line_start":29,"line_end":29,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":612},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":130384,"byte_end":130392,"line_start":366,"line_end":366,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":130558,"byte_end":130566,"line_start":372,"line_end":372,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":130713,"byte_end":130721,"line_start":378,"line_end":378,"column_start":17,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":130754,"byte_end":130762,"line_start":380,"line_end":380,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":636}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":131000,"byte_end":131008,"line_start":390,"line_end":390,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":131196,"byte_end":131204,"line_start":397,"line_end":397,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":139596,"byte_end":139598,"line_start":50,"line_end":50,"column_start":19,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":140272,"byte_end":140274,"line_start":79,"line_end":79,"column_start":29,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":689},{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":145224,"byte_end":145235,"line_start":203,"line_end":203,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":145315,"byte_end":145326,"line_start":209,"line_end":209,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":147365,"byte_end":147379,"line_start":279,"line_end":279,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":743},{"krate":0,"index":745},{"krate":0,"index":747},{"krate":0,"index":749},{"krate":0,"index":751},{"krate":0,"index":753},{"krate":0,"index":755},{"krate":0,"index":757}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":154099,"byte_end":154107,"line_start":124,"line_end":124,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":154781,"byte_end":154789,"line_start":149,"line_end":149,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":786},{"krate":0,"index":787}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":156915,"byte_end":156926,"line_start":212,"line_end":212,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":792},{"krate":0,"index":795},{"krate":0,"index":798},{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":162814,"byte_end":162818,"line_start":35,"line_end":35,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":169994,"byte_end":169998,"line_start":265,"line_end":265,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":170269,"byte_end":170273,"line_start":275,"line_end":275,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":170445,"byte_end":170449,"line_start":281,"line_end":281,"column_start":17,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":170476,"byte_end":170480,"line_start":283,"line_end":283,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":862}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":170982,"byte_end":170991,"line_start":301,"line_end":301,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":870},{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":171728,"byte_end":171733,"line_start":328,"line_end":328,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":877},{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/stack.rs","byte_start":176097,"byte_end":176102,"line_start":23,"line_end":23,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/stack.rs","byte_start":178340,"byte_end":178345,"line_start":105,"line_end":105,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":908},{"krate":0,"index":909}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":3857,"byte_end":3858,"line_start":115,"line_end":115,"column_start":54,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":2934,"byte_end":2939,"line_start":87,"line_end":87,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":54}},{"kind":"Mod","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":2949,"byte_end":2958,"line_start":88,"line_end":88,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":121}},{"kind":"Mod","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":3024,"byte_end":3036,"line_start":93,"line_end":93,"column_start":9,"column_end":21},"ref_id":{"krate":0,"index":645}},{"kind":"Mod","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":3320,"byte_end":3332,"line_start":99,"line_end":99,"column_start":9,"column_end":21},"ref_id":{"krate":0,"index":759}},{"kind":"Mod","span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":3389,"byte_end":3396,"line_start":104,"line_end":104,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":914}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":6149,"byte_end":6154,"line_start":77,"line_end":77,"column_start":19,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":946},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":19063,"byte_end":19075,"line_start":485,"line_end":485,"column_start":19,"column_end":31},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":977},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":20591,"byte_end":20596,"line_start":521,"line_end":521,"column_start":36,"column_end":41},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":946},"to":{"krate":1,"index":10273}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/error.rs","byte_start":20744,"byte_end":20756,"line_start":527,"line_end":527,"column_start":36,"column_end":48},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":977},"to":{"krate":1,"index":10273}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":32620,"byte_end":32629,"line_start":50,"line_end":50,"column_start":23,"column_end":32},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":33975,"byte_end":33984,"line_start":102,"line_end":102,"column_start":36,"column_end":45},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":152},"to":{"krate":1,"index":8574}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":34335,"byte_end":34344,"line_start":118,"line_end":118,"column_start":47,"column_end":56},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":152},"to":{"krate":1,"index":8420}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":34668,"byte_end":34677,"line_start":132,"line_end":132,"column_start":38,"column_end":47},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":152},"to":{"krate":1,"index":10266}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/flat_pairs.rs","byte_start":34905,"byte_end":34914,"line_start":140,"line_end":140,"column_start":30,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":152},"to":{"krate":1,"index":2871}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":37754,"byte_end":37758,"line_start":63,"line_end":63,"column_start":23,"column_end":27},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1029},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":43480,"byte_end":43485,"line_start":262,"line_end":262,"column_start":23,"column_end":28},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1040},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":43752,"byte_end":43756,"line_start":270,"line_end":270,"column_start":38,"column_end":42},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1029},"to":{"krate":1,"index":10266}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":44090,"byte_end":44094,"line_start":280,"line_end":280,"column_start":40,"column_end":44},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1029},"to":{"krate":1,"index":10273}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":44814,"byte_end":44818,"line_start":305,"line_end":305,"column_start":38,"column_end":42},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1029},"to":{"krate":1,"index":2901}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":45043,"byte_end":45047,"line_start":313,"line_end":313,"column_start":24,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1029},"to":{"krate":1,"index":2906}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pair.rs","byte_start":45086,"byte_end":45090,"line_start":315,"line_end":315,"column_start":28,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1029},"to":{"krate":1,"index":10504}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":48289,"byte_end":48294,"line_start":55,"line_end":55,"column_start":23,"column_end":28},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1040},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":53455,"byte_end":53460,"line_start":224,"line_end":224,"column_start":36,"column_end":41},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1040},"to":{"krate":1,"index":8574}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":53692,"byte_end":53697,"line_start":234,"line_end":234,"column_start":47,"column_end":52},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1040},"to":{"krate":1,"index":8420}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":54026,"byte_end":54031,"line_start":248,"line_end":248,"column_start":38,"column_end":43},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1040},"to":{"krate":1,"index":10266}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":54202,"byte_end":54207,"line_start":254,"line_end":254,"column_start":40,"column_end":45},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1040},"to":{"krate":1,"index":10273}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":54522,"byte_end":54527,"line_start":267,"line_end":267,"column_start":38,"column_end":43},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1040},"to":{"krate":1,"index":2901}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":54790,"byte_end":54795,"line_start":276,"line_end":276,"column_start":24,"column_end":29},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1040},"to":{"krate":1,"index":2906}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/pairs.rs","byte_start":54834,"byte_end":54839,"line_start":278,"line_end":278,"column_start":28,"column_end":33},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1040},"to":{"krate":1,"index":10504}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/tokens.rs","byte_start":61105,"byte_end":61111,"line_start":64,"line_end":64,"column_start":23,"column_end":29},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1064},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/tokens.rs","byte_start":62140,"byte_end":62146,"line_start":95,"line_end":95,"column_start":36,"column_end":42},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1064},"to":{"krate":1,"index":8574}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/tokens.rs","byte_start":62459,"byte_end":62465,"line_start":111,"line_end":111,"column_start":47,"column_end":53},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1064},"to":{"krate":1,"index":8420}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/iterators/tokens.rs","byte_start":62743,"byte_end":62749,"line_start":125,"line_end":125,"column_start":38,"column_end":44},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1064},"to":{"krate":1,"index":10266}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":81147,"byte_end":81163,"line_start":78,"line_end":78,"column_start":18,"column_end":34},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1127},"to":{"krate":1,"index":3227}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":81381,"byte_end":81397,"line_start":86,"line_end":86,"column_start":6,"column_end":22},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1127},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/parser_state.rs","byte_start":83554,"byte_end":83565,"line_start":160,"line_end":160,"column_start":23,"column_end":34},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1131},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":119690,"byte_end":119698,"line_start":29,"line_end":29,"column_start":10,"column_end":18},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":130384,"byte_end":130392,"line_start":366,"line_end":366,"column_start":25,"column_end":33},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1147},"to":{"krate":1,"index":10266}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":130558,"byte_end":130566,"line_start":372,"line_end":372,"column_start":24,"column_end":32},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1147},"to":{"krate":1,"index":2901}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":130713,"byte_end":130721,"line_start":378,"line_end":378,"column_start":17,"column_end":25},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1147},"to":{"krate":1,"index":2906}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":130754,"byte_end":130762,"line_start":380,"line_end":380,"column_start":25,"column_end":33},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1147},"to":{"krate":1,"index":2947}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":131000,"byte_end":131008,"line_start":390,"line_end":390,"column_start":18,"column_end":26},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1147},"to":{"krate":1,"index":2937}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/position.rs","byte_start":131196,"byte_end":131204,"line_start":397,"line_end":397,"column_start":19,"column_end":27},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1147},"to":{"krate":1,"index":10504}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":139596,"byte_end":139598,"line_start":50,"line_end":50,"column_start":19,"column_end":21},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":669},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":140272,"byte_end":140274,"line_start":79,"line_end":79,"column_start":29,"column_end":31},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":669},"to":{"krate":1,"index":3381}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":145224,"byte_end":145235,"line_start":203,"line_end":203,"column_start":31,"column_end":42},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":693},"to":{"krate":1,"index":3227}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":145315,"byte_end":145326,"line_start":209,"line_end":209,"column_start":19,"column_end":30},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":693},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/pratt_parser.rs","byte_start":147365,"byte_end":147379,"line_start":279,"line_end":279,"column_start":27,"column_end":41},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":725},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":154099,"byte_end":154107,"line_start":124,"line_end":124,"column_start":19,"column_end":27},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":154781,"byte_end":154789,"line_start":149,"line_end":149,"column_start":29,"column_end":37},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1188},"to":{"krate":1,"index":3381}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/prec_climber.rs","byte_start":156915,"byte_end":156926,"line_start":212,"line_end":212,"column_start":19,"column_end":30},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":162814,"byte_end":162818,"line_start":35,"line_end":35,"column_start":10,"column_end":14},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":169994,"byte_end":169998,"line_start":265,"line_end":265,"column_start":25,"column_end":29},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1202},"to":{"krate":1,"index":10266}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":170269,"byte_end":170273,"line_start":275,"line_end":275,"column_start":24,"column_end":28},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1202},"to":{"krate":1,"index":2901}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":170445,"byte_end":170449,"line_start":281,"line_end":281,"column_start":17,"column_end":21},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1202},"to":{"krate":1,"index":2906}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":170476,"byte_end":170480,"line_start":283,"line_end":283,"column_start":19,"column_end":23},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1202},"to":{"krate":1,"index":10504}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":170982,"byte_end":170991,"line_start":301,"line_end":301,"column_start":23,"column_end":32},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":864},"to":{"krate":1,"index":8574}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/span.rs","byte_start":171728,"byte_end":171733,"line_start":328,"line_end":328,"column_start":23,"column_end":28},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":872},"to":{"krate":1,"index":8574}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/stack.rs","byte_start":176097,"byte_end":176102,"line_start":23,"line_end":23,"column_start":16,"column_end":21},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1212},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/stack.rs","byte_start":178340,"byte_end":178345,"line_start":105,"line_end":105,"column_start":40,"column_end":45},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1212},"to":{"krate":1,"index":3553}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":3769,"byte_end":3773,"line_start":113,"line_end":113,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":1,"index":3259},"to":{"krate":0,"index":922}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":3776,"byte_end":3781,"line_start":113,"line_end":113,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":1,"index":10266},"to":{"krate":0,"index":922}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":3784,"byte_end":3786,"line_start":113,"line_end":113,"column_start":36,"column_end":38},"kind":"SuperTrait","from":{"krate":1,"index":2906},"to":{"krate":0,"index":922}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":3789,"byte_end":3793,"line_start":113,"line_end":113,"column_start":41,"column_end":45},"kind":"SuperTrait","from":{"krate":1,"index":10504},"to":{"krate":0,"index":922}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":3796,"byte_end":3799,"line_start":113,"line_end":113,"column_start":48,"column_end":51},"kind":"SuperTrait","from":{"krate":1,"index":2937},"to":{"krate":0,"index":922}},{"span":{"file_name":"/Users/samv/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.4.0/src/lib.rs","byte_start":3857,"byte_end":3858,"line_start":115,"line_end":115,"column_start":54,"column_end":55},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":924},"to":{"krate":0,"index":922}}]}